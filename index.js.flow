// @flow
export type StandardLonghandProperties<TLength = string | 0> = {
  alignContent?: GlobalsString,
  alignItems?: GlobalsString,
  alignSelf?: GlobalsString,
  animationDelay?: GlobalsString,
  animationDirection?: GlobalsString,
  animationDuration?: GlobalsString,
  animationFillMode?: GlobalsString,
  animationIterationCount?: AnimationIterationCountProperty,
  animationName?: GlobalsString,
  animationPlayState?: GlobalsString,
  animationTimingFunction?: GlobalsString,
  appearance?: AppearanceProperty,
  backdropFilter?: GlobalsString,
  backfaceVisibility?: BackfaceVisibilityProperty,
  backgroundAttachment?: GlobalsString,
  backgroundBlendMode?: GlobalsString,
  backgroundClip?: GlobalsString,
  backgroundColor?: GlobalsString,
  backgroundImage?: GlobalsString,
  backgroundOrigin?: GlobalsString,
  backgroundPosition?: BackgroundPositionProperty<TLength>,
  backgroundPositionX?: BackgroundPositionXProperty<TLength>,
  backgroundPositionY?: BackgroundPositionYProperty<TLength>,
  backgroundRepeat?: GlobalsString,
  backgroundSize?: BackgroundSizeProperty<TLength>,
  blockOverflow?: GlobalsString,
  blockSize?: BlockSizeProperty<TLength>,
  borderBlockColor?: GlobalsString,
  borderBlockEndColor?: GlobalsString,
  borderBlockEndStyle?: BorderBlockEndStyleProperty,
  borderBlockEndWidth?: BorderBlockEndWidthProperty<TLength>,
  borderBlockStartColor?: GlobalsString,
  borderBlockStartStyle?: BorderBlockStartStyleProperty,
  borderBlockStartWidth?: BorderBlockStartWidthProperty<TLength>,
  borderBlockStyle?: BorderBlockStyleProperty,
  borderBlockWidth?: BorderBlockWidthProperty<TLength>,
  borderBottomColor?: GlobalsString,
  borderBottomLeftRadius?: BorderBottomLeftRadiusProperty<TLength>,
  borderBottomRightRadius?: BorderBottomRightRadiusProperty<TLength>,
  borderBottomStyle?: BorderBottomStyleProperty,
  borderBottomWidth?: BorderBottomWidthProperty<TLength>,
  borderCollapse?: BorderCollapseProperty,
  borderEndEndRadius?: BorderEndEndRadiusProperty<TLength>,
  borderEndStartRadius?: BorderEndStartRadiusProperty<TLength>,
  borderImageOutset?: BorderImageOutsetProperty<TLength>,
  borderImageRepeat?: GlobalsString,
  borderImageSlice?: BorderImageSliceProperty,
  borderImageSource?: GlobalsString,
  borderImageWidth?: BorderImageWidthProperty<TLength>,
  borderInlineColor?: GlobalsString,
  borderInlineEndColor?: GlobalsString,
  borderInlineEndStyle?: BorderInlineEndStyleProperty,
  borderInlineEndWidth?: BorderInlineEndWidthProperty<TLength>,
  borderInlineStartColor?: GlobalsString,
  borderInlineStartStyle?: BorderInlineStartStyleProperty,
  borderInlineStartWidth?: BorderInlineStartWidthProperty<TLength>,
  borderInlineStyle?: BorderInlineStyleProperty,
  borderInlineWidth?: BorderInlineWidthProperty<TLength>,
  borderLeftColor?: GlobalsString,
  borderLeftStyle?: BorderLeftStyleProperty,
  borderLeftWidth?: BorderLeftWidthProperty<TLength>,
  borderRightColor?: GlobalsString,
  borderRightStyle?: BorderRightStyleProperty,
  borderRightWidth?: BorderRightWidthProperty<TLength>,
  borderSpacing?: BorderSpacingProperty<TLength>,
  borderStartEndRadius?: BorderStartEndRadiusProperty<TLength>,
  borderStartStartRadius?: BorderStartStartRadiusProperty<TLength>,
  borderTopColor?: GlobalsString,
  borderTopLeftRadius?: BorderTopLeftRadiusProperty<TLength>,
  borderTopRightRadius?: BorderTopRightRadiusProperty<TLength>,
  borderTopStyle?: BorderTopStyleProperty,
  borderTopWidth?: BorderTopWidthProperty<TLength>,
  bottom?: BottomProperty<TLength>,
  boxDecorationBreak?: BoxDecorationBreakProperty,
  boxShadow?: GlobalsString,
  boxSizing?: BoxSizingProperty,
  breakAfter?: BreakAfterProperty,
  breakBefore?: BreakBeforeProperty,
  breakInside?: BreakInsideProperty,
  captionSide?: CaptionSideProperty,
  caretColor?: GlobalsString,
  clear?: ClearProperty,
  clipPath?: GlobalsString,
  color?: GlobalsString,
  colorAdjust?: ColorAdjustProperty,
  columnCount?: ColumnCountProperty,
  columnFill?: ColumnFillProperty,
  columnGap?: ColumnGapProperty<TLength>,
  columnRuleColor?: GlobalsString,
  columnRuleStyle?: GlobalsString,
  columnRuleWidth?: ColumnRuleWidthProperty<TLength>,
  columnSpan?: ColumnSpanProperty,
  columnWidth?: ColumnWidthProperty<TLength>,
  contain?: GlobalsString,
  content?: GlobalsString,
  counterIncrement?: GlobalsString,
  counterReset?: GlobalsString,
  cursor?: GlobalsString,
  direction?: DirectionProperty,
  display?: GlobalsString,
  emptyCells?: EmptyCellsProperty,
  filter?: GlobalsString,
  flexBasis?: FlexBasisProperty<TLength>,
  flexDirection?: FlexDirectionProperty,
  flexGrow?: GlobalsNumber,
  flexShrink?: GlobalsNumber,
  flexWrap?: FlexWrapProperty,
  float?: FloatProperty,
  fontFamily?: GlobalsString,
  fontFeatureSettings?: GlobalsString,
  fontKerning?: FontKerningProperty,
  fontLanguageOverride?: GlobalsString,
  fontOpticalSizing?: FontOpticalSizingProperty,
  fontSize?: FontSizeProperty<TLength>,
  fontSizeAdjust?: FontSizeAdjustProperty,
  fontStretch?: GlobalsString,
  fontStyle?: GlobalsString,
  fontSynthesis?: GlobalsString,
  fontVariant?: GlobalsString,
  fontVariantCaps?: FontVariantCapsProperty,
  fontVariantEastAsian?: GlobalsString,
  fontVariantLigatures?: GlobalsString,
  fontVariantNumeric?: GlobalsString,
  fontVariantPosition?: FontVariantPositionProperty,
  fontVariationSettings?: GlobalsString,
  fontWeight?: FontWeightProperty,
  gridAutoColumns?: GridAutoColumnsProperty<TLength>,
  gridAutoFlow?: GlobalsString,
  gridAutoRows?: GridAutoRowsProperty<TLength>,
  gridColumnEnd?: GridColumnEndProperty,
  gridColumnStart?: GridColumnStartProperty,
  gridRowEnd?: GridRowEndProperty,
  gridRowStart?: GridRowStartProperty,
  gridTemplateAreas?: GlobalsString,
  gridTemplateColumns?: GridTemplateColumnsProperty<TLength>,
  gridTemplateRows?: GridTemplateRowsProperty<TLength>,
  hangingPunctuation?: GlobalsString,
  height?: HeightProperty<TLength>,
  hyphens?: HyphensProperty,
  imageOrientation?: GlobalsString,
  imageRendering?: ImageRenderingProperty,
  imageResolution?: GlobalsString,
  initialLetter?: InitialLetterProperty,
  inlineSize?: InlineSizeProperty<TLength>,
  insetBlockEnd?: InsetBlockEndProperty<TLength>,
  insetBlockStart?: InsetBlockStartProperty<TLength>,
  insetInlineEnd?: InsetInlineEndProperty<TLength>,
  insetInlineStart?: InsetInlineStartProperty<TLength>,
  isolation?: IsolationProperty,
  justifyContent?: GlobalsString,
  justifyItems?: GlobalsString,
  justifySelf?: GlobalsString,
  left?: LeftProperty<TLength>,
  letterSpacing?: LetterSpacingProperty<TLength>,
  lineBreak?: LineBreakProperty,
  lineHeight?: LineHeightProperty<TLength>,
  lineHeightStep?: LineHeightStepProperty<TLength>,
  listStyleImage?: GlobalsString,
  listStylePosition?: ListStylePositionProperty,
  listStyleType?: GlobalsString,
  marginBlock?: MarginBlockProperty<TLength>,
  marginBlockEnd?: MarginBlockEndProperty<TLength>,
  marginBlockStart?: MarginBlockStartProperty<TLength>,
  marginBottom?: MarginBottomProperty<TLength>,
  marginInline?: MarginInlineProperty<TLength>,
  marginInlineEnd?: MarginInlineEndProperty<TLength>,
  marginInlineStart?: MarginInlineStartProperty<TLength>,
  marginLeft?: MarginLeftProperty<TLength>,
  marginRight?: MarginRightProperty<TLength>,
  marginTop?: MarginTopProperty<TLength>,
  maskBorderMode?: MaskBorderModeProperty,
  maskBorderOutset?: MaskBorderOutsetProperty<TLength>,
  maskBorderRepeat?: GlobalsString,
  maskBorderSlice?: MaskBorderSliceProperty,
  maskBorderSource?: GlobalsString,
  maskBorderWidth?: MaskBorderWidthProperty<TLength>,
  maskClip?: GlobalsString,
  maskComposite?: GlobalsString,
  maskImage?: GlobalsString,
  maskMode?: GlobalsString,
  maskOrigin?: GlobalsString,
  maskPosition?: MaskPositionProperty<TLength>,
  maskRepeat?: GlobalsString,
  maskSize?: MaskSizeProperty<TLength>,
  maskType?: MaskTypeProperty,
  maxBlockSize?: MaxBlockSizeProperty<TLength>,
  maxHeight?: MaxHeightProperty<TLength>,
  maxInlineSize?: MaxInlineSizeProperty<TLength>,
  maxLines?: MaxLinesProperty,
  maxWidth?: MaxWidthProperty<TLength>,
  minBlockSize?: MinBlockSizeProperty<TLength>,
  minHeight?: MinHeightProperty<TLength>,
  minInlineSize?: MinInlineSizeProperty<TLength>,
  minWidth?: MinWidthProperty<TLength>,
  mixBlendMode?: MixBlendModeProperty,
  motionDistance?: OffsetDistanceProperty<TLength>,
  motionPath?: GlobalsString,
  motionRotation?: GlobalsString,
  objectFit?: ObjectFitProperty,
  objectPosition?: ObjectPositionProperty<TLength>,
  offsetAnchor?: OffsetAnchorProperty<TLength>,
  offsetDistance?: OffsetDistanceProperty<TLength>,
  offsetPath?: GlobalsString,
  offsetPosition?: OffsetPositionProperty<TLength>,
  offsetRotate?: GlobalsString,
  offsetRotation?: GlobalsString,
  opacity?: GlobalsNumber,
  order?: GlobalsNumber,
  orphans?: GlobalsNumber,
  outlineColor?: GlobalsString,
  outlineOffset?: OutlineOffsetProperty<TLength>,
  outlineStyle?: GlobalsString,
  outlineWidth?: OutlineWidthProperty<TLength>,
  overflow?: GlobalsString,
  overflowAnchor?: OverflowAnchorProperty,
  overflowBlock?: GlobalsString,
  overflowClipBox?: OverflowClipBoxProperty,
  overflowInline?: GlobalsString,
  overflowWrap?: OverflowWrapProperty,
  overflowX?: OverflowXProperty,
  overflowY?: OverflowYProperty,
  overscrollBehavior?: GlobalsString,
  overscrollBehaviorX?: OverscrollBehaviorXProperty,
  overscrollBehaviorY?: OverscrollBehaviorYProperty,
  paddingBlock?: PaddingBlockProperty<TLength>,
  paddingBlockEnd?: PaddingBlockEndProperty<TLength>,
  paddingBlockStart?: PaddingBlockStartProperty<TLength>,
  paddingBottom?: PaddingBottomProperty<TLength>,
  paddingInline?: PaddingInlineProperty<TLength>,
  paddingInlineEnd?: PaddingInlineEndProperty<TLength>,
  paddingInlineStart?: PaddingInlineStartProperty<TLength>,
  paddingLeft?: PaddingLeftProperty<TLength>,
  paddingRight?: PaddingRightProperty<TLength>,
  paddingTop?: PaddingTopProperty<TLength>,
  pageBreakAfter?: PageBreakAfterProperty,
  pageBreakBefore?: PageBreakBeforeProperty,
  pageBreakInside?: PageBreakInsideProperty,
  paintOrder?: GlobalsString,
  perspective?: PerspectiveProperty<TLength>,
  perspectiveOrigin?: PerspectiveOriginProperty<TLength>,
  placeContent?: GlobalsString,
  pointerEvents?: PointerEventsProperty,
  position?: PositionProperty,
  quotes?: GlobalsString,
  resize?: ResizeProperty,
  right?: RightProperty<TLength>,
  rotate?: GlobalsString,
  rowGap?: RowGapProperty<TLength>,
  rubyAlign?: RubyAlignProperty,
  rubyMerge?: RubyMergeProperty,
  rubyPosition?: RubyPositionProperty,
  scale?: ScaleProperty,
  scrollBehavior?: ScrollBehaviorProperty,
  scrollMargin?: ScrollMarginProperty<TLength>,
  scrollMarginBlock?: ScrollMarginBlockProperty<TLength>,
  scrollMarginBlockEnd?: ScrollMarginBlockEndProperty<TLength>,
  scrollMarginBlockStart?: ScrollMarginBlockStartProperty<TLength>,
  scrollMarginBottom?: ScrollMarginBottomProperty<TLength>,
  scrollMarginInlineEnd?: ScrollMarginInlineEndProperty<TLength>,
  scrollMarginInlineStart?: ScrollMarginInlineStartProperty<TLength>,
  scrollMarginLeft?: ScrollMarginLeftProperty<TLength>,
  scrollMarginRight?: ScrollMarginRightProperty<TLength>,
  scrollMarginTop?: ScrollMarginTopProperty<TLength>,
  scrollPadding?: ScrollPaddingProperty<TLength>,
  scrollPaddingBlock?: ScrollPaddingBlockProperty<TLength>,
  scrollPaddingBlockEnd?: ScrollPaddingBlockEndProperty<TLength>,
  scrollPaddingBlockStart?: ScrollPaddingBlockStartProperty<TLength>,
  scrollPaddingBottom?: ScrollPaddingBottomProperty<TLength>,
  scrollPaddingInline?: ScrollPaddingInlineProperty<TLength>,
  scrollPaddingInlineEnd?: ScrollPaddingInlineEndProperty<TLength>,
  scrollPaddingInlineStart?: ScrollPaddingInlineStartProperty<TLength>,
  scrollPaddingLeft?: ScrollPaddingLeftProperty<TLength>,
  scrollPaddingRight?: ScrollPaddingRightProperty<TLength>,
  scrollPaddingTop?: ScrollPaddingTopProperty<TLength>,
  scrollSnapAlign?: GlobalsString,
  scrollSnapType?: GlobalsString,
  scrollbarColor?: GlobalsString,
  scrollbarWidth?: ScrollbarWidthProperty,
  shapeImageThreshold?: GlobalsNumber,
  shapeMargin?: ShapeMarginProperty<TLength>,
  shapeOutside?: GlobalsString,
  tabSize?: TabSizeProperty<TLength>,
  tableLayout?: TableLayoutProperty,
  textAlign?: TextAlignProperty,
  textAlignLast?: TextAlignLastProperty,
  textCombineUpright?: GlobalsString,
  textDecorationColor?: GlobalsString,
  textDecorationLine?: GlobalsString,
  textDecorationSkip?: GlobalsString,
  textDecorationSkipInk?: TextDecorationSkipInkProperty,
  textDecorationStyle?: TextDecorationStyleProperty,
  textEmphasisColor?: GlobalsString,
  textEmphasisPosition?: GlobalsString,
  textEmphasisStyle?: GlobalsString,
  textIndent?: TextIndentProperty<TLength>,
  textJustify?: TextJustifyProperty,
  textOrientation?: TextOrientationProperty,
  textOverflow?: GlobalsString,
  textRendering?: TextRenderingProperty,
  textShadow?: GlobalsString,
  textSizeAdjust?: GlobalsString,
  textTransform?: TextTransformProperty,
  textUnderlinePosition?: GlobalsString,
  top?: TopProperty<TLength>,
  touchAction?: GlobalsString,
  transform?: GlobalsString,
  transformBox?: TransformBoxProperty,
  transformOrigin?: TransformOriginProperty<TLength>,
  transformStyle?: TransformStyleProperty,
  transitionDelay?: GlobalsString,
  transitionDuration?: GlobalsString,
  transitionProperty?: GlobalsString,
  transitionTimingFunction?: GlobalsString,
  translate?: TranslateProperty<TLength>,
  unicodeBidi?: UnicodeBidiProperty,
  userSelect?: UserSelectProperty,
  verticalAlign?: VerticalAlignProperty<TLength>,
  visibility?: VisibilityProperty,
  whiteSpace?: WhiteSpaceProperty,
  widows?: GlobalsNumber,
  width?: WidthProperty<TLength>,
  willChange?: GlobalsString,
  wordBreak?: WordBreakProperty,
  wordSpacing?: WordSpacingProperty<TLength>,
  wordWrap?: WordWrapProperty,
  writingMode?: WritingModeProperty,
  zIndex?: ZIndexProperty,
  zoom?: ZoomProperty,
};

export type StandardShorthandProperties<TLength = string | 0> = {
  all?: Globals,
  animation?: AnimationProperty,
  background?: BackgroundProperty<TLength>,
  border?: BorderProperty<TLength>,
  borderBlock?: BorderBlockProperty<TLength>,
  borderBlockEnd?: BorderBlockEndProperty<TLength>,
  borderBlockStart?: BorderBlockStartProperty<TLength>,
  borderBottom?: BorderBottomProperty<TLength>,
  borderColor?: GlobalsString,
  borderImage?: BorderImageProperty,
  borderInline?: BorderInlineProperty<TLength>,
  borderInlineEnd?: BorderInlineEndProperty<TLength>,
  borderInlineStart?: BorderInlineStartProperty<TLength>,
  borderLeft?: BorderLeftProperty<TLength>,
  borderRadius?: BorderRadiusProperty<TLength>,
  borderRight?: BorderRightProperty<TLength>,
  borderStyle?: GlobalsString,
  borderTop?: BorderTopProperty<TLength>,
  borderWidth?: BorderWidthProperty<TLength>,
  columnRule?: ColumnRuleProperty<TLength>,
  columns?: ColumnsProperty<TLength>,
  flex?: FlexProperty<TLength>,
  flexFlow?: GlobalsString,
  font?: GlobalsString,
  gap?: GapProperty<TLength>,
  grid?: GlobalsString,
  gridArea?: GridAreaProperty,
  gridColumn?: GridColumnProperty,
  gridRow?: GridRowProperty,
  gridTemplate?: GlobalsString,
  lineClamp?: LineClampProperty,
  listStyle?: GlobalsString,
  margin?: MarginProperty<TLength>,
  mask?: MaskProperty<TLength>,
  maskBorder?: MaskBorderProperty,
  motion?: OffsetProperty<TLength>,
  offset?: OffsetProperty<TLength>,
  outline?: OutlineProperty<TLength>,
  padding?: PaddingProperty<TLength>,
  placeItems?: GlobalsString,
  placeSelf?: GlobalsString,
  textDecoration?: GlobalsString,
  textEmphasis?: GlobalsString,
  transition?: GlobalsString,
};

export type StandardProperties<TLength = string | 0> = StandardLonghandProperties<TLength> & StandardShorthandProperties<TLength>;

export type VendorLonghandProperties<TLength = string | 0> = {
  MozAnimationDelay?: GlobalsString,
  MozAnimationDirection?: GlobalsString,
  MozAnimationDuration?: GlobalsString,
  MozAnimationFillMode?: GlobalsString,
  MozAnimationIterationCount?: AnimationIterationCountProperty,
  MozAnimationName?: GlobalsString,
  MozAnimationPlayState?: GlobalsString,
  MozAnimationTimingFunction?: GlobalsString,
  MozAppearance?: MozAppearanceProperty,
  MozBackfaceVisibility?: BackfaceVisibilityProperty,
  MozBorderBottomColors?: GlobalsString,
  MozBorderEndColor?: GlobalsString,
  MozBorderEndStyle?: BorderInlineEndStyleProperty,
  MozBorderEndWidth?: BorderInlineEndWidthProperty<TLength>,
  MozBorderLeftColors?: GlobalsString,
  MozBorderRightColors?: GlobalsString,
  MozBorderStartColor?: GlobalsString,
  MozBorderStartStyle?: BorderInlineStartStyleProperty,
  MozBorderTopColors?: GlobalsString,
  MozBoxSizing?: BoxSizingProperty,
  MozColumnCount?: ColumnCountProperty,
  MozColumnFill?: ColumnFillProperty,
  MozColumnGap?: ColumnGapProperty<TLength>,
  MozColumnRuleColor?: GlobalsString,
  MozColumnRuleStyle?: GlobalsString,
  MozColumnRuleWidth?: ColumnRuleWidthProperty<TLength>,
  MozColumnWidth?: ColumnWidthProperty<TLength>,
  MozContextProperties?: GlobalsString,
  MozFloatEdge?: MozFloatEdgeProperty,
  MozFontFeatureSettings?: GlobalsString,
  MozFontLanguageOverride?: GlobalsString,
  MozForceBrokenImageIcon?: GlobalsNumber,
  MozHyphens?: HyphensProperty,
  MozImageRegion?: GlobalsString,
  MozMarginEnd?: MarginInlineEndProperty<TLength>,
  MozMarginStart?: MarginInlineStartProperty<TLength>,
  MozOrient?: MozOrientProperty,
  MozOutlineRadiusBottomleft?: MozOutlineRadiusBottomleftProperty<TLength>,
  MozOutlineRadiusBottomright?: MozOutlineRadiusBottomrightProperty<TLength>,
  MozOutlineRadiusTopleft?: MozOutlineRadiusTopleftProperty<TLength>,
  MozOutlineRadiusTopright?: MozOutlineRadiusToprightProperty<TLength>,
  MozPaddingEnd?: PaddingInlineEndProperty<TLength>,
  MozPaddingStart?: PaddingInlineStartProperty<TLength>,
  MozPerspective?: PerspectiveProperty<TLength>,
  MozPerspectiveOrigin?: PerspectiveOriginProperty<TLength>,
  MozStackSizing?: MozStackSizingProperty,
  MozTabSize?: TabSizeProperty<TLength>,
  MozTextSizeAdjust?: GlobalsString,
  MozTransformOrigin?: TransformOriginProperty<TLength>,
  MozTransformStyle?: TransformStyleProperty,
  MozTransitionDelay?: GlobalsString,
  MozTransitionDuration?: GlobalsString,
  MozTransitionProperty?: GlobalsString,
  MozTransitionTimingFunction?: GlobalsString,
  MozUserFocus?: MozUserFocusProperty,
  MozUserModify?: MozUserModifyProperty,
  MozUserSelect?: UserSelectProperty,
  MozWindowDragging?: MozWindowDraggingProperty,
  MozWindowShadow?: MozWindowShadowProperty,
  msAccelerator?: MsAcceleratorProperty,
  msAlignSelf?: GlobalsString,
  msBlockProgression?: MsBlockProgressionProperty,
  msContentZoomChaining?: MsContentZoomChainingProperty,
  msContentZoomLimitMax?: GlobalsString,
  msContentZoomLimitMin?: GlobalsString,
  msContentZoomSnapPoints?: GlobalsString,
  msContentZoomSnapType?: MsContentZoomSnapTypeProperty,
  msContentZooming?: MsContentZoomingProperty,
  msFilter?: GlobalsString,
  msFlexDirection?: FlexDirectionProperty,
  msFlexPositive?: GlobalsNumber,
  msFlowFrom?: GlobalsString,
  msFlowInto?: GlobalsString,
  msGridColumns?: GridAutoColumnsProperty<TLength>,
  msGridRows?: GridAutoRowsProperty<TLength>,
  msHighContrastAdjust?: MsHighContrastAdjustProperty,
  msHyphenateLimitChars?: MsHyphenateLimitCharsProperty,
  msHyphenateLimitLines?: MsHyphenateLimitLinesProperty,
  msHyphenateLimitZone?: MsHyphenateLimitZoneProperty<TLength>,
  msHyphens?: HyphensProperty,
  msImeAlign?: MsImeAlignProperty,
  msLineBreak?: LineBreakProperty,
  msOrder?: GlobalsNumber,
  msOverflowStyle?: MsOverflowStyleProperty,
  msOverflowX?: OverflowXProperty,
  msOverflowY?: OverflowYProperty,
  msScrollChaining?: MsScrollChainingProperty,
  msScrollLimitXMax?: MsScrollLimitXMaxProperty<TLength>,
  msScrollLimitXMin?: MsScrollLimitXMinProperty<TLength>,
  msScrollLimitYMax?: MsScrollLimitYMaxProperty<TLength>,
  msScrollLimitYMin?: MsScrollLimitYMinProperty<TLength>,
  msScrollRails?: MsScrollRailsProperty,
  msScrollSnapPointsX?: GlobalsString,
  msScrollSnapPointsY?: GlobalsString,
  msScrollSnapType?: MsScrollSnapTypeProperty,
  msScrollTranslation?: MsScrollTranslationProperty,
  msTextAutospace?: MsTextAutospaceProperty,
  msTextCombineHorizontal?: GlobalsString,
  msTextOverflow?: GlobalsString,
  msTextSizeAdjust?: GlobalsString,
  msTouchAction?: GlobalsString,
  msTouchSelect?: MsTouchSelectProperty,
  msTransform?: GlobalsString,
  msTransformOrigin?: TransformOriginProperty<TLength>,
  msUserSelect?: MsUserSelectProperty,
  msWordBreak?: WordBreakProperty,
  msWrapFlow?: MsWrapFlowProperty,
  msWrapMargin?: MsWrapMarginProperty<TLength>,
  msWrapThrough?: MsWrapThroughProperty,
  msWritingMode?: WritingModeProperty,
  OObjectFit?: ObjectFitProperty,
  OObjectPosition?: ObjectPositionProperty<TLength>,
  OTabSize?: TabSizeProperty<TLength>,
  OTextOverflow?: GlobalsString,
  OTransformOrigin?: TransformOriginProperty<TLength>,
  WebkitAlignContent?: GlobalsString,
  WebkitAlignItems?: GlobalsString,
  WebkitAlignSelf?: GlobalsString,
  WebkitAnimationDelay?: GlobalsString,
  WebkitAnimationDirection?: GlobalsString,
  WebkitAnimationDuration?: GlobalsString,
  WebkitAnimationFillMode?: GlobalsString,
  WebkitAnimationIterationCount?: AnimationIterationCountProperty,
  WebkitAnimationName?: GlobalsString,
  WebkitAnimationPlayState?: GlobalsString,
  WebkitAnimationTimingFunction?: GlobalsString,
  WebkitAppearance?: WebkitAppearanceProperty,
  WebkitBackdropFilter?: GlobalsString,
  WebkitBackfaceVisibility?: BackfaceVisibilityProperty,
  WebkitBackgroundClip?: GlobalsString,
  WebkitBackgroundOrigin?: GlobalsString,
  WebkitBackgroundSize?: BackgroundSizeProperty<TLength>,
  WebkitBorderBeforeColor?: GlobalsString,
  WebkitBorderBeforeStyle?: GlobalsString,
  WebkitBorderBeforeWidth?: WebkitBorderBeforeWidthProperty<TLength>,
  WebkitBorderBottomLeftRadius?: BorderBottomLeftRadiusProperty<TLength>,
  WebkitBorderBottomRightRadius?: BorderBottomRightRadiusProperty<TLength>,
  WebkitBorderImageSlice?: BorderImageSliceProperty,
  WebkitBorderTopLeftRadius?: BorderTopLeftRadiusProperty<TLength>,
  WebkitBorderTopRightRadius?: BorderTopRightRadiusProperty<TLength>,
  WebkitBoxDecorationBreak?: BoxDecorationBreakProperty,
  WebkitBoxReflect?: WebkitBoxReflectProperty<TLength>,
  WebkitBoxShadow?: GlobalsString,
  WebkitBoxSizing?: BoxSizingProperty,
  WebkitClipPath?: GlobalsString,
  WebkitColorAdjust?: ColorAdjustProperty,
  WebkitColumnCount?: ColumnCountProperty,
  WebkitColumnGap?: ColumnGapProperty<TLength>,
  WebkitColumnRuleColor?: GlobalsString,
  WebkitColumnRuleStyle?: GlobalsString,
  WebkitColumnRuleWidth?: ColumnRuleWidthProperty<TLength>,
  WebkitColumnSpan?: ColumnSpanProperty,
  WebkitColumnWidth?: ColumnWidthProperty<TLength>,
  WebkitFilter?: GlobalsString,
  WebkitFlexBasis?: FlexBasisProperty<TLength>,
  WebkitFlexDirection?: FlexDirectionProperty,
  WebkitFlexGrow?: GlobalsNumber,
  WebkitFlexShrink?: GlobalsNumber,
  WebkitFlexWrap?: FlexWrapProperty,
  WebkitFontFeatureSettings?: GlobalsString,
  WebkitFontKerning?: FontKerningProperty,
  WebkitFontVariantLigatures?: GlobalsString,
  WebkitHyphens?: HyphensProperty,
  WebkitJustifyContent?: GlobalsString,
  WebkitLineBreak?: LineBreakProperty,
  WebkitMarginEnd?: MarginInlineEndProperty<TLength>,
  WebkitMarginStart?: MarginInlineStartProperty<TLength>,
  WebkitMaskAttachment?: GlobalsString,
  WebkitMaskClip?: GlobalsString,
  WebkitMaskComposite?: GlobalsString,
  WebkitMaskImage?: GlobalsString,
  WebkitMaskOrigin?: GlobalsString,
  WebkitMaskPosition?: WebkitMaskPositionProperty<TLength>,
  WebkitMaskPositionX?: WebkitMaskPositionXProperty<TLength>,
  WebkitMaskPositionY?: WebkitMaskPositionYProperty<TLength>,
  WebkitMaskRepeat?: GlobalsString,
  WebkitMaskRepeatX?: WebkitMaskRepeatXProperty,
  WebkitMaskRepeatY?: WebkitMaskRepeatYProperty,
  WebkitMaskSize?: WebkitMaskSizeProperty<TLength>,
  WebkitMaxInlineSize?: MaxInlineSizeProperty<TLength>,
  WebkitOrder?: GlobalsNumber,
  WebkitOverflowScrolling?: WebkitOverflowScrollingProperty,
  WebkitPaddingEnd?: PaddingInlineEndProperty<TLength>,
  WebkitPaddingStart?: PaddingInlineStartProperty<TLength>,
  WebkitPerspective?: PerspectiveProperty<TLength>,
  WebkitPerspectiveOrigin?: PerspectiveOriginProperty<TLength>,
  WebkitScrollSnapType?: GlobalsString,
  WebkitShapeMargin?: ShapeMarginProperty<TLength>,
  WebkitTapHighlightColor?: GlobalsString,
  WebkitTextCombine?: GlobalsString,
  WebkitTextDecorationColor?: GlobalsString,
  WebkitTextDecorationLine?: GlobalsString,
  WebkitTextDecorationSkip?: GlobalsString,
  WebkitTextDecorationStyle?: TextDecorationStyleProperty,
  WebkitTextEmphasisColor?: GlobalsString,
  WebkitTextEmphasisPosition?: GlobalsString,
  WebkitTextEmphasisStyle?: GlobalsString,
  WebkitTextFillColor?: GlobalsString,
  WebkitTextOrientation?: TextOrientationProperty,
  WebkitTextSizeAdjust?: GlobalsString,
  WebkitTextStrokeColor?: GlobalsString,
  WebkitTextStrokeWidth?: WebkitTextStrokeWidthProperty<TLength>,
  WebkitTouchCallout?: WebkitTouchCalloutProperty,
  WebkitTransform?: GlobalsString,
  WebkitTransformOrigin?: TransformOriginProperty<TLength>,
  WebkitTransformStyle?: TransformStyleProperty,
  WebkitTransitionDelay?: GlobalsString,
  WebkitTransitionDuration?: GlobalsString,
  WebkitTransitionProperty?: GlobalsString,
  WebkitTransitionTimingFunction?: GlobalsString,
  WebkitUserModify?: WebkitUserModifyProperty,
  WebkitUserSelect?: UserSelectProperty,
  WebkitWritingMode?: WritingModeProperty,
};

export type VendorShorthandProperties<TLength = string | 0> = {
  MozAnimation?: AnimationProperty,
  MozBorderImage?: BorderImageProperty,
  MozColumnRule?: ColumnRuleProperty<TLength>,
  MozColumns?: ColumnsProperty<TLength>,
  MozTransition?: GlobalsString,
  msContentZoomLimit?: GlobalsString,
  msContentZoomSnap?: GlobalsString,
  msFlex?: FlexProperty<TLength>,
  msScrollLimit?: GlobalsString,
  msScrollSnapX?: GlobalsString,
  msScrollSnapY?: GlobalsString,
  OBorderImage?: BorderImageProperty,
  WebkitAnimation?: AnimationProperty,
  WebkitBorderBefore?: WebkitBorderBeforeProperty<TLength>,
  WebkitBorderImage?: BorderImageProperty,
  WebkitBorderRadius?: BorderRadiusProperty<TLength>,
  WebkitColumnRule?: ColumnRuleProperty<TLength>,
  WebkitColumns?: ColumnsProperty<TLength>,
  WebkitFlex?: FlexProperty<TLength>,
  WebkitFlexFlow?: GlobalsString,
  WebkitLineClamp?: WebkitLineClampProperty,
  WebkitMask?: WebkitMaskProperty<TLength>,
  WebkitTextEmphasis?: GlobalsString,
  WebkitTextStroke?: WebkitTextStrokeProperty<TLength>,
  WebkitTransition?: GlobalsString,
};

export type VendorProperties<TLength = string | 0> = VendorLonghandProperties<TLength> & VendorShorthandProperties<TLength>;

export type ObsoleteProperties<TLength = string | 0> = {
  boxAlign?: BoxAlignProperty,
  boxDirection?: BoxDirectionProperty,
  boxFlex?: GlobalsNumber,
  boxFlexGroup?: GlobalsNumber,
  boxLines?: BoxLinesProperty,
  boxOrdinalGroup?: GlobalsNumber,
  boxOrient?: BoxOrientProperty,
  boxPack?: BoxPackProperty,
  clip?: GlobalsString,
  fontVariantAlternates?: GlobalsString,
  gridColumnGap?: GridColumnGapProperty<TLength>,
  gridGap?: GridGapProperty<TLength>,
  gridRowGap?: GridRowGapProperty<TLength>,
  imeMode?: ImeModeProperty,
  offsetBlockEnd?: InsetBlockEndProperty<TLength>,
  offsetBlockStart?: InsetBlockStartProperty<TLength>,
  offsetInlineEnd?: InsetInlineEndProperty<TLength>,
  offsetInlineStart?: InsetInlineStartProperty<TLength>,
  scrollSnapCoordinate?: ScrollSnapCoordinateProperty<TLength>,
  scrollSnapDestination?: ScrollSnapDestinationProperty<TLength>,
  scrollSnapPointsX?: GlobalsString,
  scrollSnapPointsY?: GlobalsString,
  scrollSnapTypeX?: ScrollSnapTypeXProperty,
  scrollSnapTypeY?: ScrollSnapTypeYProperty,
  textCombineHorizontal?: GlobalsString,
  KhtmlBoxAlign?: BoxAlignProperty,
  KhtmlBoxDirection?: BoxDirectionProperty,
  KhtmlBoxFlex?: GlobalsNumber,
  KhtmlBoxFlexGroup?: GlobalsNumber,
  KhtmlBoxLines?: BoxLinesProperty,
  KhtmlBoxOrdinalGroup?: GlobalsNumber,
  KhtmlBoxOrient?: BoxOrientProperty,
  KhtmlBoxPack?: BoxPackProperty,
  MozBackgroundClip?: GlobalsString,
  MozBackgroundInlinePolicy?: BoxDecorationBreakProperty,
  MozBackgroundOrigin?: GlobalsString,
  MozBackgroundSize?: BackgroundSizeProperty<TLength>,
  MozBinding?: GlobalsString,
  MozBorderRadius?: BorderRadiusProperty<TLength>,
  MozBorderRadiusBottomleft?: BorderBottomLeftRadiusProperty<TLength>,
  MozBorderRadiusBottomright?: BorderBottomRightRadiusProperty<TLength>,
  MozBorderRadiusTopleft?: BorderTopLeftRadiusProperty<TLength>,
  MozBorderRadiusTopright?: BorderTopRightRadiusProperty<TLength>,
  MozBoxAlign?: BoxAlignProperty,
  MozBoxDirection?: BoxDirectionProperty,
  MozBoxFlex?: GlobalsNumber,
  MozBoxOrdinalGroup?: GlobalsNumber,
  MozBoxOrient?: BoxOrientProperty,
  MozBoxPack?: BoxPackProperty,
  MozBoxShadow?: GlobalsString,
  MozOpacity?: GlobalsNumber,
  MozOutline?: OutlineProperty<TLength>,
  MozOutlineColor?: GlobalsString,
  MozOutlineRadius?: MozOutlineRadiusProperty<TLength>,
  MozOutlineStyle?: GlobalsString,
  MozOutlineWidth?: OutlineWidthProperty<TLength>,
  MozResize?: ResizeProperty,
  MozTextAlignLast?: TextAlignLastProperty,
  MozTextBlink?: MozTextBlinkProperty,
  MozTextDecorationColor?: GlobalsString,
  MozTextDecorationLine?: GlobalsString,
  MozTextDecorationStyle?: TextDecorationStyleProperty,
  MozUserInput?: MozUserInputProperty,
  msImeMode?: ImeModeProperty,
  msScrollbar3dlightColor?: GlobalsString,
  msScrollbarArrowColor?: GlobalsString,
  msScrollbarBaseColor?: GlobalsString,
  msScrollbarDarkshadowColor?: GlobalsString,
  msScrollbarFaceColor?: GlobalsString,
  msScrollbarHighlightColor?: GlobalsString,
  msScrollbarShadowColor?: GlobalsString,
  msScrollbarTrackColor?: GlobalsString,
  OAnimation?: AnimationProperty,
  OAnimationDelay?: GlobalsString,
  OAnimationDirection?: GlobalsString,
  OAnimationDuration?: GlobalsString,
  OAnimationFillMode?: GlobalsString,
  OAnimationIterationCount?: AnimationIterationCountProperty,
  OAnimationName?: GlobalsString,
  OAnimationPlayState?: GlobalsString,
  OAnimationTimingFunction?: GlobalsString,
  OBackgroundSize?: BackgroundSizeProperty<TLength>,
  OTransform?: GlobalsString,
  OTransition?: GlobalsString,
  OTransitionDelay?: GlobalsString,
  OTransitionDuration?: GlobalsString,
  OTransitionProperty?: GlobalsString,
  OTransitionTimingFunction?: GlobalsString,
  WebkitBoxAlign?: BoxAlignProperty,
  WebkitBoxDirection?: BoxDirectionProperty,
  WebkitBoxFlex?: GlobalsNumber,
  WebkitBoxFlexGroup?: GlobalsNumber,
  WebkitBoxLines?: BoxLinesProperty,
  WebkitBoxOrdinalGroup?: GlobalsNumber,
  WebkitBoxOrient?: BoxOrientProperty,
  WebkitBoxPack?: BoxPackProperty,
  WebkitScrollSnapPointsX?: GlobalsString,
  WebkitScrollSnapPointsY?: GlobalsString,
};

export type SvgProperties<TLength = string | 0> = {
  alignmentBaseline?: AlignmentBaselineProperty,
  baselineShift?: BaselineShiftProperty<TLength>,
  clip?: GlobalsString,
  clipPath?: GlobalsString,
  clipRule?: ClipRuleProperty,
  color?: GlobalsString,
  colorInterpolation?: ColorInterpolationProperty,
  colorRendering?: ColorRenderingProperty,
  cursor?: GlobalsString,
  direction?: DirectionProperty,
  display?: GlobalsString,
  dominantBaseline?: DominantBaselineProperty,
  fill?: GlobalsString,
  fillOpacity?: GlobalsNumber,
  fillRule?: FillRuleProperty,
  filter?: GlobalsString,
  floodColor?: GlobalsString,
  floodOpacity?: GlobalsNumber,
  font?: GlobalsString,
  fontFamily?: GlobalsString,
  fontSize?: FontSizeProperty<TLength>,
  fontSizeAdjust?: FontSizeAdjustProperty,
  fontStretch?: GlobalsString,
  fontStyle?: GlobalsString,
  fontVariant?: GlobalsString,
  fontWeight?: FontWeightProperty,
  glyphOrientationVertical?: GlyphOrientationVerticalProperty,
  imageRendering?: ImageRenderingProperty,
  letterSpacing?: LetterSpacingProperty<TLength>,
  lightingColor?: GlobalsString,
  lineHeight?: LineHeightProperty<TLength>,
  marker?: GlobalsString,
  markerEnd?: GlobalsString,
  markerMid?: GlobalsString,
  markerStart?: GlobalsString,
  mask?: MaskProperty<TLength>,
  opacity?: GlobalsNumber,
  overflow?: GlobalsString,
  paintOrder?: GlobalsString,
  pointerEvents?: PointerEventsProperty,
  shapeRendering?: ShapeRenderingProperty,
  stopColor?: GlobalsString,
  stopOpacity?: GlobalsNumber,
  stroke?: GlobalsString,
  strokeDasharray?: StrokeDasharrayProperty<TLength>,
  strokeDashoffset?: StrokeDashoffsetProperty<TLength>,
  strokeLinecap?: StrokeLinecapProperty,
  strokeLinejoin?: StrokeLinejoinProperty,
  strokeMiterlimit?: GlobalsNumber,
  strokeOpacity?: GlobalsNumber,
  strokeWidth?: StrokeWidthProperty<TLength>,
  textAnchor?: TextAnchorProperty,
  textDecoration?: GlobalsString,
  textRendering?: TextRenderingProperty,
  unicodeBidi?: UnicodeBidiProperty,
  vectorEffect?: VectorEffectProperty,
  visibility?: VisibilityProperty,
  whiteSpace?: WhiteSpaceProperty,
  wordSpacing?: WordSpacingProperty<TLength>,
  writingMode?: WritingModeProperty,
};

export type Properties<TLength = string | 0> = StandardProperties<TLength> & VendorProperties<TLength> & ObsoleteProperties<TLength> & SvgProperties<TLength>;

export type StandardLonghandPropertiesHyphen<TLength = string | 0> = {
  "align-content"?: GlobalsString,
  "align-items"?: GlobalsString,
  "align-self"?: GlobalsString,
  "animation-delay"?: GlobalsString,
  "animation-direction"?: GlobalsString,
  "animation-duration"?: GlobalsString,
  "animation-fill-mode"?: GlobalsString,
  "animation-iteration-count"?: AnimationIterationCountProperty,
  "animation-name"?: GlobalsString,
  "animation-play-state"?: GlobalsString,
  "animation-timing-function"?: GlobalsString,
  appearance?: AppearanceProperty,
  "backdrop-filter"?: GlobalsString,
  "backface-visibility"?: BackfaceVisibilityProperty,
  "background-attachment"?: GlobalsString,
  "background-blend-mode"?: GlobalsString,
  "background-clip"?: GlobalsString,
  "background-color"?: GlobalsString,
  "background-image"?: GlobalsString,
  "background-origin"?: GlobalsString,
  "background-position"?: BackgroundPositionProperty<TLength>,
  "background-position-x"?: BackgroundPositionXProperty<TLength>,
  "background-position-y"?: BackgroundPositionYProperty<TLength>,
  "background-repeat"?: GlobalsString,
  "background-size"?: BackgroundSizeProperty<TLength>,
  "block-overflow"?: GlobalsString,
  "block-size"?: BlockSizeProperty<TLength>,
  "border-block-color"?: GlobalsString,
  "border-block-end-color"?: GlobalsString,
  "border-block-end-style"?: BorderBlockEndStyleProperty,
  "border-block-end-width"?: BorderBlockEndWidthProperty<TLength>,
  "border-block-start-color"?: GlobalsString,
  "border-block-start-style"?: BorderBlockStartStyleProperty,
  "border-block-start-width"?: BorderBlockStartWidthProperty<TLength>,
  "border-block-style"?: BorderBlockStyleProperty,
  "border-block-width"?: BorderBlockWidthProperty<TLength>,
  "border-bottom-color"?: GlobalsString,
  "border-bottom-left-radius"?: BorderBottomLeftRadiusProperty<TLength>,
  "border-bottom-right-radius"?: BorderBottomRightRadiusProperty<TLength>,
  "border-bottom-style"?: BorderBottomStyleProperty,
  "border-bottom-width"?: BorderBottomWidthProperty<TLength>,
  "border-collapse"?: BorderCollapseProperty,
  "border-end-end-radius"?: BorderEndEndRadiusProperty<TLength>,
  "border-end-start-radius"?: BorderEndStartRadiusProperty<TLength>,
  "border-image-outset"?: BorderImageOutsetProperty<TLength>,
  "border-image-repeat"?: GlobalsString,
  "border-image-slice"?: BorderImageSliceProperty,
  "border-image-source"?: GlobalsString,
  "border-image-width"?: BorderImageWidthProperty<TLength>,
  "border-inline-color"?: GlobalsString,
  "border-inline-end-color"?: GlobalsString,
  "border-inline-end-style"?: BorderInlineEndStyleProperty,
  "border-inline-end-width"?: BorderInlineEndWidthProperty<TLength>,
  "border-inline-start-color"?: GlobalsString,
  "border-inline-start-style"?: BorderInlineStartStyleProperty,
  "border-inline-start-width"?: BorderInlineStartWidthProperty<TLength>,
  "border-inline-style"?: BorderInlineStyleProperty,
  "border-inline-width"?: BorderInlineWidthProperty<TLength>,
  "border-left-color"?: GlobalsString,
  "border-left-style"?: BorderLeftStyleProperty,
  "border-left-width"?: BorderLeftWidthProperty<TLength>,
  "border-right-color"?: GlobalsString,
  "border-right-style"?: BorderRightStyleProperty,
  "border-right-width"?: BorderRightWidthProperty<TLength>,
  "border-spacing"?: BorderSpacingProperty<TLength>,
  "border-start-end-radius"?: BorderStartEndRadiusProperty<TLength>,
  "border-start-start-radius"?: BorderStartStartRadiusProperty<TLength>,
  "border-top-color"?: GlobalsString,
  "border-top-left-radius"?: BorderTopLeftRadiusProperty<TLength>,
  "border-top-right-radius"?: BorderTopRightRadiusProperty<TLength>,
  "border-top-style"?: BorderTopStyleProperty,
  "border-top-width"?: BorderTopWidthProperty<TLength>,
  bottom?: BottomProperty<TLength>,
  "box-decoration-break"?: BoxDecorationBreakProperty,
  "box-shadow"?: GlobalsString,
  "box-sizing"?: BoxSizingProperty,
  "break-after"?: BreakAfterProperty,
  "break-before"?: BreakBeforeProperty,
  "break-inside"?: BreakInsideProperty,
  "caption-side"?: CaptionSideProperty,
  "caret-color"?: GlobalsString,
  clear?: ClearProperty,
  "clip-path"?: GlobalsString,
  color?: GlobalsString,
  "color-adjust"?: ColorAdjustProperty,
  "column-count"?: ColumnCountProperty,
  "column-fill"?: ColumnFillProperty,
  "column-gap"?: ColumnGapProperty<TLength>,
  "column-rule-color"?: GlobalsString,
  "column-rule-style"?: GlobalsString,
  "column-rule-width"?: ColumnRuleWidthProperty<TLength>,
  "column-span"?: ColumnSpanProperty,
  "column-width"?: ColumnWidthProperty<TLength>,
  contain?: GlobalsString,
  content?: GlobalsString,
  "counter-increment"?: GlobalsString,
  "counter-reset"?: GlobalsString,
  cursor?: GlobalsString,
  direction?: DirectionProperty,
  display?: GlobalsString,
  "empty-cells"?: EmptyCellsProperty,
  filter?: GlobalsString,
  "flex-basis"?: FlexBasisProperty<TLength>,
  "flex-direction"?: FlexDirectionProperty,
  "flex-grow"?: GlobalsNumber,
  "flex-shrink"?: GlobalsNumber,
  "flex-wrap"?: FlexWrapProperty,
  float?: FloatProperty,
  "font-family"?: GlobalsString,
  "font-feature-settings"?: GlobalsString,
  "font-kerning"?: FontKerningProperty,
  "font-language-override"?: GlobalsString,
  "font-optical-sizing"?: FontOpticalSizingProperty,
  "font-size"?: FontSizeProperty<TLength>,
  "font-size-adjust"?: FontSizeAdjustProperty,
  "font-stretch"?: GlobalsString,
  "font-style"?: GlobalsString,
  "font-synthesis"?: GlobalsString,
  "font-variant"?: GlobalsString,
  "font-variant-caps"?: FontVariantCapsProperty,
  "font-variant-east-asian"?: GlobalsString,
  "font-variant-ligatures"?: GlobalsString,
  "font-variant-numeric"?: GlobalsString,
  "font-variant-position"?: FontVariantPositionProperty,
  "font-variation-settings"?: GlobalsString,
  "font-weight"?: FontWeightProperty,
  "grid-auto-columns"?: GridAutoColumnsProperty<TLength>,
  "grid-auto-flow"?: GlobalsString,
  "grid-auto-rows"?: GridAutoRowsProperty<TLength>,
  "grid-column-end"?: GridColumnEndProperty,
  "grid-column-start"?: GridColumnStartProperty,
  "grid-row-end"?: GridRowEndProperty,
  "grid-row-start"?: GridRowStartProperty,
  "grid-template-areas"?: GlobalsString,
  "grid-template-columns"?: GridTemplateColumnsProperty<TLength>,
  "grid-template-rows"?: GridTemplateRowsProperty<TLength>,
  "hanging-punctuation"?: GlobalsString,
  height?: HeightProperty<TLength>,
  hyphens?: HyphensProperty,
  "image-orientation"?: GlobalsString,
  "image-rendering"?: ImageRenderingProperty,
  "image-resolution"?: GlobalsString,
  "initial-letter"?: InitialLetterProperty,
  "inline-size"?: InlineSizeProperty<TLength>,
  "inset-block-end"?: InsetBlockEndProperty<TLength>,
  "inset-block-start"?: InsetBlockStartProperty<TLength>,
  "inset-inline-end"?: InsetInlineEndProperty<TLength>,
  "inset-inline-start"?: InsetInlineStartProperty<TLength>,
  isolation?: IsolationProperty,
  "justify-content"?: GlobalsString,
  "justify-items"?: GlobalsString,
  "justify-self"?: GlobalsString,
  left?: LeftProperty<TLength>,
  "letter-spacing"?: LetterSpacingProperty<TLength>,
  "line-break"?: LineBreakProperty,
  "line-height"?: LineHeightProperty<TLength>,
  "line-height-step"?: LineHeightStepProperty<TLength>,
  "list-style-image"?: GlobalsString,
  "list-style-position"?: ListStylePositionProperty,
  "list-style-type"?: GlobalsString,
  "margin-block"?: MarginBlockProperty<TLength>,
  "margin-block-end"?: MarginBlockEndProperty<TLength>,
  "margin-block-start"?: MarginBlockStartProperty<TLength>,
  "margin-bottom"?: MarginBottomProperty<TLength>,
  "margin-inline"?: MarginInlineProperty<TLength>,
  "margin-inline-end"?: MarginInlineEndProperty<TLength>,
  "margin-inline-start"?: MarginInlineStartProperty<TLength>,
  "margin-left"?: MarginLeftProperty<TLength>,
  "margin-right"?: MarginRightProperty<TLength>,
  "margin-top"?: MarginTopProperty<TLength>,
  "mask-border-mode"?: MaskBorderModeProperty,
  "mask-border-outset"?: MaskBorderOutsetProperty<TLength>,
  "mask-border-repeat"?: GlobalsString,
  "mask-border-slice"?: MaskBorderSliceProperty,
  "mask-border-source"?: GlobalsString,
  "mask-border-width"?: MaskBorderWidthProperty<TLength>,
  "mask-clip"?: GlobalsString,
  "mask-composite"?: GlobalsString,
  "mask-image"?: GlobalsString,
  "mask-mode"?: GlobalsString,
  "mask-origin"?: GlobalsString,
  "mask-position"?: MaskPositionProperty<TLength>,
  "mask-repeat"?: GlobalsString,
  "mask-size"?: MaskSizeProperty<TLength>,
  "mask-type"?: MaskTypeProperty,
  "max-block-size"?: MaxBlockSizeProperty<TLength>,
  "max-height"?: MaxHeightProperty<TLength>,
  "max-inline-size"?: MaxInlineSizeProperty<TLength>,
  "max-lines"?: MaxLinesProperty,
  "max-width"?: MaxWidthProperty<TLength>,
  "min-block-size"?: MinBlockSizeProperty<TLength>,
  "min-height"?: MinHeightProperty<TLength>,
  "min-inline-size"?: MinInlineSizeProperty<TLength>,
  "min-width"?: MinWidthProperty<TLength>,
  "mix-blend-mode"?: MixBlendModeProperty,
  "motion-distance"?: OffsetDistanceProperty<TLength>,
  "motion-path"?: GlobalsString,
  "motion-rotation"?: GlobalsString,
  "object-fit"?: ObjectFitProperty,
  "object-position"?: ObjectPositionProperty<TLength>,
  "offset-anchor"?: OffsetAnchorProperty<TLength>,
  "offset-distance"?: OffsetDistanceProperty<TLength>,
  "offset-path"?: GlobalsString,
  "offset-position"?: OffsetPositionProperty<TLength>,
  "offset-rotate"?: GlobalsString,
  "offset-rotation"?: GlobalsString,
  opacity?: GlobalsNumber,
  order?: GlobalsNumber,
  orphans?: GlobalsNumber,
  "outline-color"?: GlobalsString,
  "outline-offset"?: OutlineOffsetProperty<TLength>,
  "outline-style"?: GlobalsString,
  "outline-width"?: OutlineWidthProperty<TLength>,
  overflow?: GlobalsString,
  "overflow-anchor"?: OverflowAnchorProperty,
  "overflow-block"?: GlobalsString,
  "overflow-clip-box"?: OverflowClipBoxProperty,
  "overflow-inline"?: GlobalsString,
  "overflow-wrap"?: OverflowWrapProperty,
  "overflow-x"?: OverflowXProperty,
  "overflow-y"?: OverflowYProperty,
  "overscroll-behavior"?: GlobalsString,
  "overscroll-behavior-x"?: OverscrollBehaviorXProperty,
  "overscroll-behavior-y"?: OverscrollBehaviorYProperty,
  "padding-block"?: PaddingBlockProperty<TLength>,
  "padding-block-end"?: PaddingBlockEndProperty<TLength>,
  "padding-block-start"?: PaddingBlockStartProperty<TLength>,
  "padding-bottom"?: PaddingBottomProperty<TLength>,
  "padding-inline"?: PaddingInlineProperty<TLength>,
  "padding-inline-end"?: PaddingInlineEndProperty<TLength>,
  "padding-inline-start"?: PaddingInlineStartProperty<TLength>,
  "padding-left"?: PaddingLeftProperty<TLength>,
  "padding-right"?: PaddingRightProperty<TLength>,
  "padding-top"?: PaddingTopProperty<TLength>,
  "page-break-after"?: PageBreakAfterProperty,
  "page-break-before"?: PageBreakBeforeProperty,
  "page-break-inside"?: PageBreakInsideProperty,
  "paint-order"?: GlobalsString,
  perspective?: PerspectiveProperty<TLength>,
  "perspective-origin"?: PerspectiveOriginProperty<TLength>,
  "place-content"?: GlobalsString,
  "pointer-events"?: PointerEventsProperty,
  position?: PositionProperty,
  quotes?: GlobalsString,
  resize?: ResizeProperty,
  right?: RightProperty<TLength>,
  rotate?: GlobalsString,
  "row-gap"?: RowGapProperty<TLength>,
  "ruby-align"?: RubyAlignProperty,
  "ruby-merge"?: RubyMergeProperty,
  "ruby-position"?: RubyPositionProperty,
  scale?: ScaleProperty,
  "scroll-behavior"?: ScrollBehaviorProperty,
  "scroll-margin"?: ScrollMarginProperty<TLength>,
  "scroll-margin-block"?: ScrollMarginBlockProperty<TLength>,
  "scroll-margin-block-end"?: ScrollMarginBlockEndProperty<TLength>,
  "scroll-margin-block-start"?: ScrollMarginBlockStartProperty<TLength>,
  "scroll-margin-bottom"?: ScrollMarginBottomProperty<TLength>,
  "scroll-margin-inline-end"?: ScrollMarginInlineEndProperty<TLength>,
  "scroll-margin-inline-start"?: ScrollMarginInlineStartProperty<TLength>,
  "scroll-margin-left"?: ScrollMarginLeftProperty<TLength>,
  "scroll-margin-right"?: ScrollMarginRightProperty<TLength>,
  "scroll-margin-top"?: ScrollMarginTopProperty<TLength>,
  "scroll-padding"?: ScrollPaddingProperty<TLength>,
  "scroll-padding-block"?: ScrollPaddingBlockProperty<TLength>,
  "scroll-padding-block-end"?: ScrollPaddingBlockEndProperty<TLength>,
  "scroll-padding-block-start"?: ScrollPaddingBlockStartProperty<TLength>,
  "scroll-padding-bottom"?: ScrollPaddingBottomProperty<TLength>,
  "scroll-padding-inline"?: ScrollPaddingInlineProperty<TLength>,
  "scroll-padding-inline-end"?: ScrollPaddingInlineEndProperty<TLength>,
  "scroll-padding-inline-start"?: ScrollPaddingInlineStartProperty<TLength>,
  "scroll-padding-left"?: ScrollPaddingLeftProperty<TLength>,
  "scroll-padding-right"?: ScrollPaddingRightProperty<TLength>,
  "scroll-padding-top"?: ScrollPaddingTopProperty<TLength>,
  "scroll-snap-align"?: GlobalsString,
  "scroll-snap-type"?: GlobalsString,
  "scrollbar-color"?: GlobalsString,
  "scrollbar-width"?: ScrollbarWidthProperty,
  "shape-image-threshold"?: GlobalsNumber,
  "shape-margin"?: ShapeMarginProperty<TLength>,
  "shape-outside"?: GlobalsString,
  "tab-size"?: TabSizeProperty<TLength>,
  "table-layout"?: TableLayoutProperty,
  "text-align"?: TextAlignProperty,
  "text-align-last"?: TextAlignLastProperty,
  "text-combine-upright"?: GlobalsString,
  "text-decoration-color"?: GlobalsString,
  "text-decoration-line"?: GlobalsString,
  "text-decoration-skip"?: GlobalsString,
  "text-decoration-skip-ink"?: TextDecorationSkipInkProperty,
  "text-decoration-style"?: TextDecorationStyleProperty,
  "text-emphasis-color"?: GlobalsString,
  "text-emphasis-position"?: GlobalsString,
  "text-emphasis-style"?: GlobalsString,
  "text-indent"?: TextIndentProperty<TLength>,
  "text-justify"?: TextJustifyProperty,
  "text-orientation"?: TextOrientationProperty,
  "text-overflow"?: GlobalsString,
  "text-rendering"?: TextRenderingProperty,
  "text-shadow"?: GlobalsString,
  "text-size-adjust"?: GlobalsString,
  "text-transform"?: TextTransformProperty,
  "text-underline-position"?: GlobalsString,
  top?: TopProperty<TLength>,
  "touch-action"?: GlobalsString,
  transform?: GlobalsString,
  "transform-box"?: TransformBoxProperty,
  "transform-origin"?: TransformOriginProperty<TLength>,
  "transform-style"?: TransformStyleProperty,
  "transition-delay"?: GlobalsString,
  "transition-duration"?: GlobalsString,
  "transition-property"?: GlobalsString,
  "transition-timing-function"?: GlobalsString,
  translate?: TranslateProperty<TLength>,
  "unicode-bidi"?: UnicodeBidiProperty,
  "user-select"?: UserSelectProperty,
  "vertical-align"?: VerticalAlignProperty<TLength>,
  visibility?: VisibilityProperty,
  "white-space"?: WhiteSpaceProperty,
  widows?: GlobalsNumber,
  width?: WidthProperty<TLength>,
  "will-change"?: GlobalsString,
  "word-break"?: WordBreakProperty,
  "word-spacing"?: WordSpacingProperty<TLength>,
  "word-wrap"?: WordWrapProperty,
  "writing-mode"?: WritingModeProperty,
  "z-index"?: ZIndexProperty,
  zoom?: ZoomProperty,
};

export type StandardShorthandPropertiesHyphen<TLength = string | 0> = {
  all?: Globals,
  animation?: AnimationProperty,
  background?: BackgroundProperty<TLength>,
  border?: BorderProperty<TLength>,
  "border-block"?: BorderBlockProperty<TLength>,
  "border-block-end"?: BorderBlockEndProperty<TLength>,
  "border-block-start"?: BorderBlockStartProperty<TLength>,
  "border-bottom"?: BorderBottomProperty<TLength>,
  "border-color"?: GlobalsString,
  "border-image"?: BorderImageProperty,
  "border-inline"?: BorderInlineProperty<TLength>,
  "border-inline-end"?: BorderInlineEndProperty<TLength>,
  "border-inline-start"?: BorderInlineStartProperty<TLength>,
  "border-left"?: BorderLeftProperty<TLength>,
  "border-radius"?: BorderRadiusProperty<TLength>,
  "border-right"?: BorderRightProperty<TLength>,
  "border-style"?: GlobalsString,
  "border-top"?: BorderTopProperty<TLength>,
  "border-width"?: BorderWidthProperty<TLength>,
  "column-rule"?: ColumnRuleProperty<TLength>,
  columns?: ColumnsProperty<TLength>,
  flex?: FlexProperty<TLength>,
  "flex-flow"?: GlobalsString,
  font?: GlobalsString,
  gap?: GapProperty<TLength>,
  grid?: GlobalsString,
  "grid-area"?: GridAreaProperty,
  "grid-column"?: GridColumnProperty,
  "grid-row"?: GridRowProperty,
  "grid-template"?: GlobalsString,
  "line-clamp"?: LineClampProperty,
  "list-style"?: GlobalsString,
  margin?: MarginProperty<TLength>,
  mask?: MaskProperty<TLength>,
  "mask-border"?: MaskBorderProperty,
  motion?: OffsetProperty<TLength>,
  offset?: OffsetProperty<TLength>,
  outline?: OutlineProperty<TLength>,
  padding?: PaddingProperty<TLength>,
  "place-items"?: GlobalsString,
  "place-self"?: GlobalsString,
  "text-decoration"?: GlobalsString,
  "text-emphasis"?: GlobalsString,
  transition?: GlobalsString,
};

export type StandardPropertiesHyphen<TLength = string | 0> = StandardLonghandPropertiesHyphen<TLength> & StandardShorthandPropertiesHyphen<TLength>;

export type VendorLonghandPropertiesHyphen<TLength = string | 0> = {
  "-moz-animation-delay"?: GlobalsString,
  "-moz-animation-direction"?: GlobalsString,
  "-moz-animation-duration"?: GlobalsString,
  "-moz-animation-fill-mode"?: GlobalsString,
  "-moz-animation-iteration-count"?: AnimationIterationCountProperty,
  "-moz-animation-name"?: GlobalsString,
  "-moz-animation-play-state"?: GlobalsString,
  "-moz-animation-timing-function"?: GlobalsString,
  "-moz-appearance"?: MozAppearanceProperty,
  "-moz-backface-visibility"?: BackfaceVisibilityProperty,
  "-moz-border-bottom-colors"?: GlobalsString,
  "-moz-border-end-color"?: GlobalsString,
  "-moz-border-end-style"?: BorderInlineEndStyleProperty,
  "-moz-border-end-width"?: BorderInlineEndWidthProperty<TLength>,
  "-moz-border-left-colors"?: GlobalsString,
  "-moz-border-right-colors"?: GlobalsString,
  "-moz-border-start-color"?: GlobalsString,
  "-moz-border-start-style"?: BorderInlineStartStyleProperty,
  "-moz-border-top-colors"?: GlobalsString,
  "-moz-box-sizing"?: BoxSizingProperty,
  "-moz-column-count"?: ColumnCountProperty,
  "-moz-column-fill"?: ColumnFillProperty,
  "-moz-column-gap"?: ColumnGapProperty<TLength>,
  "-moz-column-rule-color"?: GlobalsString,
  "-moz-column-rule-style"?: GlobalsString,
  "-moz-column-rule-width"?: ColumnRuleWidthProperty<TLength>,
  "-moz-column-width"?: ColumnWidthProperty<TLength>,
  "-moz-context-properties"?: GlobalsString,
  "-moz-float-edge"?: MozFloatEdgeProperty,
  "-moz-font-feature-settings"?: GlobalsString,
  "-moz-font-language-override"?: GlobalsString,
  "-moz-force-broken-image-icon"?: GlobalsNumber,
  "-moz-hyphens"?: HyphensProperty,
  "-moz-image-region"?: GlobalsString,
  "-moz-margin-end"?: MarginInlineEndProperty<TLength>,
  "-moz-margin-start"?: MarginInlineStartProperty<TLength>,
  "-moz-orient"?: MozOrientProperty,
  "-moz-outline-radius-bottomleft"?: MozOutlineRadiusBottomleftProperty<TLength>,
  "-moz-outline-radius-bottomright"?: MozOutlineRadiusBottomrightProperty<TLength>,
  "-moz-outline-radius-topleft"?: MozOutlineRadiusTopleftProperty<TLength>,
  "-moz-outline-radius-topright"?: MozOutlineRadiusToprightProperty<TLength>,
  "-moz-padding-end"?: PaddingInlineEndProperty<TLength>,
  "-moz-padding-start"?: PaddingInlineStartProperty<TLength>,
  "-moz-perspective"?: PerspectiveProperty<TLength>,
  "-moz-perspective-origin"?: PerspectiveOriginProperty<TLength>,
  "-moz-stack-sizing"?: MozStackSizingProperty,
  "-moz-tab-size"?: TabSizeProperty<TLength>,
  "-moz-text-size-adjust"?: GlobalsString,
  "-moz-transform-origin"?: TransformOriginProperty<TLength>,
  "-moz-transform-style"?: TransformStyleProperty,
  "-moz-transition-delay"?: GlobalsString,
  "-moz-transition-duration"?: GlobalsString,
  "-moz-transition-property"?: GlobalsString,
  "-moz-transition-timing-function"?: GlobalsString,
  "-moz-user-focus"?: MozUserFocusProperty,
  "-moz-user-modify"?: MozUserModifyProperty,
  "-moz-user-select"?: UserSelectProperty,
  "-moz-window-dragging"?: MozWindowDraggingProperty,
  "-moz-window-shadow"?: MozWindowShadowProperty,
  "-ms-accelerator"?: MsAcceleratorProperty,
  "-ms-align-self"?: GlobalsString,
  "-ms-block-progression"?: MsBlockProgressionProperty,
  "-ms-content-zoom-chaining"?: MsContentZoomChainingProperty,
  "-ms-content-zoom-limit-max"?: GlobalsString,
  "-ms-content-zoom-limit-min"?: GlobalsString,
  "-ms-content-zoom-snap-points"?: GlobalsString,
  "-ms-content-zoom-snap-type"?: MsContentZoomSnapTypeProperty,
  "-ms-content-zooming"?: MsContentZoomingProperty,
  "-ms-filter"?: GlobalsString,
  "-ms-flex-direction"?: FlexDirectionProperty,
  "-ms-flex-positive"?: GlobalsNumber,
  "-ms-flow-from"?: GlobalsString,
  "-ms-flow-into"?: GlobalsString,
  "-ms-grid-columns"?: GridAutoColumnsProperty<TLength>,
  "-ms-grid-rows"?: GridAutoRowsProperty<TLength>,
  "-ms-high-contrast-adjust"?: MsHighContrastAdjustProperty,
  "-ms-hyphenate-limit-chars"?: MsHyphenateLimitCharsProperty,
  "-ms-hyphenate-limit-lines"?: MsHyphenateLimitLinesProperty,
  "-ms-hyphenate-limit-zone"?: MsHyphenateLimitZoneProperty<TLength>,
  "-ms-hyphens"?: HyphensProperty,
  "-ms-ime-align"?: MsImeAlignProperty,
  "-ms-line-break"?: LineBreakProperty,
  "-ms-order"?: GlobalsNumber,
  "-ms-overflow-style"?: MsOverflowStyleProperty,
  "-ms-overflow-x"?: OverflowXProperty,
  "-ms-overflow-y"?: OverflowYProperty,
  "-ms-scroll-chaining"?: MsScrollChainingProperty,
  "-ms-scroll-limit-x-max"?: MsScrollLimitXMaxProperty<TLength>,
  "-ms-scroll-limit-x-min"?: MsScrollLimitXMinProperty<TLength>,
  "-ms-scroll-limit-y-max"?: MsScrollLimitYMaxProperty<TLength>,
  "-ms-scroll-limit-y-min"?: MsScrollLimitYMinProperty<TLength>,
  "-ms-scroll-rails"?: MsScrollRailsProperty,
  "-ms-scroll-snap-points-x"?: GlobalsString,
  "-ms-scroll-snap-points-y"?: GlobalsString,
  "-ms-scroll-snap-type"?: MsScrollSnapTypeProperty,
  "-ms-scroll-translation"?: MsScrollTranslationProperty,
  "-ms-text-autospace"?: MsTextAutospaceProperty,
  "-ms-text-combine-horizontal"?: GlobalsString,
  "-ms-text-overflow"?: GlobalsString,
  "-ms-text-size-adjust"?: GlobalsString,
  "-ms-touch-action"?: GlobalsString,
  "-ms-touch-select"?: MsTouchSelectProperty,
  "-ms-transform"?: GlobalsString,
  "-ms-transform-origin"?: TransformOriginProperty<TLength>,
  "-ms-user-select"?: MsUserSelectProperty,
  "-ms-word-break"?: WordBreakProperty,
  "-ms-wrap-flow"?: MsWrapFlowProperty,
  "-ms-wrap-margin"?: MsWrapMarginProperty<TLength>,
  "-ms-wrap-through"?: MsWrapThroughProperty,
  "-ms-writing-mode"?: WritingModeProperty,
  "-o-object-fit"?: ObjectFitProperty,
  "-o-object-position"?: ObjectPositionProperty<TLength>,
  "-o-tab-size"?: TabSizeProperty<TLength>,
  "-o-text-overflow"?: GlobalsString,
  "-o-transform-origin"?: TransformOriginProperty<TLength>,
  "-webkit-align-content"?: GlobalsString,
  "-webkit-align-items"?: GlobalsString,
  "-webkit-align-self"?: GlobalsString,
  "-webkit-animation-delay"?: GlobalsString,
  "-webkit-animation-direction"?: GlobalsString,
  "-webkit-animation-duration"?: GlobalsString,
  "-webkit-animation-fill-mode"?: GlobalsString,
  "-webkit-animation-iteration-count"?: AnimationIterationCountProperty,
  "-webkit-animation-name"?: GlobalsString,
  "-webkit-animation-play-state"?: GlobalsString,
  "-webkit-animation-timing-function"?: GlobalsString,
  "-webkit-appearance"?: WebkitAppearanceProperty,
  "-webkit-backdrop-filter"?: GlobalsString,
  "-webkit-backface-visibility"?: BackfaceVisibilityProperty,
  "-webkit-background-clip"?: GlobalsString,
  "-webkit-background-origin"?: GlobalsString,
  "-webkit-background-size"?: BackgroundSizeProperty<TLength>,
  "-webkit-border-before-color"?: GlobalsString,
  "-webkit-border-before-style"?: GlobalsString,
  "-webkit-border-before-width"?: WebkitBorderBeforeWidthProperty<TLength>,
  "-webkit-border-bottom-left-radius"?: BorderBottomLeftRadiusProperty<TLength>,
  "-webkit-border-bottom-right-radius"?: BorderBottomRightRadiusProperty<TLength>,
  "-webkit-border-image-slice"?: BorderImageSliceProperty,
  "-webkit-border-top-left-radius"?: BorderTopLeftRadiusProperty<TLength>,
  "-webkit-border-top-right-radius"?: BorderTopRightRadiusProperty<TLength>,
  "-webkit-box-decoration-break"?: BoxDecorationBreakProperty,
  "-webkit-box-reflect"?: WebkitBoxReflectProperty<TLength>,
  "-webkit-box-shadow"?: GlobalsString,
  "-webkit-box-sizing"?: BoxSizingProperty,
  "-webkit-clip-path"?: GlobalsString,
  "-webkit-color-adjust"?: ColorAdjustProperty,
  "-webkit-column-count"?: ColumnCountProperty,
  "-webkit-column-gap"?: ColumnGapProperty<TLength>,
  "-webkit-column-rule-color"?: GlobalsString,
  "-webkit-column-rule-style"?: GlobalsString,
  "-webkit-column-rule-width"?: ColumnRuleWidthProperty<TLength>,
  "-webkit-column-span"?: ColumnSpanProperty,
  "-webkit-column-width"?: ColumnWidthProperty<TLength>,
  "-webkit-filter"?: GlobalsString,
  "-webkit-flex-basis"?: FlexBasisProperty<TLength>,
  "-webkit-flex-direction"?: FlexDirectionProperty,
  "-webkit-flex-grow"?: GlobalsNumber,
  "-webkit-flex-shrink"?: GlobalsNumber,
  "-webkit-flex-wrap"?: FlexWrapProperty,
  "-webkit-font-feature-settings"?: GlobalsString,
  "-webkit-font-kerning"?: FontKerningProperty,
  "-webkit-font-variant-ligatures"?: GlobalsString,
  "-webkit-hyphens"?: HyphensProperty,
  "-webkit-justify-content"?: GlobalsString,
  "-webkit-line-break"?: LineBreakProperty,
  "-webkit-margin-end"?: MarginInlineEndProperty<TLength>,
  "-webkit-margin-start"?: MarginInlineStartProperty<TLength>,
  "-webkit-mask-attachment"?: GlobalsString,
  "-webkit-mask-clip"?: GlobalsString,
  "-webkit-mask-composite"?: GlobalsString,
  "-webkit-mask-image"?: GlobalsString,
  "-webkit-mask-origin"?: GlobalsString,
  "-webkit-mask-position"?: WebkitMaskPositionProperty<TLength>,
  "-webkit-mask-position-x"?: WebkitMaskPositionXProperty<TLength>,
  "-webkit-mask-position-y"?: WebkitMaskPositionYProperty<TLength>,
  "-webkit-mask-repeat"?: GlobalsString,
  "-webkit-mask-repeat-x"?: WebkitMaskRepeatXProperty,
  "-webkit-mask-repeat-y"?: WebkitMaskRepeatYProperty,
  "-webkit-mask-size"?: WebkitMaskSizeProperty<TLength>,
  "-webkit-max-inline-size"?: MaxInlineSizeProperty<TLength>,
  "-webkit-order"?: GlobalsNumber,
  "-webkit-overflow-scrolling"?: WebkitOverflowScrollingProperty,
  "-webkit-padding-end"?: PaddingInlineEndProperty<TLength>,
  "-webkit-padding-start"?: PaddingInlineStartProperty<TLength>,
  "-webkit-perspective"?: PerspectiveProperty<TLength>,
  "-webkit-perspective-origin"?: PerspectiveOriginProperty<TLength>,
  "-webkit-scroll-snap-type"?: GlobalsString,
  "-webkit-shape-margin"?: ShapeMarginProperty<TLength>,
  "-webkit-tap-highlight-color"?: GlobalsString,
  "-webkit-text-combine"?: GlobalsString,
  "-webkit-text-decoration-color"?: GlobalsString,
  "-webkit-text-decoration-line"?: GlobalsString,
  "-webkit-text-decoration-skip"?: GlobalsString,
  "-webkit-text-decoration-style"?: TextDecorationStyleProperty,
  "-webkit-text-emphasis-color"?: GlobalsString,
  "-webkit-text-emphasis-position"?: GlobalsString,
  "-webkit-text-emphasis-style"?: GlobalsString,
  "-webkit-text-fill-color"?: GlobalsString,
  "-webkit-text-orientation"?: TextOrientationProperty,
  "-webkit-text-size-adjust"?: GlobalsString,
  "-webkit-text-stroke-color"?: GlobalsString,
  "-webkit-text-stroke-width"?: WebkitTextStrokeWidthProperty<TLength>,
  "-webkit-touch-callout"?: WebkitTouchCalloutProperty,
  "-webkit-transform"?: GlobalsString,
  "-webkit-transform-origin"?: TransformOriginProperty<TLength>,
  "-webkit-transform-style"?: TransformStyleProperty,
  "-webkit-transition-delay"?: GlobalsString,
  "-webkit-transition-duration"?: GlobalsString,
  "-webkit-transition-property"?: GlobalsString,
  "-webkit-transition-timing-function"?: GlobalsString,
  "-webkit-user-modify"?: WebkitUserModifyProperty,
  "-webkit-user-select"?: UserSelectProperty,
  "-webkit-writing-mode"?: WritingModeProperty,
};

export type VendorShorthandPropertiesHyphen<TLength = string | 0> = {
  "-moz-animation"?: AnimationProperty,
  "-moz-border-image"?: BorderImageProperty,
  "-moz-column-rule"?: ColumnRuleProperty<TLength>,
  "-moz-columns"?: ColumnsProperty<TLength>,
  "-moz-transition"?: GlobalsString,
  "-ms-content-zoom-limit"?: GlobalsString,
  "-ms-content-zoom-snap"?: GlobalsString,
  "-ms-flex"?: FlexProperty<TLength>,
  "-ms-scroll-limit"?: GlobalsString,
  "-ms-scroll-snap-x"?: GlobalsString,
  "-ms-scroll-snap-y"?: GlobalsString,
  "-o-border-image"?: BorderImageProperty,
  "-webkit-animation"?: AnimationProperty,
  "-webkit-border-before"?: WebkitBorderBeforeProperty<TLength>,
  "-webkit-border-image"?: BorderImageProperty,
  "-webkit-border-radius"?: BorderRadiusProperty<TLength>,
  "-webkit-column-rule"?: ColumnRuleProperty<TLength>,
  "-webkit-columns"?: ColumnsProperty<TLength>,
  "-webkit-flex"?: FlexProperty<TLength>,
  "-webkit-flex-flow"?: GlobalsString,
  "-webkit-line-clamp"?: WebkitLineClampProperty,
  "-webkit-mask"?: WebkitMaskProperty<TLength>,
  "-webkit-text-emphasis"?: GlobalsString,
  "-webkit-text-stroke"?: WebkitTextStrokeProperty<TLength>,
  "-webkit-transition"?: GlobalsString,
};

export type VendorPropertiesHyphen<TLength = string | 0> = VendorLonghandPropertiesHyphen<TLength> & VendorShorthandPropertiesHyphen<TLength>;

export type ObsoletePropertiesHyphen<TLength = string | 0> = {
  "box-align"?: BoxAlignProperty,
  "box-direction"?: BoxDirectionProperty,
  "box-flex"?: GlobalsNumber,
  "box-flex-group"?: GlobalsNumber,
  "box-lines"?: BoxLinesProperty,
  "box-ordinal-group"?: GlobalsNumber,
  "box-orient"?: BoxOrientProperty,
  "box-pack"?: BoxPackProperty,
  clip?: GlobalsString,
  "font-variant-alternates"?: GlobalsString,
  "grid-column-gap"?: GridColumnGapProperty<TLength>,
  "grid-gap"?: GridGapProperty<TLength>,
  "grid-row-gap"?: GridRowGapProperty<TLength>,
  "ime-mode"?: ImeModeProperty,
  "offset-block-end"?: InsetBlockEndProperty<TLength>,
  "offset-block-start"?: InsetBlockStartProperty<TLength>,
  "offset-inline-end"?: InsetInlineEndProperty<TLength>,
  "offset-inline-start"?: InsetInlineStartProperty<TLength>,
  "scroll-snap-coordinate"?: ScrollSnapCoordinateProperty<TLength>,
  "scroll-snap-destination"?: ScrollSnapDestinationProperty<TLength>,
  "scroll-snap-points-x"?: GlobalsString,
  "scroll-snap-points-y"?: GlobalsString,
  "scroll-snap-type-x"?: ScrollSnapTypeXProperty,
  "scroll-snap-type-y"?: ScrollSnapTypeYProperty,
  "text-combine-horizontal"?: GlobalsString,
  "-khtml-box-align"?: BoxAlignProperty,
  "-khtml-box-direction"?: BoxDirectionProperty,
  "-khtml-box-flex"?: GlobalsNumber,
  "-khtml-box-flex-group"?: GlobalsNumber,
  "-khtml-box-lines"?: BoxLinesProperty,
  "-khtml-box-ordinal-group"?: GlobalsNumber,
  "-khtml-box-orient"?: BoxOrientProperty,
  "-khtml-box-pack"?: BoxPackProperty,
  "-moz-background-clip"?: GlobalsString,
  "-moz-background-inline-policy"?: BoxDecorationBreakProperty,
  "-moz-background-origin"?: GlobalsString,
  "-moz-background-size"?: BackgroundSizeProperty<TLength>,
  "-moz-binding"?: GlobalsString,
  "-moz-border-radius"?: BorderRadiusProperty<TLength>,
  "-moz-border-radius-bottomleft"?: BorderBottomLeftRadiusProperty<TLength>,
  "-moz-border-radius-bottomright"?: BorderBottomRightRadiusProperty<TLength>,
  "-moz-border-radius-topleft"?: BorderTopLeftRadiusProperty<TLength>,
  "-moz-border-radius-topright"?: BorderTopRightRadiusProperty<TLength>,
  "-moz-box-align"?: BoxAlignProperty,
  "-moz-box-direction"?: BoxDirectionProperty,
  "-moz-box-flex"?: GlobalsNumber,
  "-moz-box-ordinal-group"?: GlobalsNumber,
  "-moz-box-orient"?: BoxOrientProperty,
  "-moz-box-pack"?: BoxPackProperty,
  "-moz-box-shadow"?: GlobalsString,
  "-moz-opacity"?: GlobalsNumber,
  "-moz-outline"?: OutlineProperty<TLength>,
  "-moz-outline-color"?: GlobalsString,
  "-moz-outline-radius"?: MozOutlineRadiusProperty<TLength>,
  "-moz-outline-style"?: GlobalsString,
  "-moz-outline-width"?: OutlineWidthProperty<TLength>,
  "-moz-resize"?: ResizeProperty,
  "-moz-text-align-last"?: TextAlignLastProperty,
  "-moz-text-blink"?: MozTextBlinkProperty,
  "-moz-text-decoration-color"?: GlobalsString,
  "-moz-text-decoration-line"?: GlobalsString,
  "-moz-text-decoration-style"?: TextDecorationStyleProperty,
  "-moz-user-input"?: MozUserInputProperty,
  "-ms-ime-mode"?: ImeModeProperty,
  "-ms-scrollbar-3dlight-color"?: GlobalsString,
  "-ms-scrollbar-arrow-color"?: GlobalsString,
  "-ms-scrollbar-base-color"?: GlobalsString,
  "-ms-scrollbar-darkshadow-color"?: GlobalsString,
  "-ms-scrollbar-face-color"?: GlobalsString,
  "-ms-scrollbar-highlight-color"?: GlobalsString,
  "-ms-scrollbar-shadow-color"?: GlobalsString,
  "-ms-scrollbar-track-color"?: GlobalsString,
  "-o-animation"?: AnimationProperty,
  "-o-animation-delay"?: GlobalsString,
  "-o-animation-direction"?: GlobalsString,
  "-o-animation-duration"?: GlobalsString,
  "-o-animation-fill-mode"?: GlobalsString,
  "-o-animation-iteration-count"?: AnimationIterationCountProperty,
  "-o-animation-name"?: GlobalsString,
  "-o-animation-play-state"?: GlobalsString,
  "-o-animation-timing-function"?: GlobalsString,
  "-o-background-size"?: BackgroundSizeProperty<TLength>,
  "-o-transform"?: GlobalsString,
  "-o-transition"?: GlobalsString,
  "-o-transition-delay"?: GlobalsString,
  "-o-transition-duration"?: GlobalsString,
  "-o-transition-property"?: GlobalsString,
  "-o-transition-timing-function"?: GlobalsString,
  "-webkit-box-align"?: BoxAlignProperty,
  "-webkit-box-direction"?: BoxDirectionProperty,
  "-webkit-box-flex"?: GlobalsNumber,
  "-webkit-box-flex-group"?: GlobalsNumber,
  "-webkit-box-lines"?: BoxLinesProperty,
  "-webkit-box-ordinal-group"?: GlobalsNumber,
  "-webkit-box-orient"?: BoxOrientProperty,
  "-webkit-box-pack"?: BoxPackProperty,
  "-webkit-scroll-snap-points-x"?: GlobalsString,
  "-webkit-scroll-snap-points-y"?: GlobalsString,
};

export type SvgPropertiesHyphen<TLength = string | 0> = {
  "alignment-baseline"?: AlignmentBaselineProperty,
  "baseline-shift"?: BaselineShiftProperty<TLength>,
  clip?: GlobalsString,
  "clip-path"?: GlobalsString,
  "clip-rule"?: ClipRuleProperty,
  color?: GlobalsString,
  "color-interpolation"?: ColorInterpolationProperty,
  "color-rendering"?: ColorRenderingProperty,
  cursor?: GlobalsString,
  direction?: DirectionProperty,
  display?: GlobalsString,
  "dominant-baseline"?: DominantBaselineProperty,
  fill?: GlobalsString,
  "fill-opacity"?: GlobalsNumber,
  "fill-rule"?: FillRuleProperty,
  filter?: GlobalsString,
  "flood-color"?: GlobalsString,
  "flood-opacity"?: GlobalsNumber,
  font?: GlobalsString,
  "font-family"?: GlobalsString,
  "font-size"?: FontSizeProperty<TLength>,
  "font-size-adjust"?: FontSizeAdjustProperty,
  "font-stretch"?: GlobalsString,
  "font-style"?: GlobalsString,
  "font-variant"?: GlobalsString,
  "font-weight"?: FontWeightProperty,
  "glyph-orientation-vertical"?: GlyphOrientationVerticalProperty,
  "image-rendering"?: ImageRenderingProperty,
  "letter-spacing"?: LetterSpacingProperty<TLength>,
  "lighting-color"?: GlobalsString,
  "line-height"?: LineHeightProperty<TLength>,
  marker?: GlobalsString,
  "marker-end"?: GlobalsString,
  "marker-mid"?: GlobalsString,
  "marker-start"?: GlobalsString,
  mask?: MaskProperty<TLength>,
  opacity?: GlobalsNumber,
  overflow?: GlobalsString,
  "paint-order"?: GlobalsString,
  "pointer-events"?: PointerEventsProperty,
  "shape-rendering"?: ShapeRenderingProperty,
  "stop-color"?: GlobalsString,
  "stop-opacity"?: GlobalsNumber,
  stroke?: GlobalsString,
  "stroke-dasharray"?: StrokeDasharrayProperty<TLength>,
  "stroke-dashoffset"?: StrokeDashoffsetProperty<TLength>,
  "stroke-linecap"?: StrokeLinecapProperty,
  "stroke-linejoin"?: StrokeLinejoinProperty,
  "stroke-miterlimit"?: GlobalsNumber,
  "stroke-opacity"?: GlobalsNumber,
  "stroke-width"?: StrokeWidthProperty<TLength>,
  "text-anchor"?: TextAnchorProperty,
  "text-decoration"?: GlobalsString,
  "text-rendering"?: TextRenderingProperty,
  "unicode-bidi"?: UnicodeBidiProperty,
  "vector-effect"?: VectorEffectProperty,
  visibility?: VisibilityProperty,
  "white-space"?: WhiteSpaceProperty,
  "word-spacing"?: WordSpacingProperty<TLength>,
  "writing-mode"?: WritingModeProperty,
};

export type PropertiesHyphen<TLength = string | 0> = StandardPropertiesHyphen<TLength> &
  VendorPropertiesHyphen<TLength> &
  ObsoletePropertiesHyphen<TLength> &
  SvgPropertiesHyphen<TLength>;

export type StandardLonghandPropertiesFallback<TLength = string | 0> = {
  alignContent?: GlobalsString | GlobalsString[],
  alignItems?: GlobalsString | GlobalsString[],
  alignSelf?: GlobalsString | GlobalsString[],
  animationDelay?: GlobalsString | GlobalsString[],
  animationDirection?: GlobalsString | GlobalsString[],
  animationDuration?: GlobalsString | GlobalsString[],
  animationFillMode?: GlobalsString | GlobalsString[],
  animationIterationCount?: AnimationIterationCountProperty | AnimationIterationCountProperty[],
  animationName?: GlobalsString | GlobalsString[],
  animationPlayState?: GlobalsString | GlobalsString[],
  animationTimingFunction?: GlobalsString | GlobalsString[],
  appearance?: AppearanceProperty | AppearanceProperty[],
  backdropFilter?: GlobalsString | GlobalsString[],
  backfaceVisibility?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[],
  backgroundAttachment?: GlobalsString | GlobalsString[],
  backgroundBlendMode?: GlobalsString | GlobalsString[],
  backgroundClip?: GlobalsString | GlobalsString[],
  backgroundColor?: GlobalsString | GlobalsString[],
  backgroundImage?: GlobalsString | GlobalsString[],
  backgroundOrigin?: GlobalsString | GlobalsString[],
  backgroundPosition?: BackgroundPositionProperty<TLength> | BackgroundPositionProperty<TLength>[],
  backgroundPositionX?: BackgroundPositionXProperty<TLength> | BackgroundPositionXProperty<TLength>[],
  backgroundPositionY?: BackgroundPositionYProperty<TLength> | BackgroundPositionYProperty<TLength>[],
  backgroundRepeat?: GlobalsString | GlobalsString[],
  backgroundSize?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[],
  blockOverflow?: GlobalsString | GlobalsString[],
  blockSize?: BlockSizeProperty<TLength> | BlockSizeProperty<TLength>[],
  borderBlockColor?: GlobalsString | GlobalsString[],
  borderBlockEndColor?: GlobalsString | GlobalsString[],
  borderBlockEndStyle?: BorderBlockEndStyleProperty | BorderBlockEndStyleProperty[],
  borderBlockEndWidth?: BorderBlockEndWidthProperty<TLength> | BorderBlockEndWidthProperty<TLength>[],
  borderBlockStartColor?: GlobalsString | GlobalsString[],
  borderBlockStartStyle?: BorderBlockStartStyleProperty | BorderBlockStartStyleProperty[],
  borderBlockStartWidth?: BorderBlockStartWidthProperty<TLength> | BorderBlockStartWidthProperty<TLength>[],
  borderBlockStyle?: BorderBlockStyleProperty | BorderBlockStyleProperty[],
  borderBlockWidth?: BorderBlockWidthProperty<TLength> | BorderBlockWidthProperty<TLength>[],
  borderBottomColor?: GlobalsString | GlobalsString[],
  borderBottomLeftRadius?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[],
  borderBottomRightRadius?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[],
  borderBottomStyle?: BorderBottomStyleProperty | BorderBottomStyleProperty[],
  borderBottomWidth?: BorderBottomWidthProperty<TLength> | BorderBottomWidthProperty<TLength>[],
  borderCollapse?: BorderCollapseProperty | BorderCollapseProperty[],
  borderEndEndRadius?: BorderEndEndRadiusProperty<TLength> | BorderEndEndRadiusProperty<TLength>[],
  borderEndStartRadius?: BorderEndStartRadiusProperty<TLength> | BorderEndStartRadiusProperty<TLength>[],
  borderImageOutset?: BorderImageOutsetProperty<TLength> | BorderImageOutsetProperty<TLength>[],
  borderImageRepeat?: GlobalsString | GlobalsString[],
  borderImageSlice?: BorderImageSliceProperty | BorderImageSliceProperty[],
  borderImageSource?: GlobalsString | GlobalsString[],
  borderImageWidth?: BorderImageWidthProperty<TLength> | BorderImageWidthProperty<TLength>[],
  borderInlineColor?: GlobalsString | GlobalsString[],
  borderInlineEndColor?: GlobalsString | GlobalsString[],
  borderInlineEndStyle?: BorderInlineEndStyleProperty | BorderInlineEndStyleProperty[],
  borderInlineEndWidth?: BorderInlineEndWidthProperty<TLength> | BorderInlineEndWidthProperty<TLength>[],
  borderInlineStartColor?: GlobalsString | GlobalsString[],
  borderInlineStartStyle?: BorderInlineStartStyleProperty | BorderInlineStartStyleProperty[],
  borderInlineStartWidth?: BorderInlineStartWidthProperty<TLength> | BorderInlineStartWidthProperty<TLength>[],
  borderInlineStyle?: BorderInlineStyleProperty | BorderInlineStyleProperty[],
  borderInlineWidth?: BorderInlineWidthProperty<TLength> | BorderInlineWidthProperty<TLength>[],
  borderLeftColor?: GlobalsString | GlobalsString[],
  borderLeftStyle?: BorderLeftStyleProperty | BorderLeftStyleProperty[],
  borderLeftWidth?: BorderLeftWidthProperty<TLength> | BorderLeftWidthProperty<TLength>[],
  borderRightColor?: GlobalsString | GlobalsString[],
  borderRightStyle?: BorderRightStyleProperty | BorderRightStyleProperty[],
  borderRightWidth?: BorderRightWidthProperty<TLength> | BorderRightWidthProperty<TLength>[],
  borderSpacing?: BorderSpacingProperty<TLength> | BorderSpacingProperty<TLength>[],
  borderStartEndRadius?: BorderStartEndRadiusProperty<TLength> | BorderStartEndRadiusProperty<TLength>[],
  borderStartStartRadius?: BorderStartStartRadiusProperty<TLength> | BorderStartStartRadiusProperty<TLength>[],
  borderTopColor?: GlobalsString | GlobalsString[],
  borderTopLeftRadius?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[],
  borderTopRightRadius?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[],
  borderTopStyle?: BorderTopStyleProperty | BorderTopStyleProperty[],
  borderTopWidth?: BorderTopWidthProperty<TLength> | BorderTopWidthProperty<TLength>[],
  bottom?: BottomProperty<TLength> | BottomProperty<TLength>[],
  boxDecorationBreak?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[],
  boxShadow?: GlobalsString | GlobalsString[],
  boxSizing?: BoxSizingProperty | BoxSizingProperty[],
  breakAfter?: BreakAfterProperty | BreakAfterProperty[],
  breakBefore?: BreakBeforeProperty | BreakBeforeProperty[],
  breakInside?: BreakInsideProperty | BreakInsideProperty[],
  captionSide?: CaptionSideProperty | CaptionSideProperty[],
  caretColor?: GlobalsString | GlobalsString[],
  clear?: ClearProperty | ClearProperty[],
  clipPath?: GlobalsString | GlobalsString[],
  color?: GlobalsString | GlobalsString[],
  colorAdjust?: ColorAdjustProperty | ColorAdjustProperty[],
  columnCount?: ColumnCountProperty | ColumnCountProperty[],
  columnFill?: ColumnFillProperty | ColumnFillProperty[],
  columnGap?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[],
  columnRuleColor?: GlobalsString | GlobalsString[],
  columnRuleStyle?: GlobalsString | GlobalsString[],
  columnRuleWidth?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[],
  columnSpan?: ColumnSpanProperty | ColumnSpanProperty[],
  columnWidth?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[],
  contain?: GlobalsString | GlobalsString[],
  content?: GlobalsString | GlobalsString[],
  counterIncrement?: GlobalsString | GlobalsString[],
  counterReset?: GlobalsString | GlobalsString[],
  cursor?: GlobalsString | GlobalsString[],
  direction?: DirectionProperty | DirectionProperty[],
  display?: GlobalsString | GlobalsString[],
  emptyCells?: EmptyCellsProperty | EmptyCellsProperty[],
  filter?: GlobalsString | GlobalsString[],
  flexBasis?: FlexBasisProperty<TLength> | FlexBasisProperty<TLength>[],
  flexDirection?: FlexDirectionProperty | FlexDirectionProperty[],
  flexGrow?: GlobalsNumber | GlobalsNumber[],
  flexShrink?: GlobalsNumber | GlobalsNumber[],
  flexWrap?: FlexWrapProperty | FlexWrapProperty[],
  float?: FloatProperty | FloatProperty[],
  fontFamily?: GlobalsString | GlobalsString[],
  fontFeatureSettings?: GlobalsString | GlobalsString[],
  fontKerning?: FontKerningProperty | FontKerningProperty[],
  fontLanguageOverride?: GlobalsString | GlobalsString[],
  fontOpticalSizing?: FontOpticalSizingProperty | FontOpticalSizingProperty[],
  fontSize?: FontSizeProperty<TLength> | FontSizeProperty<TLength>[],
  fontSizeAdjust?: FontSizeAdjustProperty | FontSizeAdjustProperty[],
  fontStretch?: GlobalsString | GlobalsString[],
  fontStyle?: GlobalsString | GlobalsString[],
  fontSynthesis?: GlobalsString | GlobalsString[],
  fontVariant?: GlobalsString | GlobalsString[],
  fontVariantCaps?: FontVariantCapsProperty | FontVariantCapsProperty[],
  fontVariantEastAsian?: GlobalsString | GlobalsString[],
  fontVariantLigatures?: GlobalsString | GlobalsString[],
  fontVariantNumeric?: GlobalsString | GlobalsString[],
  fontVariantPosition?: FontVariantPositionProperty | FontVariantPositionProperty[],
  fontVariationSettings?: GlobalsString | GlobalsString[],
  fontWeight?: FontWeightProperty | FontWeightProperty[],
  gridAutoColumns?: GridAutoColumnsProperty<TLength> | GridAutoColumnsProperty<TLength>[],
  gridAutoFlow?: GlobalsString | GlobalsString[],
  gridAutoRows?: GridAutoRowsProperty<TLength> | GridAutoRowsProperty<TLength>[],
  gridColumnEnd?: GridColumnEndProperty | GridColumnEndProperty[],
  gridColumnStart?: GridColumnStartProperty | GridColumnStartProperty[],
  gridRowEnd?: GridRowEndProperty | GridRowEndProperty[],
  gridRowStart?: GridRowStartProperty | GridRowStartProperty[],
  gridTemplateAreas?: GlobalsString | GlobalsString[],
  gridTemplateColumns?: GridTemplateColumnsProperty<TLength> | GridTemplateColumnsProperty<TLength>[],
  gridTemplateRows?: GridTemplateRowsProperty<TLength> | GridTemplateRowsProperty<TLength>[],
  hangingPunctuation?: GlobalsString | GlobalsString[],
  height?: HeightProperty<TLength> | HeightProperty<TLength>[],
  hyphens?: HyphensProperty | HyphensProperty[],
  imageOrientation?: GlobalsString | GlobalsString[],
  imageRendering?: ImageRenderingProperty | ImageRenderingProperty[],
  imageResolution?: GlobalsString | GlobalsString[],
  initialLetter?: InitialLetterProperty | InitialLetterProperty[],
  inlineSize?: InlineSizeProperty<TLength> | InlineSizeProperty<TLength>[],
  insetBlockEnd?: InsetBlockEndProperty<TLength> | InsetBlockEndProperty<TLength>[],
  insetBlockStart?: InsetBlockStartProperty<TLength> | InsetBlockStartProperty<TLength>[],
  insetInlineEnd?: InsetInlineEndProperty<TLength> | InsetInlineEndProperty<TLength>[],
  insetInlineStart?: InsetInlineStartProperty<TLength> | InsetInlineStartProperty<TLength>[],
  isolation?: IsolationProperty | IsolationProperty[],
  justifyContent?: GlobalsString | GlobalsString[],
  justifyItems?: GlobalsString | GlobalsString[],
  justifySelf?: GlobalsString | GlobalsString[],
  left?: LeftProperty<TLength> | LeftProperty<TLength>[],
  letterSpacing?: LetterSpacingProperty<TLength> | LetterSpacingProperty<TLength>[],
  lineBreak?: LineBreakProperty | LineBreakProperty[],
  lineHeight?: LineHeightProperty<TLength> | LineHeightProperty<TLength>[],
  lineHeightStep?: LineHeightStepProperty<TLength> | LineHeightStepProperty<TLength>[],
  listStyleImage?: GlobalsString | GlobalsString[],
  listStylePosition?: ListStylePositionProperty | ListStylePositionProperty[],
  listStyleType?: GlobalsString | GlobalsString[],
  marginBlock?: MarginBlockProperty<TLength> | MarginBlockProperty<TLength>[],
  marginBlockEnd?: MarginBlockEndProperty<TLength> | MarginBlockEndProperty<TLength>[],
  marginBlockStart?: MarginBlockStartProperty<TLength> | MarginBlockStartProperty<TLength>[],
  marginBottom?: MarginBottomProperty<TLength> | MarginBottomProperty<TLength>[],
  marginInline?: MarginInlineProperty<TLength> | MarginInlineProperty<TLength>[],
  marginInlineEnd?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[],
  marginInlineStart?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[],
  marginLeft?: MarginLeftProperty<TLength> | MarginLeftProperty<TLength>[],
  marginRight?: MarginRightProperty<TLength> | MarginRightProperty<TLength>[],
  marginTop?: MarginTopProperty<TLength> | MarginTopProperty<TLength>[],
  maskBorderMode?: MaskBorderModeProperty | MaskBorderModeProperty[],
  maskBorderOutset?: MaskBorderOutsetProperty<TLength> | MaskBorderOutsetProperty<TLength>[],
  maskBorderRepeat?: GlobalsString | GlobalsString[],
  maskBorderSlice?: MaskBorderSliceProperty | MaskBorderSliceProperty[],
  maskBorderSource?: GlobalsString | GlobalsString[],
  maskBorderWidth?: MaskBorderWidthProperty<TLength> | MaskBorderWidthProperty<TLength>[],
  maskClip?: GlobalsString | GlobalsString[],
  maskComposite?: GlobalsString | GlobalsString[],
  maskImage?: GlobalsString | GlobalsString[],
  maskMode?: GlobalsString | GlobalsString[],
  maskOrigin?: GlobalsString | GlobalsString[],
  maskPosition?: MaskPositionProperty<TLength> | MaskPositionProperty<TLength>[],
  maskRepeat?: GlobalsString | GlobalsString[],
  maskSize?: MaskSizeProperty<TLength> | MaskSizeProperty<TLength>[],
  maskType?: MaskTypeProperty | MaskTypeProperty[],
  maxBlockSize?: MaxBlockSizeProperty<TLength> | MaxBlockSizeProperty<TLength>[],
  maxHeight?: MaxHeightProperty<TLength> | MaxHeightProperty<TLength>[],
  maxInlineSize?: MaxInlineSizeProperty<TLength> | MaxInlineSizeProperty<TLength>[],
  maxLines?: MaxLinesProperty | MaxLinesProperty[],
  maxWidth?: MaxWidthProperty<TLength> | MaxWidthProperty<TLength>[],
  minBlockSize?: MinBlockSizeProperty<TLength> | MinBlockSizeProperty<TLength>[],
  minHeight?: MinHeightProperty<TLength> | MinHeightProperty<TLength>[],
  minInlineSize?: MinInlineSizeProperty<TLength> | MinInlineSizeProperty<TLength>[],
  minWidth?: MinWidthProperty<TLength> | MinWidthProperty<TLength>[],
  mixBlendMode?: MixBlendModeProperty | MixBlendModeProperty[],
  motionDistance?: OffsetDistanceProperty<TLength> | OffsetDistanceProperty<TLength>[],
  motionPath?: GlobalsString | GlobalsString[],
  motionRotation?: GlobalsString | GlobalsString[],
  objectFit?: ObjectFitProperty | ObjectFitProperty[],
  objectPosition?: ObjectPositionProperty<TLength> | ObjectPositionProperty<TLength>[],
  offsetAnchor?: OffsetAnchorProperty<TLength> | OffsetAnchorProperty<TLength>[],
  offsetDistance?: OffsetDistanceProperty<TLength> | OffsetDistanceProperty<TLength>[],
  offsetPath?: GlobalsString | GlobalsString[],
  offsetPosition?: OffsetPositionProperty<TLength> | OffsetPositionProperty<TLength>[],
  offsetRotate?: GlobalsString | GlobalsString[],
  offsetRotation?: GlobalsString | GlobalsString[],
  opacity?: GlobalsNumber | GlobalsNumber[],
  order?: GlobalsNumber | GlobalsNumber[],
  orphans?: GlobalsNumber | GlobalsNumber[],
  outlineColor?: GlobalsString | GlobalsString[],
  outlineOffset?: OutlineOffsetProperty<TLength> | OutlineOffsetProperty<TLength>[],
  outlineStyle?: GlobalsString | GlobalsString[],
  outlineWidth?: OutlineWidthProperty<TLength> | OutlineWidthProperty<TLength>[],
  overflow?: GlobalsString | GlobalsString[],
  overflowAnchor?: OverflowAnchorProperty | OverflowAnchorProperty[],
  overflowBlock?: GlobalsString | GlobalsString[],
  overflowClipBox?: OverflowClipBoxProperty | OverflowClipBoxProperty[],
  overflowInline?: GlobalsString | GlobalsString[],
  overflowWrap?: OverflowWrapProperty | OverflowWrapProperty[],
  overflowX?: OverflowXProperty | OverflowXProperty[],
  overflowY?: OverflowYProperty | OverflowYProperty[],
  overscrollBehavior?: GlobalsString | GlobalsString[],
  overscrollBehaviorX?: OverscrollBehaviorXProperty | OverscrollBehaviorXProperty[],
  overscrollBehaviorY?: OverscrollBehaviorYProperty | OverscrollBehaviorYProperty[],
  paddingBlock?: PaddingBlockProperty<TLength> | PaddingBlockProperty<TLength>[],
  paddingBlockEnd?: PaddingBlockEndProperty<TLength> | PaddingBlockEndProperty<TLength>[],
  paddingBlockStart?: PaddingBlockStartProperty<TLength> | PaddingBlockStartProperty<TLength>[],
  paddingBottom?: PaddingBottomProperty<TLength> | PaddingBottomProperty<TLength>[],
  paddingInline?: PaddingInlineProperty<TLength> | PaddingInlineProperty<TLength>[],
  paddingInlineEnd?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[],
  paddingInlineStart?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[],
  paddingLeft?: PaddingLeftProperty<TLength> | PaddingLeftProperty<TLength>[],
  paddingRight?: PaddingRightProperty<TLength> | PaddingRightProperty<TLength>[],
  paddingTop?: PaddingTopProperty<TLength> | PaddingTopProperty<TLength>[],
  pageBreakAfter?: PageBreakAfterProperty | PageBreakAfterProperty[],
  pageBreakBefore?: PageBreakBeforeProperty | PageBreakBeforeProperty[],
  pageBreakInside?: PageBreakInsideProperty | PageBreakInsideProperty[],
  paintOrder?: GlobalsString | GlobalsString[],
  perspective?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[],
  perspectiveOrigin?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[],
  placeContent?: GlobalsString | GlobalsString[],
  pointerEvents?: PointerEventsProperty | PointerEventsProperty[],
  position?: PositionProperty | PositionProperty[],
  quotes?: GlobalsString | GlobalsString[],
  resize?: ResizeProperty | ResizeProperty[],
  right?: RightProperty<TLength> | RightProperty<TLength>[],
  rotate?: GlobalsString | GlobalsString[],
  rowGap?: RowGapProperty<TLength> | RowGapProperty<TLength>[],
  rubyAlign?: RubyAlignProperty | RubyAlignProperty[],
  rubyMerge?: RubyMergeProperty | RubyMergeProperty[],
  rubyPosition?: RubyPositionProperty | RubyPositionProperty[],
  scale?: ScaleProperty | ScaleProperty[],
  scrollBehavior?: ScrollBehaviorProperty | ScrollBehaviorProperty[],
  scrollMargin?: ScrollMarginProperty<TLength> | ScrollMarginProperty<TLength>[],
  scrollMarginBlock?: ScrollMarginBlockProperty<TLength> | ScrollMarginBlockProperty<TLength>[],
  scrollMarginBlockEnd?: ScrollMarginBlockEndProperty<TLength> | ScrollMarginBlockEndProperty<TLength>[],
  scrollMarginBlockStart?: ScrollMarginBlockStartProperty<TLength> | ScrollMarginBlockStartProperty<TLength>[],
  scrollMarginBottom?: ScrollMarginBottomProperty<TLength> | ScrollMarginBottomProperty<TLength>[],
  scrollMarginInlineEnd?: ScrollMarginInlineEndProperty<TLength> | ScrollMarginInlineEndProperty<TLength>[],
  scrollMarginInlineStart?: ScrollMarginInlineStartProperty<TLength> | ScrollMarginInlineStartProperty<TLength>[],
  scrollMarginLeft?: ScrollMarginLeftProperty<TLength> | ScrollMarginLeftProperty<TLength>[],
  scrollMarginRight?: ScrollMarginRightProperty<TLength> | ScrollMarginRightProperty<TLength>[],
  scrollMarginTop?: ScrollMarginTopProperty<TLength> | ScrollMarginTopProperty<TLength>[],
  scrollPadding?: ScrollPaddingProperty<TLength> | ScrollPaddingProperty<TLength>[],
  scrollPaddingBlock?: ScrollPaddingBlockProperty<TLength> | ScrollPaddingBlockProperty<TLength>[],
  scrollPaddingBlockEnd?: ScrollPaddingBlockEndProperty<TLength> | ScrollPaddingBlockEndProperty<TLength>[],
  scrollPaddingBlockStart?: ScrollPaddingBlockStartProperty<TLength> | ScrollPaddingBlockStartProperty<TLength>[],
  scrollPaddingBottom?: ScrollPaddingBottomProperty<TLength> | ScrollPaddingBottomProperty<TLength>[],
  scrollPaddingInline?: ScrollPaddingInlineProperty<TLength> | ScrollPaddingInlineProperty<TLength>[],
  scrollPaddingInlineEnd?: ScrollPaddingInlineEndProperty<TLength> | ScrollPaddingInlineEndProperty<TLength>[],
  scrollPaddingInlineStart?: ScrollPaddingInlineStartProperty<TLength> | ScrollPaddingInlineStartProperty<TLength>[],
  scrollPaddingLeft?: ScrollPaddingLeftProperty<TLength> | ScrollPaddingLeftProperty<TLength>[],
  scrollPaddingRight?: ScrollPaddingRightProperty<TLength> | ScrollPaddingRightProperty<TLength>[],
  scrollPaddingTop?: ScrollPaddingTopProperty<TLength> | ScrollPaddingTopProperty<TLength>[],
  scrollSnapAlign?: GlobalsString | GlobalsString[],
  scrollSnapType?: GlobalsString | GlobalsString[],
  scrollbarColor?: GlobalsString | GlobalsString[],
  scrollbarWidth?: ScrollbarWidthProperty | ScrollbarWidthProperty[],
  shapeImageThreshold?: GlobalsNumber | GlobalsNumber[],
  shapeMargin?: ShapeMarginProperty<TLength> | ShapeMarginProperty<TLength>[],
  shapeOutside?: GlobalsString | GlobalsString[],
  tabSize?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[],
  tableLayout?: TableLayoutProperty | TableLayoutProperty[],
  textAlign?: TextAlignProperty | TextAlignProperty[],
  textAlignLast?: TextAlignLastProperty | TextAlignLastProperty[],
  textCombineUpright?: GlobalsString | GlobalsString[],
  textDecorationColor?: GlobalsString | GlobalsString[],
  textDecorationLine?: GlobalsString | GlobalsString[],
  textDecorationSkip?: GlobalsString | GlobalsString[],
  textDecorationSkipInk?: TextDecorationSkipInkProperty | TextDecorationSkipInkProperty[],
  textDecorationStyle?: TextDecorationStyleProperty | TextDecorationStyleProperty[],
  textEmphasisColor?: GlobalsString | GlobalsString[],
  textEmphasisPosition?: GlobalsString | GlobalsString[],
  textEmphasisStyle?: GlobalsString | GlobalsString[],
  textIndent?: TextIndentProperty<TLength> | TextIndentProperty<TLength>[],
  textJustify?: TextJustifyProperty | TextJustifyProperty[],
  textOrientation?: TextOrientationProperty | TextOrientationProperty[],
  textOverflow?: GlobalsString | GlobalsString[],
  textRendering?: TextRenderingProperty | TextRenderingProperty[],
  textShadow?: GlobalsString | GlobalsString[],
  textSizeAdjust?: GlobalsString | GlobalsString[],
  textTransform?: TextTransformProperty | TextTransformProperty[],
  textUnderlinePosition?: GlobalsString | GlobalsString[],
  top?: TopProperty<TLength> | TopProperty<TLength>[],
  touchAction?: GlobalsString | GlobalsString[],
  transform?: GlobalsString | GlobalsString[],
  transformBox?: TransformBoxProperty | TransformBoxProperty[],
  transformOrigin?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  transformStyle?: TransformStyleProperty | TransformStyleProperty[],
  transitionDelay?: GlobalsString | GlobalsString[],
  transitionDuration?: GlobalsString | GlobalsString[],
  transitionProperty?: GlobalsString | GlobalsString[],
  transitionTimingFunction?: GlobalsString | GlobalsString[],
  translate?: TranslateProperty<TLength> | TranslateProperty<TLength>[],
  unicodeBidi?: UnicodeBidiProperty | UnicodeBidiProperty[],
  userSelect?: UserSelectProperty | UserSelectProperty[],
  verticalAlign?: VerticalAlignProperty<TLength> | VerticalAlignProperty<TLength>[],
  visibility?: VisibilityProperty | VisibilityProperty[],
  whiteSpace?: WhiteSpaceProperty | WhiteSpaceProperty[],
  widows?: GlobalsNumber | GlobalsNumber[],
  width?: WidthProperty<TLength> | WidthProperty<TLength>[],
  willChange?: GlobalsString | GlobalsString[],
  wordBreak?: WordBreakProperty | WordBreakProperty[],
  wordSpacing?: WordSpacingProperty<TLength> | WordSpacingProperty<TLength>[],
  wordWrap?: WordWrapProperty | WordWrapProperty[],
  writingMode?: WritingModeProperty | WritingModeProperty[],
  zIndex?: ZIndexProperty | ZIndexProperty[],
  zoom?: ZoomProperty | ZoomProperty[],
};

export type StandardShorthandPropertiesFallback<TLength = string | 0> = {
  all?: Globals | Globals[],
  animation?: AnimationProperty | AnimationProperty[],
  background?: BackgroundProperty<TLength> | BackgroundProperty<TLength>[],
  border?: BorderProperty<TLength> | BorderProperty<TLength>[],
  borderBlock?: BorderBlockProperty<TLength> | BorderBlockProperty<TLength>[],
  borderBlockEnd?: BorderBlockEndProperty<TLength> | BorderBlockEndProperty<TLength>[],
  borderBlockStart?: BorderBlockStartProperty<TLength> | BorderBlockStartProperty<TLength>[],
  borderBottom?: BorderBottomProperty<TLength> | BorderBottomProperty<TLength>[],
  borderColor?: GlobalsString | GlobalsString[],
  borderImage?: BorderImageProperty | BorderImageProperty[],
  borderInline?: BorderInlineProperty<TLength> | BorderInlineProperty<TLength>[],
  borderInlineEnd?: BorderInlineEndProperty<TLength> | BorderInlineEndProperty<TLength>[],
  borderInlineStart?: BorderInlineStartProperty<TLength> | BorderInlineStartProperty<TLength>[],
  borderLeft?: BorderLeftProperty<TLength> | BorderLeftProperty<TLength>[],
  borderRadius?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[],
  borderRight?: BorderRightProperty<TLength> | BorderRightProperty<TLength>[],
  borderStyle?: GlobalsString | GlobalsString[],
  borderTop?: BorderTopProperty<TLength> | BorderTopProperty<TLength>[],
  borderWidth?: BorderWidthProperty<TLength> | BorderWidthProperty<TLength>[],
  columnRule?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[],
  columns?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[],
  flex?: FlexProperty<TLength> | FlexProperty<TLength>[],
  flexFlow?: GlobalsString | GlobalsString[],
  font?: GlobalsString | GlobalsString[],
  gap?: GapProperty<TLength> | GapProperty<TLength>[],
  grid?: GlobalsString | GlobalsString[],
  gridArea?: GridAreaProperty | GridAreaProperty[],
  gridColumn?: GridColumnProperty | GridColumnProperty[],
  gridRow?: GridRowProperty | GridRowProperty[],
  gridTemplate?: GlobalsString | GlobalsString[],
  lineClamp?: LineClampProperty | LineClampProperty[],
  listStyle?: GlobalsString | GlobalsString[],
  margin?: MarginProperty<TLength> | MarginProperty<TLength>[],
  mask?: MaskProperty<TLength> | MaskProperty<TLength>[],
  maskBorder?: MaskBorderProperty | MaskBorderProperty[],
  motion?: OffsetProperty<TLength> | OffsetProperty<TLength>[],
  offset?: OffsetProperty<TLength> | OffsetProperty<TLength>[],
  outline?: OutlineProperty<TLength> | OutlineProperty<TLength>[],
  padding?: PaddingProperty<TLength> | PaddingProperty<TLength>[],
  placeItems?: GlobalsString | GlobalsString[],
  placeSelf?: GlobalsString | GlobalsString[],
  textDecoration?: GlobalsString | GlobalsString[],
  textEmphasis?: GlobalsString | GlobalsString[],
  transition?: GlobalsString | GlobalsString[],
};

export type StandardPropertiesFallback<TLength = string | 0> = StandardLonghandPropertiesFallback<TLength> & StandardShorthandPropertiesFallback<TLength>;

export type VendorLonghandPropertiesFallback<TLength = string | 0> = {
  MozAnimationDelay?: GlobalsString | GlobalsString[],
  MozAnimationDirection?: GlobalsString | GlobalsString[],
  MozAnimationDuration?: GlobalsString | GlobalsString[],
  MozAnimationFillMode?: GlobalsString | GlobalsString[],
  MozAnimationIterationCount?: AnimationIterationCountProperty | AnimationIterationCountProperty[],
  MozAnimationName?: GlobalsString | GlobalsString[],
  MozAnimationPlayState?: GlobalsString | GlobalsString[],
  MozAnimationTimingFunction?: GlobalsString | GlobalsString[],
  MozAppearance?: MozAppearanceProperty | MozAppearanceProperty[],
  MozBackfaceVisibility?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[],
  MozBorderBottomColors?: GlobalsString | GlobalsString[],
  MozBorderEndColor?: GlobalsString | GlobalsString[],
  MozBorderEndStyle?: BorderInlineEndStyleProperty | BorderInlineEndStyleProperty[],
  MozBorderEndWidth?: BorderInlineEndWidthProperty<TLength> | BorderInlineEndWidthProperty<TLength>[],
  MozBorderLeftColors?: GlobalsString | GlobalsString[],
  MozBorderRightColors?: GlobalsString | GlobalsString[],
  MozBorderStartColor?: GlobalsString | GlobalsString[],
  MozBorderStartStyle?: BorderInlineStartStyleProperty | BorderInlineStartStyleProperty[],
  MozBorderTopColors?: GlobalsString | GlobalsString[],
  MozBoxSizing?: BoxSizingProperty | BoxSizingProperty[],
  MozColumnCount?: ColumnCountProperty | ColumnCountProperty[],
  MozColumnFill?: ColumnFillProperty | ColumnFillProperty[],
  MozColumnGap?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[],
  MozColumnRuleColor?: GlobalsString | GlobalsString[],
  MozColumnRuleStyle?: GlobalsString | GlobalsString[],
  MozColumnRuleWidth?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[],
  MozColumnWidth?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[],
  MozContextProperties?: GlobalsString | GlobalsString[],
  MozFloatEdge?: MozFloatEdgeProperty | MozFloatEdgeProperty[],
  MozFontFeatureSettings?: GlobalsString | GlobalsString[],
  MozFontLanguageOverride?: GlobalsString | GlobalsString[],
  MozForceBrokenImageIcon?: GlobalsNumber | GlobalsNumber[],
  MozHyphens?: HyphensProperty | HyphensProperty[],
  MozImageRegion?: GlobalsString | GlobalsString[],
  MozMarginEnd?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[],
  MozMarginStart?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[],
  MozOrient?: MozOrientProperty | MozOrientProperty[],
  MozOutlineRadiusBottomleft?: MozOutlineRadiusBottomleftProperty<TLength> | MozOutlineRadiusBottomleftProperty<TLength>[],
  MozOutlineRadiusBottomright?: MozOutlineRadiusBottomrightProperty<TLength> | MozOutlineRadiusBottomrightProperty<TLength>[],
  MozOutlineRadiusTopleft?: MozOutlineRadiusTopleftProperty<TLength> | MozOutlineRadiusTopleftProperty<TLength>[],
  MozOutlineRadiusTopright?: MozOutlineRadiusToprightProperty<TLength> | MozOutlineRadiusToprightProperty<TLength>[],
  MozPaddingEnd?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[],
  MozPaddingStart?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[],
  MozPerspective?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[],
  MozPerspectiveOrigin?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[],
  MozStackSizing?: MozStackSizingProperty | MozStackSizingProperty[],
  MozTabSize?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[],
  MozTextSizeAdjust?: GlobalsString | GlobalsString[],
  MozTransformOrigin?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  MozTransformStyle?: TransformStyleProperty | TransformStyleProperty[],
  MozTransitionDelay?: GlobalsString | GlobalsString[],
  MozTransitionDuration?: GlobalsString | GlobalsString[],
  MozTransitionProperty?: GlobalsString | GlobalsString[],
  MozTransitionTimingFunction?: GlobalsString | GlobalsString[],
  MozUserFocus?: MozUserFocusProperty | MozUserFocusProperty[],
  MozUserModify?: MozUserModifyProperty | MozUserModifyProperty[],
  MozUserSelect?: UserSelectProperty | UserSelectProperty[],
  MozWindowDragging?: MozWindowDraggingProperty | MozWindowDraggingProperty[],
  MozWindowShadow?: MozWindowShadowProperty | MozWindowShadowProperty[],
  msAccelerator?: MsAcceleratorProperty | MsAcceleratorProperty[],
  msAlignSelf?: GlobalsString | GlobalsString[],
  msBlockProgression?: MsBlockProgressionProperty | MsBlockProgressionProperty[],
  msContentZoomChaining?: MsContentZoomChainingProperty | MsContentZoomChainingProperty[],
  msContentZoomLimitMax?: GlobalsString | GlobalsString[],
  msContentZoomLimitMin?: GlobalsString | GlobalsString[],
  msContentZoomSnapPoints?: GlobalsString | GlobalsString[],
  msContentZoomSnapType?: MsContentZoomSnapTypeProperty | MsContentZoomSnapTypeProperty[],
  msContentZooming?: MsContentZoomingProperty | MsContentZoomingProperty[],
  msFilter?: GlobalsString | GlobalsString[],
  msFlexDirection?: FlexDirectionProperty | FlexDirectionProperty[],
  msFlexPositive?: GlobalsNumber | GlobalsNumber[],
  msFlowFrom?: GlobalsString | GlobalsString[],
  msFlowInto?: GlobalsString | GlobalsString[],
  msGridColumns?: GridAutoColumnsProperty<TLength> | GridAutoColumnsProperty<TLength>[],
  msGridRows?: GridAutoRowsProperty<TLength> | GridAutoRowsProperty<TLength>[],
  msHighContrastAdjust?: MsHighContrastAdjustProperty | MsHighContrastAdjustProperty[],
  msHyphenateLimitChars?: MsHyphenateLimitCharsProperty | MsHyphenateLimitCharsProperty[],
  msHyphenateLimitLines?: MsHyphenateLimitLinesProperty | MsHyphenateLimitLinesProperty[],
  msHyphenateLimitZone?: MsHyphenateLimitZoneProperty<TLength> | MsHyphenateLimitZoneProperty<TLength>[],
  msHyphens?: HyphensProperty | HyphensProperty[],
  msImeAlign?: MsImeAlignProperty | MsImeAlignProperty[],
  msLineBreak?: LineBreakProperty | LineBreakProperty[],
  msOrder?: GlobalsNumber | GlobalsNumber[],
  msOverflowStyle?: MsOverflowStyleProperty | MsOverflowStyleProperty[],
  msOverflowX?: OverflowXProperty | OverflowXProperty[],
  msOverflowY?: OverflowYProperty | OverflowYProperty[],
  msScrollChaining?: MsScrollChainingProperty | MsScrollChainingProperty[],
  msScrollLimitXMax?: MsScrollLimitXMaxProperty<TLength> | MsScrollLimitXMaxProperty<TLength>[],
  msScrollLimitXMin?: MsScrollLimitXMinProperty<TLength> | MsScrollLimitXMinProperty<TLength>[],
  msScrollLimitYMax?: MsScrollLimitYMaxProperty<TLength> | MsScrollLimitYMaxProperty<TLength>[],
  msScrollLimitYMin?: MsScrollLimitYMinProperty<TLength> | MsScrollLimitYMinProperty<TLength>[],
  msScrollRails?: MsScrollRailsProperty | MsScrollRailsProperty[],
  msScrollSnapPointsX?: GlobalsString | GlobalsString[],
  msScrollSnapPointsY?: GlobalsString | GlobalsString[],
  msScrollSnapType?: MsScrollSnapTypeProperty | MsScrollSnapTypeProperty[],
  msScrollTranslation?: MsScrollTranslationProperty | MsScrollTranslationProperty[],
  msTextAutospace?: MsTextAutospaceProperty | MsTextAutospaceProperty[],
  msTextCombineHorizontal?: GlobalsString | GlobalsString[],
  msTextOverflow?: GlobalsString | GlobalsString[],
  msTextSizeAdjust?: GlobalsString | GlobalsString[],
  msTouchAction?: GlobalsString | GlobalsString[],
  msTouchSelect?: MsTouchSelectProperty | MsTouchSelectProperty[],
  msTransform?: GlobalsString | GlobalsString[],
  msTransformOrigin?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  msUserSelect?: MsUserSelectProperty | MsUserSelectProperty[],
  msWordBreak?: WordBreakProperty | WordBreakProperty[],
  msWrapFlow?: MsWrapFlowProperty | MsWrapFlowProperty[],
  msWrapMargin?: MsWrapMarginProperty<TLength> | MsWrapMarginProperty<TLength>[],
  msWrapThrough?: MsWrapThroughProperty | MsWrapThroughProperty[],
  msWritingMode?: WritingModeProperty | WritingModeProperty[],
  OObjectFit?: ObjectFitProperty | ObjectFitProperty[],
  OObjectPosition?: ObjectPositionProperty<TLength> | ObjectPositionProperty<TLength>[],
  OTabSize?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[],
  OTextOverflow?: GlobalsString | GlobalsString[],
  OTransformOrigin?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  WebkitAlignContent?: GlobalsString | GlobalsString[],
  WebkitAlignItems?: GlobalsString | GlobalsString[],
  WebkitAlignSelf?: GlobalsString | GlobalsString[],
  WebkitAnimationDelay?: GlobalsString | GlobalsString[],
  WebkitAnimationDirection?: GlobalsString | GlobalsString[],
  WebkitAnimationDuration?: GlobalsString | GlobalsString[],
  WebkitAnimationFillMode?: GlobalsString | GlobalsString[],
  WebkitAnimationIterationCount?: AnimationIterationCountProperty | AnimationIterationCountProperty[],
  WebkitAnimationName?: GlobalsString | GlobalsString[],
  WebkitAnimationPlayState?: GlobalsString | GlobalsString[],
  WebkitAnimationTimingFunction?: GlobalsString | GlobalsString[],
  WebkitAppearance?: WebkitAppearanceProperty | WebkitAppearanceProperty[],
  WebkitBackdropFilter?: GlobalsString | GlobalsString[],
  WebkitBackfaceVisibility?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[],
  WebkitBackgroundClip?: GlobalsString | GlobalsString[],
  WebkitBackgroundOrigin?: GlobalsString | GlobalsString[],
  WebkitBackgroundSize?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[],
  WebkitBorderBeforeColor?: GlobalsString | GlobalsString[],
  WebkitBorderBeforeStyle?: GlobalsString | GlobalsString[],
  WebkitBorderBeforeWidth?: WebkitBorderBeforeWidthProperty<TLength> | WebkitBorderBeforeWidthProperty<TLength>[],
  WebkitBorderBottomLeftRadius?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[],
  WebkitBorderBottomRightRadius?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[],
  WebkitBorderImageSlice?: BorderImageSliceProperty | BorderImageSliceProperty[],
  WebkitBorderTopLeftRadius?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[],
  WebkitBorderTopRightRadius?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[],
  WebkitBoxDecorationBreak?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[],
  WebkitBoxReflect?: WebkitBoxReflectProperty<TLength> | WebkitBoxReflectProperty<TLength>[],
  WebkitBoxShadow?: GlobalsString | GlobalsString[],
  WebkitBoxSizing?: BoxSizingProperty | BoxSizingProperty[],
  WebkitClipPath?: GlobalsString | GlobalsString[],
  WebkitColorAdjust?: ColorAdjustProperty | ColorAdjustProperty[],
  WebkitColumnCount?: ColumnCountProperty | ColumnCountProperty[],
  WebkitColumnGap?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[],
  WebkitColumnRuleColor?: GlobalsString | GlobalsString[],
  WebkitColumnRuleStyle?: GlobalsString | GlobalsString[],
  WebkitColumnRuleWidth?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[],
  WebkitColumnSpan?: ColumnSpanProperty | ColumnSpanProperty[],
  WebkitColumnWidth?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[],
  WebkitFilter?: GlobalsString | GlobalsString[],
  WebkitFlexBasis?: FlexBasisProperty<TLength> | FlexBasisProperty<TLength>[],
  WebkitFlexDirection?: FlexDirectionProperty | FlexDirectionProperty[],
  WebkitFlexGrow?: GlobalsNumber | GlobalsNumber[],
  WebkitFlexShrink?: GlobalsNumber | GlobalsNumber[],
  WebkitFlexWrap?: FlexWrapProperty | FlexWrapProperty[],
  WebkitFontFeatureSettings?: GlobalsString | GlobalsString[],
  WebkitFontKerning?: FontKerningProperty | FontKerningProperty[],
  WebkitFontVariantLigatures?: GlobalsString | GlobalsString[],
  WebkitHyphens?: HyphensProperty | HyphensProperty[],
  WebkitJustifyContent?: GlobalsString | GlobalsString[],
  WebkitLineBreak?: LineBreakProperty | LineBreakProperty[],
  WebkitMarginEnd?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[],
  WebkitMarginStart?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[],
  WebkitMaskAttachment?: GlobalsString | GlobalsString[],
  WebkitMaskClip?: GlobalsString | GlobalsString[],
  WebkitMaskComposite?: GlobalsString | GlobalsString[],
  WebkitMaskImage?: GlobalsString | GlobalsString[],
  WebkitMaskOrigin?: GlobalsString | GlobalsString[],
  WebkitMaskPosition?: WebkitMaskPositionProperty<TLength> | WebkitMaskPositionProperty<TLength>[],
  WebkitMaskPositionX?: WebkitMaskPositionXProperty<TLength> | WebkitMaskPositionXProperty<TLength>[],
  WebkitMaskPositionY?: WebkitMaskPositionYProperty<TLength> | WebkitMaskPositionYProperty<TLength>[],
  WebkitMaskRepeat?: GlobalsString | GlobalsString[],
  WebkitMaskRepeatX?: WebkitMaskRepeatXProperty | WebkitMaskRepeatXProperty[],
  WebkitMaskRepeatY?: WebkitMaskRepeatYProperty | WebkitMaskRepeatYProperty[],
  WebkitMaskSize?: WebkitMaskSizeProperty<TLength> | WebkitMaskSizeProperty<TLength>[],
  WebkitMaxInlineSize?: MaxInlineSizeProperty<TLength> | MaxInlineSizeProperty<TLength>[],
  WebkitOrder?: GlobalsNumber | GlobalsNumber[],
  WebkitOverflowScrolling?: WebkitOverflowScrollingProperty | WebkitOverflowScrollingProperty[],
  WebkitPaddingEnd?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[],
  WebkitPaddingStart?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[],
  WebkitPerspective?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[],
  WebkitPerspectiveOrigin?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[],
  WebkitScrollSnapType?: GlobalsString | GlobalsString[],
  WebkitShapeMargin?: ShapeMarginProperty<TLength> | ShapeMarginProperty<TLength>[],
  WebkitTapHighlightColor?: GlobalsString | GlobalsString[],
  WebkitTextCombine?: GlobalsString | GlobalsString[],
  WebkitTextDecorationColor?: GlobalsString | GlobalsString[],
  WebkitTextDecorationLine?: GlobalsString | GlobalsString[],
  WebkitTextDecorationSkip?: GlobalsString | GlobalsString[],
  WebkitTextDecorationStyle?: TextDecorationStyleProperty | TextDecorationStyleProperty[],
  WebkitTextEmphasisColor?: GlobalsString | GlobalsString[],
  WebkitTextEmphasisPosition?: GlobalsString | GlobalsString[],
  WebkitTextEmphasisStyle?: GlobalsString | GlobalsString[],
  WebkitTextFillColor?: GlobalsString | GlobalsString[],
  WebkitTextOrientation?: TextOrientationProperty | TextOrientationProperty[],
  WebkitTextSizeAdjust?: GlobalsString | GlobalsString[],
  WebkitTextStrokeColor?: GlobalsString | GlobalsString[],
  WebkitTextStrokeWidth?: WebkitTextStrokeWidthProperty<TLength> | WebkitTextStrokeWidthProperty<TLength>[],
  WebkitTouchCallout?: WebkitTouchCalloutProperty | WebkitTouchCalloutProperty[],
  WebkitTransform?: GlobalsString | GlobalsString[],
  WebkitTransformOrigin?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  WebkitTransformStyle?: TransformStyleProperty | TransformStyleProperty[],
  WebkitTransitionDelay?: GlobalsString | GlobalsString[],
  WebkitTransitionDuration?: GlobalsString | GlobalsString[],
  WebkitTransitionProperty?: GlobalsString | GlobalsString[],
  WebkitTransitionTimingFunction?: GlobalsString | GlobalsString[],
  WebkitUserModify?: WebkitUserModifyProperty | WebkitUserModifyProperty[],
  WebkitUserSelect?: UserSelectProperty | UserSelectProperty[],
  WebkitWritingMode?: WritingModeProperty | WritingModeProperty[],
};

export type VendorShorthandPropertiesFallback<TLength = string | 0> = {
  MozAnimation?: AnimationProperty | AnimationProperty[],
  MozBorderImage?: BorderImageProperty | BorderImageProperty[],
  MozColumnRule?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[],
  MozColumns?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[],
  MozTransition?: GlobalsString | GlobalsString[],
  msContentZoomLimit?: GlobalsString | GlobalsString[],
  msContentZoomSnap?: GlobalsString | GlobalsString[],
  msFlex?: FlexProperty<TLength> | FlexProperty<TLength>[],
  msScrollLimit?: GlobalsString | GlobalsString[],
  msScrollSnapX?: GlobalsString | GlobalsString[],
  msScrollSnapY?: GlobalsString | GlobalsString[],
  OBorderImage?: BorderImageProperty | BorderImageProperty[],
  WebkitAnimation?: AnimationProperty | AnimationProperty[],
  WebkitBorderBefore?: WebkitBorderBeforeProperty<TLength> | WebkitBorderBeforeProperty<TLength>[],
  WebkitBorderImage?: BorderImageProperty | BorderImageProperty[],
  WebkitBorderRadius?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[],
  WebkitColumnRule?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[],
  WebkitColumns?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[],
  WebkitFlex?: FlexProperty<TLength> | FlexProperty<TLength>[],
  WebkitFlexFlow?: GlobalsString | GlobalsString[],
  WebkitLineClamp?: WebkitLineClampProperty | WebkitLineClampProperty[],
  WebkitMask?: WebkitMaskProperty<TLength> | WebkitMaskProperty<TLength>[],
  WebkitTextEmphasis?: GlobalsString | GlobalsString[],
  WebkitTextStroke?: WebkitTextStrokeProperty<TLength> | WebkitTextStrokeProperty<TLength>[],
  WebkitTransition?: GlobalsString | GlobalsString[],
};

export type VendorPropertiesFallback<TLength = string | 0> = VendorLonghandPropertiesFallback<TLength> & VendorShorthandPropertiesFallback<TLength>;

export type ObsoletePropertiesFallback<TLength = string | 0> = {
  boxAlign?: BoxAlignProperty | BoxAlignProperty[],
  boxDirection?: BoxDirectionProperty | BoxDirectionProperty[],
  boxFlex?: GlobalsNumber | GlobalsNumber[],
  boxFlexGroup?: GlobalsNumber | GlobalsNumber[],
  boxLines?: BoxLinesProperty | BoxLinesProperty[],
  boxOrdinalGroup?: GlobalsNumber | GlobalsNumber[],
  boxOrient?: BoxOrientProperty | BoxOrientProperty[],
  boxPack?: BoxPackProperty | BoxPackProperty[],
  clip?: GlobalsString | GlobalsString[],
  fontVariantAlternates?: GlobalsString | GlobalsString[],
  gridColumnGap?: GridColumnGapProperty<TLength> | GridColumnGapProperty<TLength>[],
  gridGap?: GridGapProperty<TLength> | GridGapProperty<TLength>[],
  gridRowGap?: GridRowGapProperty<TLength> | GridRowGapProperty<TLength>[],
  imeMode?: ImeModeProperty | ImeModeProperty[],
  offsetBlockEnd?: InsetBlockEndProperty<TLength> | InsetBlockEndProperty<TLength>[],
  offsetBlockStart?: InsetBlockStartProperty<TLength> | InsetBlockStartProperty<TLength>[],
  offsetInlineEnd?: InsetInlineEndProperty<TLength> | InsetInlineEndProperty<TLength>[],
  offsetInlineStart?: InsetInlineStartProperty<TLength> | InsetInlineStartProperty<TLength>[],
  scrollSnapCoordinate?: ScrollSnapCoordinateProperty<TLength> | ScrollSnapCoordinateProperty<TLength>[],
  scrollSnapDestination?: ScrollSnapDestinationProperty<TLength> | ScrollSnapDestinationProperty<TLength>[],
  scrollSnapPointsX?: GlobalsString | GlobalsString[],
  scrollSnapPointsY?: GlobalsString | GlobalsString[],
  scrollSnapTypeX?: ScrollSnapTypeXProperty | ScrollSnapTypeXProperty[],
  scrollSnapTypeY?: ScrollSnapTypeYProperty | ScrollSnapTypeYProperty[],
  textCombineHorizontal?: GlobalsString | GlobalsString[],
  KhtmlBoxAlign?: BoxAlignProperty | BoxAlignProperty[],
  KhtmlBoxDirection?: BoxDirectionProperty | BoxDirectionProperty[],
  KhtmlBoxFlex?: GlobalsNumber | GlobalsNumber[],
  KhtmlBoxFlexGroup?: GlobalsNumber | GlobalsNumber[],
  KhtmlBoxLines?: BoxLinesProperty | BoxLinesProperty[],
  KhtmlBoxOrdinalGroup?: GlobalsNumber | GlobalsNumber[],
  KhtmlBoxOrient?: BoxOrientProperty | BoxOrientProperty[],
  KhtmlBoxPack?: BoxPackProperty | BoxPackProperty[],
  MozBackgroundClip?: GlobalsString | GlobalsString[],
  MozBackgroundInlinePolicy?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[],
  MozBackgroundOrigin?: GlobalsString | GlobalsString[],
  MozBackgroundSize?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[],
  MozBinding?: GlobalsString | GlobalsString[],
  MozBorderRadius?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[],
  MozBorderRadiusBottomleft?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[],
  MozBorderRadiusBottomright?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[],
  MozBorderRadiusTopleft?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[],
  MozBorderRadiusTopright?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[],
  MozBoxAlign?: BoxAlignProperty | BoxAlignProperty[],
  MozBoxDirection?: BoxDirectionProperty | BoxDirectionProperty[],
  MozBoxFlex?: GlobalsNumber | GlobalsNumber[],
  MozBoxOrdinalGroup?: GlobalsNumber | GlobalsNumber[],
  MozBoxOrient?: BoxOrientProperty | BoxOrientProperty[],
  MozBoxPack?: BoxPackProperty | BoxPackProperty[],
  MozBoxShadow?: GlobalsString | GlobalsString[],
  MozOpacity?: GlobalsNumber | GlobalsNumber[],
  MozOutline?: OutlineProperty<TLength> | OutlineProperty<TLength>[],
  MozOutlineColor?: GlobalsString | GlobalsString[],
  MozOutlineRadius?: MozOutlineRadiusProperty<TLength> | MozOutlineRadiusProperty<TLength>[],
  MozOutlineStyle?: GlobalsString | GlobalsString[],
  MozOutlineWidth?: OutlineWidthProperty<TLength> | OutlineWidthProperty<TLength>[],
  MozResize?: ResizeProperty | ResizeProperty[],
  MozTextAlignLast?: TextAlignLastProperty | TextAlignLastProperty[],
  MozTextBlink?: MozTextBlinkProperty | MozTextBlinkProperty[],
  MozTextDecorationColor?: GlobalsString | GlobalsString[],
  MozTextDecorationLine?: GlobalsString | GlobalsString[],
  MozTextDecorationStyle?: TextDecorationStyleProperty | TextDecorationStyleProperty[],
  MozUserInput?: MozUserInputProperty | MozUserInputProperty[],
  msImeMode?: ImeModeProperty | ImeModeProperty[],
  msScrollbar3dlightColor?: GlobalsString | GlobalsString[],
  msScrollbarArrowColor?: GlobalsString | GlobalsString[],
  msScrollbarBaseColor?: GlobalsString | GlobalsString[],
  msScrollbarDarkshadowColor?: GlobalsString | GlobalsString[],
  msScrollbarFaceColor?: GlobalsString | GlobalsString[],
  msScrollbarHighlightColor?: GlobalsString | GlobalsString[],
  msScrollbarShadowColor?: GlobalsString | GlobalsString[],
  msScrollbarTrackColor?: GlobalsString | GlobalsString[],
  OAnimation?: AnimationProperty | AnimationProperty[],
  OAnimationDelay?: GlobalsString | GlobalsString[],
  OAnimationDirection?: GlobalsString | GlobalsString[],
  OAnimationDuration?: GlobalsString | GlobalsString[],
  OAnimationFillMode?: GlobalsString | GlobalsString[],
  OAnimationIterationCount?: AnimationIterationCountProperty | AnimationIterationCountProperty[],
  OAnimationName?: GlobalsString | GlobalsString[],
  OAnimationPlayState?: GlobalsString | GlobalsString[],
  OAnimationTimingFunction?: GlobalsString | GlobalsString[],
  OBackgroundSize?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[],
  OTransform?: GlobalsString | GlobalsString[],
  OTransition?: GlobalsString | GlobalsString[],
  OTransitionDelay?: GlobalsString | GlobalsString[],
  OTransitionDuration?: GlobalsString | GlobalsString[],
  OTransitionProperty?: GlobalsString | GlobalsString[],
  OTransitionTimingFunction?: GlobalsString | GlobalsString[],
  WebkitBoxAlign?: BoxAlignProperty | BoxAlignProperty[],
  WebkitBoxDirection?: BoxDirectionProperty | BoxDirectionProperty[],
  WebkitBoxFlex?: GlobalsNumber | GlobalsNumber[],
  WebkitBoxFlexGroup?: GlobalsNumber | GlobalsNumber[],
  WebkitBoxLines?: BoxLinesProperty | BoxLinesProperty[],
  WebkitBoxOrdinalGroup?: GlobalsNumber | GlobalsNumber[],
  WebkitBoxOrient?: BoxOrientProperty | BoxOrientProperty[],
  WebkitBoxPack?: BoxPackProperty | BoxPackProperty[],
  WebkitScrollSnapPointsX?: GlobalsString | GlobalsString[],
  WebkitScrollSnapPointsY?: GlobalsString | GlobalsString[],
};

export type SvgPropertiesFallback<TLength = string | 0> = {
  alignmentBaseline?: AlignmentBaselineProperty | AlignmentBaselineProperty[],
  baselineShift?: BaselineShiftProperty<TLength> | BaselineShiftProperty<TLength>[],
  clip?: GlobalsString | GlobalsString[],
  clipPath?: GlobalsString | GlobalsString[],
  clipRule?: ClipRuleProperty | ClipRuleProperty[],
  color?: GlobalsString | GlobalsString[],
  colorInterpolation?: ColorInterpolationProperty | ColorInterpolationProperty[],
  colorRendering?: ColorRenderingProperty | ColorRenderingProperty[],
  cursor?: GlobalsString | GlobalsString[],
  direction?: DirectionProperty | DirectionProperty[],
  display?: GlobalsString | GlobalsString[],
  dominantBaseline?: DominantBaselineProperty | DominantBaselineProperty[],
  fill?: GlobalsString | GlobalsString[],
  fillOpacity?: GlobalsNumber | GlobalsNumber[],
  fillRule?: FillRuleProperty | FillRuleProperty[],
  filter?: GlobalsString | GlobalsString[],
  floodColor?: GlobalsString | GlobalsString[],
  floodOpacity?: GlobalsNumber | GlobalsNumber[],
  font?: GlobalsString | GlobalsString[],
  fontFamily?: GlobalsString | GlobalsString[],
  fontSize?: FontSizeProperty<TLength> | FontSizeProperty<TLength>[],
  fontSizeAdjust?: FontSizeAdjustProperty | FontSizeAdjustProperty[],
  fontStretch?: GlobalsString | GlobalsString[],
  fontStyle?: GlobalsString | GlobalsString[],
  fontVariant?: GlobalsString | GlobalsString[],
  fontWeight?: FontWeightProperty | FontWeightProperty[],
  glyphOrientationVertical?: GlyphOrientationVerticalProperty | GlyphOrientationVerticalProperty[],
  imageRendering?: ImageRenderingProperty | ImageRenderingProperty[],
  letterSpacing?: LetterSpacingProperty<TLength> | LetterSpacingProperty<TLength>[],
  lightingColor?: GlobalsString | GlobalsString[],
  lineHeight?: LineHeightProperty<TLength> | LineHeightProperty<TLength>[],
  marker?: GlobalsString | GlobalsString[],
  markerEnd?: GlobalsString | GlobalsString[],
  markerMid?: GlobalsString | GlobalsString[],
  markerStart?: GlobalsString | GlobalsString[],
  mask?: MaskProperty<TLength> | MaskProperty<TLength>[],
  opacity?: GlobalsNumber | GlobalsNumber[],
  overflow?: GlobalsString | GlobalsString[],
  paintOrder?: GlobalsString | GlobalsString[],
  pointerEvents?: PointerEventsProperty | PointerEventsProperty[],
  shapeRendering?: ShapeRenderingProperty | ShapeRenderingProperty[],
  stopColor?: GlobalsString | GlobalsString[],
  stopOpacity?: GlobalsNumber | GlobalsNumber[],
  stroke?: GlobalsString | GlobalsString[],
  strokeDasharray?: StrokeDasharrayProperty<TLength> | StrokeDasharrayProperty<TLength>[],
  strokeDashoffset?: StrokeDashoffsetProperty<TLength> | StrokeDashoffsetProperty<TLength>[],
  strokeLinecap?: StrokeLinecapProperty | StrokeLinecapProperty[],
  strokeLinejoin?: StrokeLinejoinProperty | StrokeLinejoinProperty[],
  strokeMiterlimit?: GlobalsNumber | GlobalsNumber[],
  strokeOpacity?: GlobalsNumber | GlobalsNumber[],
  strokeWidth?: StrokeWidthProperty<TLength> | StrokeWidthProperty<TLength>[],
  textAnchor?: TextAnchorProperty | TextAnchorProperty[],
  textDecoration?: GlobalsString | GlobalsString[],
  textRendering?: TextRenderingProperty | TextRenderingProperty[],
  unicodeBidi?: UnicodeBidiProperty | UnicodeBidiProperty[],
  vectorEffect?: VectorEffectProperty | VectorEffectProperty[],
  visibility?: VisibilityProperty | VisibilityProperty[],
  whiteSpace?: WhiteSpaceProperty | WhiteSpaceProperty[],
  wordSpacing?: WordSpacingProperty<TLength> | WordSpacingProperty<TLength>[],
  writingMode?: WritingModeProperty | WritingModeProperty[],
};

export type PropertiesFallback<TLength = string | 0> = StandardPropertiesFallback<TLength> &
  VendorPropertiesFallback<TLength> &
  ObsoletePropertiesFallback<TLength> &
  SvgPropertiesFallback<TLength>;

export type StandardLonghandPropertiesHyphenFallback<TLength = string | 0> = {
  "align-content"?: GlobalsString | GlobalsString[],
  "align-items"?: GlobalsString | GlobalsString[],
  "align-self"?: GlobalsString | GlobalsString[],
  "animation-delay"?: GlobalsString | GlobalsString[],
  "animation-direction"?: GlobalsString | GlobalsString[],
  "animation-duration"?: GlobalsString | GlobalsString[],
  "animation-fill-mode"?: GlobalsString | GlobalsString[],
  "animation-iteration-count"?: AnimationIterationCountProperty | AnimationIterationCountProperty[],
  "animation-name"?: GlobalsString | GlobalsString[],
  "animation-play-state"?: GlobalsString | GlobalsString[],
  "animation-timing-function"?: GlobalsString | GlobalsString[],
  appearance?: AppearanceProperty | AppearanceProperty[],
  "backdrop-filter"?: GlobalsString | GlobalsString[],
  "backface-visibility"?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[],
  "background-attachment"?: GlobalsString | GlobalsString[],
  "background-blend-mode"?: GlobalsString | GlobalsString[],
  "background-clip"?: GlobalsString | GlobalsString[],
  "background-color"?: GlobalsString | GlobalsString[],
  "background-image"?: GlobalsString | GlobalsString[],
  "background-origin"?: GlobalsString | GlobalsString[],
  "background-position"?: BackgroundPositionProperty<TLength> | BackgroundPositionProperty<TLength>[],
  "background-position-x"?: BackgroundPositionXProperty<TLength> | BackgroundPositionXProperty<TLength>[],
  "background-position-y"?: BackgroundPositionYProperty<TLength> | BackgroundPositionYProperty<TLength>[],
  "background-repeat"?: GlobalsString | GlobalsString[],
  "background-size"?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[],
  "block-overflow"?: GlobalsString | GlobalsString[],
  "block-size"?: BlockSizeProperty<TLength> | BlockSizeProperty<TLength>[],
  "border-block-color"?: GlobalsString | GlobalsString[],
  "border-block-end-color"?: GlobalsString | GlobalsString[],
  "border-block-end-style"?: BorderBlockEndStyleProperty | BorderBlockEndStyleProperty[],
  "border-block-end-width"?: BorderBlockEndWidthProperty<TLength> | BorderBlockEndWidthProperty<TLength>[],
  "border-block-start-color"?: GlobalsString | GlobalsString[],
  "border-block-start-style"?: BorderBlockStartStyleProperty | BorderBlockStartStyleProperty[],
  "border-block-start-width"?: BorderBlockStartWidthProperty<TLength> | BorderBlockStartWidthProperty<TLength>[],
  "border-block-style"?: BorderBlockStyleProperty | BorderBlockStyleProperty[],
  "border-block-width"?: BorderBlockWidthProperty<TLength> | BorderBlockWidthProperty<TLength>[],
  "border-bottom-color"?: GlobalsString | GlobalsString[],
  "border-bottom-left-radius"?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[],
  "border-bottom-right-radius"?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[],
  "border-bottom-style"?: BorderBottomStyleProperty | BorderBottomStyleProperty[],
  "border-bottom-width"?: BorderBottomWidthProperty<TLength> | BorderBottomWidthProperty<TLength>[],
  "border-collapse"?: BorderCollapseProperty | BorderCollapseProperty[],
  "border-end-end-radius"?: BorderEndEndRadiusProperty<TLength> | BorderEndEndRadiusProperty<TLength>[],
  "border-end-start-radius"?: BorderEndStartRadiusProperty<TLength> | BorderEndStartRadiusProperty<TLength>[],
  "border-image-outset"?: BorderImageOutsetProperty<TLength> | BorderImageOutsetProperty<TLength>[],
  "border-image-repeat"?: GlobalsString | GlobalsString[],
  "border-image-slice"?: BorderImageSliceProperty | BorderImageSliceProperty[],
  "border-image-source"?: GlobalsString | GlobalsString[],
  "border-image-width"?: BorderImageWidthProperty<TLength> | BorderImageWidthProperty<TLength>[],
  "border-inline-color"?: GlobalsString | GlobalsString[],
  "border-inline-end-color"?: GlobalsString | GlobalsString[],
  "border-inline-end-style"?: BorderInlineEndStyleProperty | BorderInlineEndStyleProperty[],
  "border-inline-end-width"?: BorderInlineEndWidthProperty<TLength> | BorderInlineEndWidthProperty<TLength>[],
  "border-inline-start-color"?: GlobalsString | GlobalsString[],
  "border-inline-start-style"?: BorderInlineStartStyleProperty | BorderInlineStartStyleProperty[],
  "border-inline-start-width"?: BorderInlineStartWidthProperty<TLength> | BorderInlineStartWidthProperty<TLength>[],
  "border-inline-style"?: BorderInlineStyleProperty | BorderInlineStyleProperty[],
  "border-inline-width"?: BorderInlineWidthProperty<TLength> | BorderInlineWidthProperty<TLength>[],
  "border-left-color"?: GlobalsString | GlobalsString[],
  "border-left-style"?: BorderLeftStyleProperty | BorderLeftStyleProperty[],
  "border-left-width"?: BorderLeftWidthProperty<TLength> | BorderLeftWidthProperty<TLength>[],
  "border-right-color"?: GlobalsString | GlobalsString[],
  "border-right-style"?: BorderRightStyleProperty | BorderRightStyleProperty[],
  "border-right-width"?: BorderRightWidthProperty<TLength> | BorderRightWidthProperty<TLength>[],
  "border-spacing"?: BorderSpacingProperty<TLength> | BorderSpacingProperty<TLength>[],
  "border-start-end-radius"?: BorderStartEndRadiusProperty<TLength> | BorderStartEndRadiusProperty<TLength>[],
  "border-start-start-radius"?: BorderStartStartRadiusProperty<TLength> | BorderStartStartRadiusProperty<TLength>[],
  "border-top-color"?: GlobalsString | GlobalsString[],
  "border-top-left-radius"?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[],
  "border-top-right-radius"?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[],
  "border-top-style"?: BorderTopStyleProperty | BorderTopStyleProperty[],
  "border-top-width"?: BorderTopWidthProperty<TLength> | BorderTopWidthProperty<TLength>[],
  bottom?: BottomProperty<TLength> | BottomProperty<TLength>[],
  "box-decoration-break"?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[],
  "box-shadow"?: GlobalsString | GlobalsString[],
  "box-sizing"?: BoxSizingProperty | BoxSizingProperty[],
  "break-after"?: BreakAfterProperty | BreakAfterProperty[],
  "break-before"?: BreakBeforeProperty | BreakBeforeProperty[],
  "break-inside"?: BreakInsideProperty | BreakInsideProperty[],
  "caption-side"?: CaptionSideProperty | CaptionSideProperty[],
  "caret-color"?: GlobalsString | GlobalsString[],
  clear?: ClearProperty | ClearProperty[],
  "clip-path"?: GlobalsString | GlobalsString[],
  color?: GlobalsString | GlobalsString[],
  "color-adjust"?: ColorAdjustProperty | ColorAdjustProperty[],
  "column-count"?: ColumnCountProperty | ColumnCountProperty[],
  "column-fill"?: ColumnFillProperty | ColumnFillProperty[],
  "column-gap"?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[],
  "column-rule-color"?: GlobalsString | GlobalsString[],
  "column-rule-style"?: GlobalsString | GlobalsString[],
  "column-rule-width"?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[],
  "column-span"?: ColumnSpanProperty | ColumnSpanProperty[],
  "column-width"?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[],
  contain?: GlobalsString | GlobalsString[],
  content?: GlobalsString | GlobalsString[],
  "counter-increment"?: GlobalsString | GlobalsString[],
  "counter-reset"?: GlobalsString | GlobalsString[],
  cursor?: GlobalsString | GlobalsString[],
  direction?: DirectionProperty | DirectionProperty[],
  display?: GlobalsString | GlobalsString[],
  "empty-cells"?: EmptyCellsProperty | EmptyCellsProperty[],
  filter?: GlobalsString | GlobalsString[],
  "flex-basis"?: FlexBasisProperty<TLength> | FlexBasisProperty<TLength>[],
  "flex-direction"?: FlexDirectionProperty | FlexDirectionProperty[],
  "flex-grow"?: GlobalsNumber | GlobalsNumber[],
  "flex-shrink"?: GlobalsNumber | GlobalsNumber[],
  "flex-wrap"?: FlexWrapProperty | FlexWrapProperty[],
  float?: FloatProperty | FloatProperty[],
  "font-family"?: GlobalsString | GlobalsString[],
  "font-feature-settings"?: GlobalsString | GlobalsString[],
  "font-kerning"?: FontKerningProperty | FontKerningProperty[],
  "font-language-override"?: GlobalsString | GlobalsString[],
  "font-optical-sizing"?: FontOpticalSizingProperty | FontOpticalSizingProperty[],
  "font-size"?: FontSizeProperty<TLength> | FontSizeProperty<TLength>[],
  "font-size-adjust"?: FontSizeAdjustProperty | FontSizeAdjustProperty[],
  "font-stretch"?: GlobalsString | GlobalsString[],
  "font-style"?: GlobalsString | GlobalsString[],
  "font-synthesis"?: GlobalsString | GlobalsString[],
  "font-variant"?: GlobalsString | GlobalsString[],
  "font-variant-caps"?: FontVariantCapsProperty | FontVariantCapsProperty[],
  "font-variant-east-asian"?: GlobalsString | GlobalsString[],
  "font-variant-ligatures"?: GlobalsString | GlobalsString[],
  "font-variant-numeric"?: GlobalsString | GlobalsString[],
  "font-variant-position"?: FontVariantPositionProperty | FontVariantPositionProperty[],
  "font-variation-settings"?: GlobalsString | GlobalsString[],
  "font-weight"?: FontWeightProperty | FontWeightProperty[],
  "grid-auto-columns"?: GridAutoColumnsProperty<TLength> | GridAutoColumnsProperty<TLength>[],
  "grid-auto-flow"?: GlobalsString | GlobalsString[],
  "grid-auto-rows"?: GridAutoRowsProperty<TLength> | GridAutoRowsProperty<TLength>[],
  "grid-column-end"?: GridColumnEndProperty | GridColumnEndProperty[],
  "grid-column-start"?: GridColumnStartProperty | GridColumnStartProperty[],
  "grid-row-end"?: GridRowEndProperty | GridRowEndProperty[],
  "grid-row-start"?: GridRowStartProperty | GridRowStartProperty[],
  "grid-template-areas"?: GlobalsString | GlobalsString[],
  "grid-template-columns"?: GridTemplateColumnsProperty<TLength> | GridTemplateColumnsProperty<TLength>[],
  "grid-template-rows"?: GridTemplateRowsProperty<TLength> | GridTemplateRowsProperty<TLength>[],
  "hanging-punctuation"?: GlobalsString | GlobalsString[],
  height?: HeightProperty<TLength> | HeightProperty<TLength>[],
  hyphens?: HyphensProperty | HyphensProperty[],
  "image-orientation"?: GlobalsString | GlobalsString[],
  "image-rendering"?: ImageRenderingProperty | ImageRenderingProperty[],
  "image-resolution"?: GlobalsString | GlobalsString[],
  "initial-letter"?: InitialLetterProperty | InitialLetterProperty[],
  "inline-size"?: InlineSizeProperty<TLength> | InlineSizeProperty<TLength>[],
  "inset-block-end"?: InsetBlockEndProperty<TLength> | InsetBlockEndProperty<TLength>[],
  "inset-block-start"?: InsetBlockStartProperty<TLength> | InsetBlockStartProperty<TLength>[],
  "inset-inline-end"?: InsetInlineEndProperty<TLength> | InsetInlineEndProperty<TLength>[],
  "inset-inline-start"?: InsetInlineStartProperty<TLength> | InsetInlineStartProperty<TLength>[],
  isolation?: IsolationProperty | IsolationProperty[],
  "justify-content"?: GlobalsString | GlobalsString[],
  "justify-items"?: GlobalsString | GlobalsString[],
  "justify-self"?: GlobalsString | GlobalsString[],
  left?: LeftProperty<TLength> | LeftProperty<TLength>[],
  "letter-spacing"?: LetterSpacingProperty<TLength> | LetterSpacingProperty<TLength>[],
  "line-break"?: LineBreakProperty | LineBreakProperty[],
  "line-height"?: LineHeightProperty<TLength> | LineHeightProperty<TLength>[],
  "line-height-step"?: LineHeightStepProperty<TLength> | LineHeightStepProperty<TLength>[],
  "list-style-image"?: GlobalsString | GlobalsString[],
  "list-style-position"?: ListStylePositionProperty | ListStylePositionProperty[],
  "list-style-type"?: GlobalsString | GlobalsString[],
  "margin-block"?: MarginBlockProperty<TLength> | MarginBlockProperty<TLength>[],
  "margin-block-end"?: MarginBlockEndProperty<TLength> | MarginBlockEndProperty<TLength>[],
  "margin-block-start"?: MarginBlockStartProperty<TLength> | MarginBlockStartProperty<TLength>[],
  "margin-bottom"?: MarginBottomProperty<TLength> | MarginBottomProperty<TLength>[],
  "margin-inline"?: MarginInlineProperty<TLength> | MarginInlineProperty<TLength>[],
  "margin-inline-end"?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[],
  "margin-inline-start"?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[],
  "margin-left"?: MarginLeftProperty<TLength> | MarginLeftProperty<TLength>[],
  "margin-right"?: MarginRightProperty<TLength> | MarginRightProperty<TLength>[],
  "margin-top"?: MarginTopProperty<TLength> | MarginTopProperty<TLength>[],
  "mask-border-mode"?: MaskBorderModeProperty | MaskBorderModeProperty[],
  "mask-border-outset"?: MaskBorderOutsetProperty<TLength> | MaskBorderOutsetProperty<TLength>[],
  "mask-border-repeat"?: GlobalsString | GlobalsString[],
  "mask-border-slice"?: MaskBorderSliceProperty | MaskBorderSliceProperty[],
  "mask-border-source"?: GlobalsString | GlobalsString[],
  "mask-border-width"?: MaskBorderWidthProperty<TLength> | MaskBorderWidthProperty<TLength>[],
  "mask-clip"?: GlobalsString | GlobalsString[],
  "mask-composite"?: GlobalsString | GlobalsString[],
  "mask-image"?: GlobalsString | GlobalsString[],
  "mask-mode"?: GlobalsString | GlobalsString[],
  "mask-origin"?: GlobalsString | GlobalsString[],
  "mask-position"?: MaskPositionProperty<TLength> | MaskPositionProperty<TLength>[],
  "mask-repeat"?: GlobalsString | GlobalsString[],
  "mask-size"?: MaskSizeProperty<TLength> | MaskSizeProperty<TLength>[],
  "mask-type"?: MaskTypeProperty | MaskTypeProperty[],
  "max-block-size"?: MaxBlockSizeProperty<TLength> | MaxBlockSizeProperty<TLength>[],
  "max-height"?: MaxHeightProperty<TLength> | MaxHeightProperty<TLength>[],
  "max-inline-size"?: MaxInlineSizeProperty<TLength> | MaxInlineSizeProperty<TLength>[],
  "max-lines"?: MaxLinesProperty | MaxLinesProperty[],
  "max-width"?: MaxWidthProperty<TLength> | MaxWidthProperty<TLength>[],
  "min-block-size"?: MinBlockSizeProperty<TLength> | MinBlockSizeProperty<TLength>[],
  "min-height"?: MinHeightProperty<TLength> | MinHeightProperty<TLength>[],
  "min-inline-size"?: MinInlineSizeProperty<TLength> | MinInlineSizeProperty<TLength>[],
  "min-width"?: MinWidthProperty<TLength> | MinWidthProperty<TLength>[],
  "mix-blend-mode"?: MixBlendModeProperty | MixBlendModeProperty[],
  "motion-distance"?: OffsetDistanceProperty<TLength> | OffsetDistanceProperty<TLength>[],
  "motion-path"?: GlobalsString | GlobalsString[],
  "motion-rotation"?: GlobalsString | GlobalsString[],
  "object-fit"?: ObjectFitProperty | ObjectFitProperty[],
  "object-position"?: ObjectPositionProperty<TLength> | ObjectPositionProperty<TLength>[],
  "offset-anchor"?: OffsetAnchorProperty<TLength> | OffsetAnchorProperty<TLength>[],
  "offset-distance"?: OffsetDistanceProperty<TLength> | OffsetDistanceProperty<TLength>[],
  "offset-path"?: GlobalsString | GlobalsString[],
  "offset-position"?: OffsetPositionProperty<TLength> | OffsetPositionProperty<TLength>[],
  "offset-rotate"?: GlobalsString | GlobalsString[],
  "offset-rotation"?: GlobalsString | GlobalsString[],
  opacity?: GlobalsNumber | GlobalsNumber[],
  order?: GlobalsNumber | GlobalsNumber[],
  orphans?: GlobalsNumber | GlobalsNumber[],
  "outline-color"?: GlobalsString | GlobalsString[],
  "outline-offset"?: OutlineOffsetProperty<TLength> | OutlineOffsetProperty<TLength>[],
  "outline-style"?: GlobalsString | GlobalsString[],
  "outline-width"?: OutlineWidthProperty<TLength> | OutlineWidthProperty<TLength>[],
  overflow?: GlobalsString | GlobalsString[],
  "overflow-anchor"?: OverflowAnchorProperty | OverflowAnchorProperty[],
  "overflow-block"?: GlobalsString | GlobalsString[],
  "overflow-clip-box"?: OverflowClipBoxProperty | OverflowClipBoxProperty[],
  "overflow-inline"?: GlobalsString | GlobalsString[],
  "overflow-wrap"?: OverflowWrapProperty | OverflowWrapProperty[],
  "overflow-x"?: OverflowXProperty | OverflowXProperty[],
  "overflow-y"?: OverflowYProperty | OverflowYProperty[],
  "overscroll-behavior"?: GlobalsString | GlobalsString[],
  "overscroll-behavior-x"?: OverscrollBehaviorXProperty | OverscrollBehaviorXProperty[],
  "overscroll-behavior-y"?: OverscrollBehaviorYProperty | OverscrollBehaviorYProperty[],
  "padding-block"?: PaddingBlockProperty<TLength> | PaddingBlockProperty<TLength>[],
  "padding-block-end"?: PaddingBlockEndProperty<TLength> | PaddingBlockEndProperty<TLength>[],
  "padding-block-start"?: PaddingBlockStartProperty<TLength> | PaddingBlockStartProperty<TLength>[],
  "padding-bottom"?: PaddingBottomProperty<TLength> | PaddingBottomProperty<TLength>[],
  "padding-inline"?: PaddingInlineProperty<TLength> | PaddingInlineProperty<TLength>[],
  "padding-inline-end"?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[],
  "padding-inline-start"?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[],
  "padding-left"?: PaddingLeftProperty<TLength> | PaddingLeftProperty<TLength>[],
  "padding-right"?: PaddingRightProperty<TLength> | PaddingRightProperty<TLength>[],
  "padding-top"?: PaddingTopProperty<TLength> | PaddingTopProperty<TLength>[],
  "page-break-after"?: PageBreakAfterProperty | PageBreakAfterProperty[],
  "page-break-before"?: PageBreakBeforeProperty | PageBreakBeforeProperty[],
  "page-break-inside"?: PageBreakInsideProperty | PageBreakInsideProperty[],
  "paint-order"?: GlobalsString | GlobalsString[],
  perspective?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[],
  "perspective-origin"?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[],
  "place-content"?: GlobalsString | GlobalsString[],
  "pointer-events"?: PointerEventsProperty | PointerEventsProperty[],
  position?: PositionProperty | PositionProperty[],
  quotes?: GlobalsString | GlobalsString[],
  resize?: ResizeProperty | ResizeProperty[],
  right?: RightProperty<TLength> | RightProperty<TLength>[],
  rotate?: GlobalsString | GlobalsString[],
  "row-gap"?: RowGapProperty<TLength> | RowGapProperty<TLength>[],
  "ruby-align"?: RubyAlignProperty | RubyAlignProperty[],
  "ruby-merge"?: RubyMergeProperty | RubyMergeProperty[],
  "ruby-position"?: RubyPositionProperty | RubyPositionProperty[],
  scale?: ScaleProperty | ScaleProperty[],
  "scroll-behavior"?: ScrollBehaviorProperty | ScrollBehaviorProperty[],
  "scroll-margin"?: ScrollMarginProperty<TLength> | ScrollMarginProperty<TLength>[],
  "scroll-margin-block"?: ScrollMarginBlockProperty<TLength> | ScrollMarginBlockProperty<TLength>[],
  "scroll-margin-block-end"?: ScrollMarginBlockEndProperty<TLength> | ScrollMarginBlockEndProperty<TLength>[],
  "scroll-margin-block-start"?: ScrollMarginBlockStartProperty<TLength> | ScrollMarginBlockStartProperty<TLength>[],
  "scroll-margin-bottom"?: ScrollMarginBottomProperty<TLength> | ScrollMarginBottomProperty<TLength>[],
  "scroll-margin-inline-end"?: ScrollMarginInlineEndProperty<TLength> | ScrollMarginInlineEndProperty<TLength>[],
  "scroll-margin-inline-start"?: ScrollMarginInlineStartProperty<TLength> | ScrollMarginInlineStartProperty<TLength>[],
  "scroll-margin-left"?: ScrollMarginLeftProperty<TLength> | ScrollMarginLeftProperty<TLength>[],
  "scroll-margin-right"?: ScrollMarginRightProperty<TLength> | ScrollMarginRightProperty<TLength>[],
  "scroll-margin-top"?: ScrollMarginTopProperty<TLength> | ScrollMarginTopProperty<TLength>[],
  "scroll-padding"?: ScrollPaddingProperty<TLength> | ScrollPaddingProperty<TLength>[],
  "scroll-padding-block"?: ScrollPaddingBlockProperty<TLength> | ScrollPaddingBlockProperty<TLength>[],
  "scroll-padding-block-end"?: ScrollPaddingBlockEndProperty<TLength> | ScrollPaddingBlockEndProperty<TLength>[],
  "scroll-padding-block-start"?: ScrollPaddingBlockStartProperty<TLength> | ScrollPaddingBlockStartProperty<TLength>[],
  "scroll-padding-bottom"?: ScrollPaddingBottomProperty<TLength> | ScrollPaddingBottomProperty<TLength>[],
  "scroll-padding-inline"?: ScrollPaddingInlineProperty<TLength> | ScrollPaddingInlineProperty<TLength>[],
  "scroll-padding-inline-end"?: ScrollPaddingInlineEndProperty<TLength> | ScrollPaddingInlineEndProperty<TLength>[],
  "scroll-padding-inline-start"?: ScrollPaddingInlineStartProperty<TLength> | ScrollPaddingInlineStartProperty<TLength>[],
  "scroll-padding-left"?: ScrollPaddingLeftProperty<TLength> | ScrollPaddingLeftProperty<TLength>[],
  "scroll-padding-right"?: ScrollPaddingRightProperty<TLength> | ScrollPaddingRightProperty<TLength>[],
  "scroll-padding-top"?: ScrollPaddingTopProperty<TLength> | ScrollPaddingTopProperty<TLength>[],
  "scroll-snap-align"?: GlobalsString | GlobalsString[],
  "scroll-snap-type"?: GlobalsString | GlobalsString[],
  "scrollbar-color"?: GlobalsString | GlobalsString[],
  "scrollbar-width"?: ScrollbarWidthProperty | ScrollbarWidthProperty[],
  "shape-image-threshold"?: GlobalsNumber | GlobalsNumber[],
  "shape-margin"?: ShapeMarginProperty<TLength> | ShapeMarginProperty<TLength>[],
  "shape-outside"?: GlobalsString | GlobalsString[],
  "tab-size"?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[],
  "table-layout"?: TableLayoutProperty | TableLayoutProperty[],
  "text-align"?: TextAlignProperty | TextAlignProperty[],
  "text-align-last"?: TextAlignLastProperty | TextAlignLastProperty[],
  "text-combine-upright"?: GlobalsString | GlobalsString[],
  "text-decoration-color"?: GlobalsString | GlobalsString[],
  "text-decoration-line"?: GlobalsString | GlobalsString[],
  "text-decoration-skip"?: GlobalsString | GlobalsString[],
  "text-decoration-skip-ink"?: TextDecorationSkipInkProperty | TextDecorationSkipInkProperty[],
  "text-decoration-style"?: TextDecorationStyleProperty | TextDecorationStyleProperty[],
  "text-emphasis-color"?: GlobalsString | GlobalsString[],
  "text-emphasis-position"?: GlobalsString | GlobalsString[],
  "text-emphasis-style"?: GlobalsString | GlobalsString[],
  "text-indent"?: TextIndentProperty<TLength> | TextIndentProperty<TLength>[],
  "text-justify"?: TextJustifyProperty | TextJustifyProperty[],
  "text-orientation"?: TextOrientationProperty | TextOrientationProperty[],
  "text-overflow"?: GlobalsString | GlobalsString[],
  "text-rendering"?: TextRenderingProperty | TextRenderingProperty[],
  "text-shadow"?: GlobalsString | GlobalsString[],
  "text-size-adjust"?: GlobalsString | GlobalsString[],
  "text-transform"?: TextTransformProperty | TextTransformProperty[],
  "text-underline-position"?: GlobalsString | GlobalsString[],
  top?: TopProperty<TLength> | TopProperty<TLength>[],
  "touch-action"?: GlobalsString | GlobalsString[],
  transform?: GlobalsString | GlobalsString[],
  "transform-box"?: TransformBoxProperty | TransformBoxProperty[],
  "transform-origin"?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  "transform-style"?: TransformStyleProperty | TransformStyleProperty[],
  "transition-delay"?: GlobalsString | GlobalsString[],
  "transition-duration"?: GlobalsString | GlobalsString[],
  "transition-property"?: GlobalsString | GlobalsString[],
  "transition-timing-function"?: GlobalsString | GlobalsString[],
  translate?: TranslateProperty<TLength> | TranslateProperty<TLength>[],
  "unicode-bidi"?: UnicodeBidiProperty | UnicodeBidiProperty[],
  "user-select"?: UserSelectProperty | UserSelectProperty[],
  "vertical-align"?: VerticalAlignProperty<TLength> | VerticalAlignProperty<TLength>[],
  visibility?: VisibilityProperty | VisibilityProperty[],
  "white-space"?: WhiteSpaceProperty | WhiteSpaceProperty[],
  widows?: GlobalsNumber | GlobalsNumber[],
  width?: WidthProperty<TLength> | WidthProperty<TLength>[],
  "will-change"?: GlobalsString | GlobalsString[],
  "word-break"?: WordBreakProperty | WordBreakProperty[],
  "word-spacing"?: WordSpacingProperty<TLength> | WordSpacingProperty<TLength>[],
  "word-wrap"?: WordWrapProperty | WordWrapProperty[],
  "writing-mode"?: WritingModeProperty | WritingModeProperty[],
  "z-index"?: ZIndexProperty | ZIndexProperty[],
  zoom?: ZoomProperty | ZoomProperty[],
};

export type StandardShorthandPropertiesHyphenFallback<TLength = string | 0> = {
  all?: Globals | Globals[],
  animation?: AnimationProperty | AnimationProperty[],
  background?: BackgroundProperty<TLength> | BackgroundProperty<TLength>[],
  border?: BorderProperty<TLength> | BorderProperty<TLength>[],
  "border-block"?: BorderBlockProperty<TLength> | BorderBlockProperty<TLength>[],
  "border-block-end"?: BorderBlockEndProperty<TLength> | BorderBlockEndProperty<TLength>[],
  "border-block-start"?: BorderBlockStartProperty<TLength> | BorderBlockStartProperty<TLength>[],
  "border-bottom"?: BorderBottomProperty<TLength> | BorderBottomProperty<TLength>[],
  "border-color"?: GlobalsString | GlobalsString[],
  "border-image"?: BorderImageProperty | BorderImageProperty[],
  "border-inline"?: BorderInlineProperty<TLength> | BorderInlineProperty<TLength>[],
  "border-inline-end"?: BorderInlineEndProperty<TLength> | BorderInlineEndProperty<TLength>[],
  "border-inline-start"?: BorderInlineStartProperty<TLength> | BorderInlineStartProperty<TLength>[],
  "border-left"?: BorderLeftProperty<TLength> | BorderLeftProperty<TLength>[],
  "border-radius"?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[],
  "border-right"?: BorderRightProperty<TLength> | BorderRightProperty<TLength>[],
  "border-style"?: GlobalsString | GlobalsString[],
  "border-top"?: BorderTopProperty<TLength> | BorderTopProperty<TLength>[],
  "border-width"?: BorderWidthProperty<TLength> | BorderWidthProperty<TLength>[],
  "column-rule"?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[],
  columns?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[],
  flex?: FlexProperty<TLength> | FlexProperty<TLength>[],
  "flex-flow"?: GlobalsString | GlobalsString[],
  font?: GlobalsString | GlobalsString[],
  gap?: GapProperty<TLength> | GapProperty<TLength>[],
  grid?: GlobalsString | GlobalsString[],
  "grid-area"?: GridAreaProperty | GridAreaProperty[],
  "grid-column"?: GridColumnProperty | GridColumnProperty[],
  "grid-row"?: GridRowProperty | GridRowProperty[],
  "grid-template"?: GlobalsString | GlobalsString[],
  "line-clamp"?: LineClampProperty | LineClampProperty[],
  "list-style"?: GlobalsString | GlobalsString[],
  margin?: MarginProperty<TLength> | MarginProperty<TLength>[],
  mask?: MaskProperty<TLength> | MaskProperty<TLength>[],
  "mask-border"?: MaskBorderProperty | MaskBorderProperty[],
  motion?: OffsetProperty<TLength> | OffsetProperty<TLength>[],
  offset?: OffsetProperty<TLength> | OffsetProperty<TLength>[],
  outline?: OutlineProperty<TLength> | OutlineProperty<TLength>[],
  padding?: PaddingProperty<TLength> | PaddingProperty<TLength>[],
  "place-items"?: GlobalsString | GlobalsString[],
  "place-self"?: GlobalsString | GlobalsString[],
  "text-decoration"?: GlobalsString | GlobalsString[],
  "text-emphasis"?: GlobalsString | GlobalsString[],
  transition?: GlobalsString | GlobalsString[],
};

export type StandardPropertiesHyphenFallback<TLength = string | 0> = StandardLonghandPropertiesHyphenFallback<TLength> & StandardShorthandPropertiesHyphenFallback<TLength>;

export type VendorLonghandPropertiesHyphenFallback<TLength = string | 0> = {
  "-moz-animation-delay"?: GlobalsString | GlobalsString[],
  "-moz-animation-direction"?: GlobalsString | GlobalsString[],
  "-moz-animation-duration"?: GlobalsString | GlobalsString[],
  "-moz-animation-fill-mode"?: GlobalsString | GlobalsString[],
  "-moz-animation-iteration-count"?: AnimationIterationCountProperty | AnimationIterationCountProperty[],
  "-moz-animation-name"?: GlobalsString | GlobalsString[],
  "-moz-animation-play-state"?: GlobalsString | GlobalsString[],
  "-moz-animation-timing-function"?: GlobalsString | GlobalsString[],
  "-moz-appearance"?: MozAppearanceProperty | MozAppearanceProperty[],
  "-moz-backface-visibility"?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[],
  "-moz-border-bottom-colors"?: GlobalsString | GlobalsString[],
  "-moz-border-end-color"?: GlobalsString | GlobalsString[],
  "-moz-border-end-style"?: BorderInlineEndStyleProperty | BorderInlineEndStyleProperty[],
  "-moz-border-end-width"?: BorderInlineEndWidthProperty<TLength> | BorderInlineEndWidthProperty<TLength>[],
  "-moz-border-left-colors"?: GlobalsString | GlobalsString[],
  "-moz-border-right-colors"?: GlobalsString | GlobalsString[],
  "-moz-border-start-color"?: GlobalsString | GlobalsString[],
  "-moz-border-start-style"?: BorderInlineStartStyleProperty | BorderInlineStartStyleProperty[],
  "-moz-border-top-colors"?: GlobalsString | GlobalsString[],
  "-moz-box-sizing"?: BoxSizingProperty | BoxSizingProperty[],
  "-moz-column-count"?: ColumnCountProperty | ColumnCountProperty[],
  "-moz-column-fill"?: ColumnFillProperty | ColumnFillProperty[],
  "-moz-column-gap"?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[],
  "-moz-column-rule-color"?: GlobalsString | GlobalsString[],
  "-moz-column-rule-style"?: GlobalsString | GlobalsString[],
  "-moz-column-rule-width"?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[],
  "-moz-column-width"?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[],
  "-moz-context-properties"?: GlobalsString | GlobalsString[],
  "-moz-float-edge"?: MozFloatEdgeProperty | MozFloatEdgeProperty[],
  "-moz-font-feature-settings"?: GlobalsString | GlobalsString[],
  "-moz-font-language-override"?: GlobalsString | GlobalsString[],
  "-moz-force-broken-image-icon"?: GlobalsNumber | GlobalsNumber[],
  "-moz-hyphens"?: HyphensProperty | HyphensProperty[],
  "-moz-image-region"?: GlobalsString | GlobalsString[],
  "-moz-margin-end"?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[],
  "-moz-margin-start"?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[],
  "-moz-orient"?: MozOrientProperty | MozOrientProperty[],
  "-moz-outline-radius-bottomleft"?: MozOutlineRadiusBottomleftProperty<TLength> | MozOutlineRadiusBottomleftProperty<TLength>[],
  "-moz-outline-radius-bottomright"?: MozOutlineRadiusBottomrightProperty<TLength> | MozOutlineRadiusBottomrightProperty<TLength>[],
  "-moz-outline-radius-topleft"?: MozOutlineRadiusTopleftProperty<TLength> | MozOutlineRadiusTopleftProperty<TLength>[],
  "-moz-outline-radius-topright"?: MozOutlineRadiusToprightProperty<TLength> | MozOutlineRadiusToprightProperty<TLength>[],
  "-moz-padding-end"?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[],
  "-moz-padding-start"?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[],
  "-moz-perspective"?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[],
  "-moz-perspective-origin"?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[],
  "-moz-stack-sizing"?: MozStackSizingProperty | MozStackSizingProperty[],
  "-moz-tab-size"?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[],
  "-moz-text-size-adjust"?: GlobalsString | GlobalsString[],
  "-moz-transform-origin"?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  "-moz-transform-style"?: TransformStyleProperty | TransformStyleProperty[],
  "-moz-transition-delay"?: GlobalsString | GlobalsString[],
  "-moz-transition-duration"?: GlobalsString | GlobalsString[],
  "-moz-transition-property"?: GlobalsString | GlobalsString[],
  "-moz-transition-timing-function"?: GlobalsString | GlobalsString[],
  "-moz-user-focus"?: MozUserFocusProperty | MozUserFocusProperty[],
  "-moz-user-modify"?: MozUserModifyProperty | MozUserModifyProperty[],
  "-moz-user-select"?: UserSelectProperty | UserSelectProperty[],
  "-moz-window-dragging"?: MozWindowDraggingProperty | MozWindowDraggingProperty[],
  "-moz-window-shadow"?: MozWindowShadowProperty | MozWindowShadowProperty[],
  "-ms-accelerator"?: MsAcceleratorProperty | MsAcceleratorProperty[],
  "-ms-align-self"?: GlobalsString | GlobalsString[],
  "-ms-block-progression"?: MsBlockProgressionProperty | MsBlockProgressionProperty[],
  "-ms-content-zoom-chaining"?: MsContentZoomChainingProperty | MsContentZoomChainingProperty[],
  "-ms-content-zoom-limit-max"?: GlobalsString | GlobalsString[],
  "-ms-content-zoom-limit-min"?: GlobalsString | GlobalsString[],
  "-ms-content-zoom-snap-points"?: GlobalsString | GlobalsString[],
  "-ms-content-zoom-snap-type"?: MsContentZoomSnapTypeProperty | MsContentZoomSnapTypeProperty[],
  "-ms-content-zooming"?: MsContentZoomingProperty | MsContentZoomingProperty[],
  "-ms-filter"?: GlobalsString | GlobalsString[],
  "-ms-flex-direction"?: FlexDirectionProperty | FlexDirectionProperty[],
  "-ms-flex-positive"?: GlobalsNumber | GlobalsNumber[],
  "-ms-flow-from"?: GlobalsString | GlobalsString[],
  "-ms-flow-into"?: GlobalsString | GlobalsString[],
  "-ms-grid-columns"?: GridAutoColumnsProperty<TLength> | GridAutoColumnsProperty<TLength>[],
  "-ms-grid-rows"?: GridAutoRowsProperty<TLength> | GridAutoRowsProperty<TLength>[],
  "-ms-high-contrast-adjust"?: MsHighContrastAdjustProperty | MsHighContrastAdjustProperty[],
  "-ms-hyphenate-limit-chars"?: MsHyphenateLimitCharsProperty | MsHyphenateLimitCharsProperty[],
  "-ms-hyphenate-limit-lines"?: MsHyphenateLimitLinesProperty | MsHyphenateLimitLinesProperty[],
  "-ms-hyphenate-limit-zone"?: MsHyphenateLimitZoneProperty<TLength> | MsHyphenateLimitZoneProperty<TLength>[],
  "-ms-hyphens"?: HyphensProperty | HyphensProperty[],
  "-ms-ime-align"?: MsImeAlignProperty | MsImeAlignProperty[],
  "-ms-line-break"?: LineBreakProperty | LineBreakProperty[],
  "-ms-order"?: GlobalsNumber | GlobalsNumber[],
  "-ms-overflow-style"?: MsOverflowStyleProperty | MsOverflowStyleProperty[],
  "-ms-overflow-x"?: OverflowXProperty | OverflowXProperty[],
  "-ms-overflow-y"?: OverflowYProperty | OverflowYProperty[],
  "-ms-scroll-chaining"?: MsScrollChainingProperty | MsScrollChainingProperty[],
  "-ms-scroll-limit-x-max"?: MsScrollLimitXMaxProperty<TLength> | MsScrollLimitXMaxProperty<TLength>[],
  "-ms-scroll-limit-x-min"?: MsScrollLimitXMinProperty<TLength> | MsScrollLimitXMinProperty<TLength>[],
  "-ms-scroll-limit-y-max"?: MsScrollLimitYMaxProperty<TLength> | MsScrollLimitYMaxProperty<TLength>[],
  "-ms-scroll-limit-y-min"?: MsScrollLimitYMinProperty<TLength> | MsScrollLimitYMinProperty<TLength>[],
  "-ms-scroll-rails"?: MsScrollRailsProperty | MsScrollRailsProperty[],
  "-ms-scroll-snap-points-x"?: GlobalsString | GlobalsString[],
  "-ms-scroll-snap-points-y"?: GlobalsString | GlobalsString[],
  "-ms-scroll-snap-type"?: MsScrollSnapTypeProperty | MsScrollSnapTypeProperty[],
  "-ms-scroll-translation"?: MsScrollTranslationProperty | MsScrollTranslationProperty[],
  "-ms-text-autospace"?: MsTextAutospaceProperty | MsTextAutospaceProperty[],
  "-ms-text-combine-horizontal"?: GlobalsString | GlobalsString[],
  "-ms-text-overflow"?: GlobalsString | GlobalsString[],
  "-ms-text-size-adjust"?: GlobalsString | GlobalsString[],
  "-ms-touch-action"?: GlobalsString | GlobalsString[],
  "-ms-touch-select"?: MsTouchSelectProperty | MsTouchSelectProperty[],
  "-ms-transform"?: GlobalsString | GlobalsString[],
  "-ms-transform-origin"?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  "-ms-user-select"?: MsUserSelectProperty | MsUserSelectProperty[],
  "-ms-word-break"?: WordBreakProperty | WordBreakProperty[],
  "-ms-wrap-flow"?: MsWrapFlowProperty | MsWrapFlowProperty[],
  "-ms-wrap-margin"?: MsWrapMarginProperty<TLength> | MsWrapMarginProperty<TLength>[],
  "-ms-wrap-through"?: MsWrapThroughProperty | MsWrapThroughProperty[],
  "-ms-writing-mode"?: WritingModeProperty | WritingModeProperty[],
  "-o-object-fit"?: ObjectFitProperty | ObjectFitProperty[],
  "-o-object-position"?: ObjectPositionProperty<TLength> | ObjectPositionProperty<TLength>[],
  "-o-tab-size"?: TabSizeProperty<TLength> | TabSizeProperty<TLength>[],
  "-o-text-overflow"?: GlobalsString | GlobalsString[],
  "-o-transform-origin"?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  "-webkit-align-content"?: GlobalsString | GlobalsString[],
  "-webkit-align-items"?: GlobalsString | GlobalsString[],
  "-webkit-align-self"?: GlobalsString | GlobalsString[],
  "-webkit-animation-delay"?: GlobalsString | GlobalsString[],
  "-webkit-animation-direction"?: GlobalsString | GlobalsString[],
  "-webkit-animation-duration"?: GlobalsString | GlobalsString[],
  "-webkit-animation-fill-mode"?: GlobalsString | GlobalsString[],
  "-webkit-animation-iteration-count"?: AnimationIterationCountProperty | AnimationIterationCountProperty[],
  "-webkit-animation-name"?: GlobalsString | GlobalsString[],
  "-webkit-animation-play-state"?: GlobalsString | GlobalsString[],
  "-webkit-animation-timing-function"?: GlobalsString | GlobalsString[],
  "-webkit-appearance"?: WebkitAppearanceProperty | WebkitAppearanceProperty[],
  "-webkit-backdrop-filter"?: GlobalsString | GlobalsString[],
  "-webkit-backface-visibility"?: BackfaceVisibilityProperty | BackfaceVisibilityProperty[],
  "-webkit-background-clip"?: GlobalsString | GlobalsString[],
  "-webkit-background-origin"?: GlobalsString | GlobalsString[],
  "-webkit-background-size"?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[],
  "-webkit-border-before-color"?: GlobalsString | GlobalsString[],
  "-webkit-border-before-style"?: GlobalsString | GlobalsString[],
  "-webkit-border-before-width"?: WebkitBorderBeforeWidthProperty<TLength> | WebkitBorderBeforeWidthProperty<TLength>[],
  "-webkit-border-bottom-left-radius"?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[],
  "-webkit-border-bottom-right-radius"?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[],
  "-webkit-border-image-slice"?: BorderImageSliceProperty | BorderImageSliceProperty[],
  "-webkit-border-top-left-radius"?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[],
  "-webkit-border-top-right-radius"?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[],
  "-webkit-box-decoration-break"?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[],
  "-webkit-box-reflect"?: WebkitBoxReflectProperty<TLength> | WebkitBoxReflectProperty<TLength>[],
  "-webkit-box-shadow"?: GlobalsString | GlobalsString[],
  "-webkit-box-sizing"?: BoxSizingProperty | BoxSizingProperty[],
  "-webkit-clip-path"?: GlobalsString | GlobalsString[],
  "-webkit-color-adjust"?: ColorAdjustProperty | ColorAdjustProperty[],
  "-webkit-column-count"?: ColumnCountProperty | ColumnCountProperty[],
  "-webkit-column-gap"?: ColumnGapProperty<TLength> | ColumnGapProperty<TLength>[],
  "-webkit-column-rule-color"?: GlobalsString | GlobalsString[],
  "-webkit-column-rule-style"?: GlobalsString | GlobalsString[],
  "-webkit-column-rule-width"?: ColumnRuleWidthProperty<TLength> | ColumnRuleWidthProperty<TLength>[],
  "-webkit-column-span"?: ColumnSpanProperty | ColumnSpanProperty[],
  "-webkit-column-width"?: ColumnWidthProperty<TLength> | ColumnWidthProperty<TLength>[],
  "-webkit-filter"?: GlobalsString | GlobalsString[],
  "-webkit-flex-basis"?: FlexBasisProperty<TLength> | FlexBasisProperty<TLength>[],
  "-webkit-flex-direction"?: FlexDirectionProperty | FlexDirectionProperty[],
  "-webkit-flex-grow"?: GlobalsNumber | GlobalsNumber[],
  "-webkit-flex-shrink"?: GlobalsNumber | GlobalsNumber[],
  "-webkit-flex-wrap"?: FlexWrapProperty | FlexWrapProperty[],
  "-webkit-font-feature-settings"?: GlobalsString | GlobalsString[],
  "-webkit-font-kerning"?: FontKerningProperty | FontKerningProperty[],
  "-webkit-font-variant-ligatures"?: GlobalsString | GlobalsString[],
  "-webkit-hyphens"?: HyphensProperty | HyphensProperty[],
  "-webkit-justify-content"?: GlobalsString | GlobalsString[],
  "-webkit-line-break"?: LineBreakProperty | LineBreakProperty[],
  "-webkit-margin-end"?: MarginInlineEndProperty<TLength> | MarginInlineEndProperty<TLength>[],
  "-webkit-margin-start"?: MarginInlineStartProperty<TLength> | MarginInlineStartProperty<TLength>[],
  "-webkit-mask-attachment"?: GlobalsString | GlobalsString[],
  "-webkit-mask-clip"?: GlobalsString | GlobalsString[],
  "-webkit-mask-composite"?: GlobalsString | GlobalsString[],
  "-webkit-mask-image"?: GlobalsString | GlobalsString[],
  "-webkit-mask-origin"?: GlobalsString | GlobalsString[],
  "-webkit-mask-position"?: WebkitMaskPositionProperty<TLength> | WebkitMaskPositionProperty<TLength>[],
  "-webkit-mask-position-x"?: WebkitMaskPositionXProperty<TLength> | WebkitMaskPositionXProperty<TLength>[],
  "-webkit-mask-position-y"?: WebkitMaskPositionYProperty<TLength> | WebkitMaskPositionYProperty<TLength>[],
  "-webkit-mask-repeat"?: GlobalsString | GlobalsString[],
  "-webkit-mask-repeat-x"?: WebkitMaskRepeatXProperty | WebkitMaskRepeatXProperty[],
  "-webkit-mask-repeat-y"?: WebkitMaskRepeatYProperty | WebkitMaskRepeatYProperty[],
  "-webkit-mask-size"?: WebkitMaskSizeProperty<TLength> | WebkitMaskSizeProperty<TLength>[],
  "-webkit-max-inline-size"?: MaxInlineSizeProperty<TLength> | MaxInlineSizeProperty<TLength>[],
  "-webkit-order"?: GlobalsNumber | GlobalsNumber[],
  "-webkit-overflow-scrolling"?: WebkitOverflowScrollingProperty | WebkitOverflowScrollingProperty[],
  "-webkit-padding-end"?: PaddingInlineEndProperty<TLength> | PaddingInlineEndProperty<TLength>[],
  "-webkit-padding-start"?: PaddingInlineStartProperty<TLength> | PaddingInlineStartProperty<TLength>[],
  "-webkit-perspective"?: PerspectiveProperty<TLength> | PerspectiveProperty<TLength>[],
  "-webkit-perspective-origin"?: PerspectiveOriginProperty<TLength> | PerspectiveOriginProperty<TLength>[],
  "-webkit-scroll-snap-type"?: GlobalsString | GlobalsString[],
  "-webkit-shape-margin"?: ShapeMarginProperty<TLength> | ShapeMarginProperty<TLength>[],
  "-webkit-tap-highlight-color"?: GlobalsString | GlobalsString[],
  "-webkit-text-combine"?: GlobalsString | GlobalsString[],
  "-webkit-text-decoration-color"?: GlobalsString | GlobalsString[],
  "-webkit-text-decoration-line"?: GlobalsString | GlobalsString[],
  "-webkit-text-decoration-skip"?: GlobalsString | GlobalsString[],
  "-webkit-text-decoration-style"?: TextDecorationStyleProperty | TextDecorationStyleProperty[],
  "-webkit-text-emphasis-color"?: GlobalsString | GlobalsString[],
  "-webkit-text-emphasis-position"?: GlobalsString | GlobalsString[],
  "-webkit-text-emphasis-style"?: GlobalsString | GlobalsString[],
  "-webkit-text-fill-color"?: GlobalsString | GlobalsString[],
  "-webkit-text-orientation"?: TextOrientationProperty | TextOrientationProperty[],
  "-webkit-text-size-adjust"?: GlobalsString | GlobalsString[],
  "-webkit-text-stroke-color"?: GlobalsString | GlobalsString[],
  "-webkit-text-stroke-width"?: WebkitTextStrokeWidthProperty<TLength> | WebkitTextStrokeWidthProperty<TLength>[],
  "-webkit-touch-callout"?: WebkitTouchCalloutProperty | WebkitTouchCalloutProperty[],
  "-webkit-transform"?: GlobalsString | GlobalsString[],
  "-webkit-transform-origin"?: TransformOriginProperty<TLength> | TransformOriginProperty<TLength>[],
  "-webkit-transform-style"?: TransformStyleProperty | TransformStyleProperty[],
  "-webkit-transition-delay"?: GlobalsString | GlobalsString[],
  "-webkit-transition-duration"?: GlobalsString | GlobalsString[],
  "-webkit-transition-property"?: GlobalsString | GlobalsString[],
  "-webkit-transition-timing-function"?: GlobalsString | GlobalsString[],
  "-webkit-user-modify"?: WebkitUserModifyProperty | WebkitUserModifyProperty[],
  "-webkit-user-select"?: UserSelectProperty | UserSelectProperty[],
  "-webkit-writing-mode"?: WritingModeProperty | WritingModeProperty[],
};

export type VendorShorthandPropertiesHyphenFallback<TLength = string | 0> = {
  "-moz-animation"?: AnimationProperty | AnimationProperty[],
  "-moz-border-image"?: BorderImageProperty | BorderImageProperty[],
  "-moz-column-rule"?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[],
  "-moz-columns"?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[],
  "-moz-transition"?: GlobalsString | GlobalsString[],
  "-ms-content-zoom-limit"?: GlobalsString | GlobalsString[],
  "-ms-content-zoom-snap"?: GlobalsString | GlobalsString[],
  "-ms-flex"?: FlexProperty<TLength> | FlexProperty<TLength>[],
  "-ms-scroll-limit"?: GlobalsString | GlobalsString[],
  "-ms-scroll-snap-x"?: GlobalsString | GlobalsString[],
  "-ms-scroll-snap-y"?: GlobalsString | GlobalsString[],
  "-o-border-image"?: BorderImageProperty | BorderImageProperty[],
  "-webkit-animation"?: AnimationProperty | AnimationProperty[],
  "-webkit-border-before"?: WebkitBorderBeforeProperty<TLength> | WebkitBorderBeforeProperty<TLength>[],
  "-webkit-border-image"?: BorderImageProperty | BorderImageProperty[],
  "-webkit-border-radius"?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[],
  "-webkit-column-rule"?: ColumnRuleProperty<TLength> | ColumnRuleProperty<TLength>[],
  "-webkit-columns"?: ColumnsProperty<TLength> | ColumnsProperty<TLength>[],
  "-webkit-flex"?: FlexProperty<TLength> | FlexProperty<TLength>[],
  "-webkit-flex-flow"?: GlobalsString | GlobalsString[],
  "-webkit-line-clamp"?: WebkitLineClampProperty | WebkitLineClampProperty[],
  "-webkit-mask"?: WebkitMaskProperty<TLength> | WebkitMaskProperty<TLength>[],
  "-webkit-text-emphasis"?: GlobalsString | GlobalsString[],
  "-webkit-text-stroke"?: WebkitTextStrokeProperty<TLength> | WebkitTextStrokeProperty<TLength>[],
  "-webkit-transition"?: GlobalsString | GlobalsString[],
};

export type VendorPropertiesHyphenFallback<TLength = string | 0> = VendorLonghandPropertiesHyphenFallback<TLength> & VendorShorthandPropertiesHyphenFallback<TLength>;

export type ObsoletePropertiesHyphenFallback<TLength = string | 0> = {
  "box-align"?: BoxAlignProperty | BoxAlignProperty[],
  "box-direction"?: BoxDirectionProperty | BoxDirectionProperty[],
  "box-flex"?: GlobalsNumber | GlobalsNumber[],
  "box-flex-group"?: GlobalsNumber | GlobalsNumber[],
  "box-lines"?: BoxLinesProperty | BoxLinesProperty[],
  "box-ordinal-group"?: GlobalsNumber | GlobalsNumber[],
  "box-orient"?: BoxOrientProperty | BoxOrientProperty[],
  "box-pack"?: BoxPackProperty | BoxPackProperty[],
  clip?: GlobalsString | GlobalsString[],
  "font-variant-alternates"?: GlobalsString | GlobalsString[],
  "grid-column-gap"?: GridColumnGapProperty<TLength> | GridColumnGapProperty<TLength>[],
  "grid-gap"?: GridGapProperty<TLength> | GridGapProperty<TLength>[],
  "grid-row-gap"?: GridRowGapProperty<TLength> | GridRowGapProperty<TLength>[],
  "ime-mode"?: ImeModeProperty | ImeModeProperty[],
  "offset-block-end"?: InsetBlockEndProperty<TLength> | InsetBlockEndProperty<TLength>[],
  "offset-block-start"?: InsetBlockStartProperty<TLength> | InsetBlockStartProperty<TLength>[],
  "offset-inline-end"?: InsetInlineEndProperty<TLength> | InsetInlineEndProperty<TLength>[],
  "offset-inline-start"?: InsetInlineStartProperty<TLength> | InsetInlineStartProperty<TLength>[],
  "scroll-snap-coordinate"?: ScrollSnapCoordinateProperty<TLength> | ScrollSnapCoordinateProperty<TLength>[],
  "scroll-snap-destination"?: ScrollSnapDestinationProperty<TLength> | ScrollSnapDestinationProperty<TLength>[],
  "scroll-snap-points-x"?: GlobalsString | GlobalsString[],
  "scroll-snap-points-y"?: GlobalsString | GlobalsString[],
  "scroll-snap-type-x"?: ScrollSnapTypeXProperty | ScrollSnapTypeXProperty[],
  "scroll-snap-type-y"?: ScrollSnapTypeYProperty | ScrollSnapTypeYProperty[],
  "text-combine-horizontal"?: GlobalsString | GlobalsString[],
  "-khtml-box-align"?: BoxAlignProperty | BoxAlignProperty[],
  "-khtml-box-direction"?: BoxDirectionProperty | BoxDirectionProperty[],
  "-khtml-box-flex"?: GlobalsNumber | GlobalsNumber[],
  "-khtml-box-flex-group"?: GlobalsNumber | GlobalsNumber[],
  "-khtml-box-lines"?: BoxLinesProperty | BoxLinesProperty[],
  "-khtml-box-ordinal-group"?: GlobalsNumber | GlobalsNumber[],
  "-khtml-box-orient"?: BoxOrientProperty | BoxOrientProperty[],
  "-khtml-box-pack"?: BoxPackProperty | BoxPackProperty[],
  "-moz-background-clip"?: GlobalsString | GlobalsString[],
  "-moz-background-inline-policy"?: BoxDecorationBreakProperty | BoxDecorationBreakProperty[],
  "-moz-background-origin"?: GlobalsString | GlobalsString[],
  "-moz-background-size"?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[],
  "-moz-binding"?: GlobalsString | GlobalsString[],
  "-moz-border-radius"?: BorderRadiusProperty<TLength> | BorderRadiusProperty<TLength>[],
  "-moz-border-radius-bottomleft"?: BorderBottomLeftRadiusProperty<TLength> | BorderBottomLeftRadiusProperty<TLength>[],
  "-moz-border-radius-bottomright"?: BorderBottomRightRadiusProperty<TLength> | BorderBottomRightRadiusProperty<TLength>[],
  "-moz-border-radius-topleft"?: BorderTopLeftRadiusProperty<TLength> | BorderTopLeftRadiusProperty<TLength>[],
  "-moz-border-radius-topright"?: BorderTopRightRadiusProperty<TLength> | BorderTopRightRadiusProperty<TLength>[],
  "-moz-box-align"?: BoxAlignProperty | BoxAlignProperty[],
  "-moz-box-direction"?: BoxDirectionProperty | BoxDirectionProperty[],
  "-moz-box-flex"?: GlobalsNumber | GlobalsNumber[],
  "-moz-box-ordinal-group"?: GlobalsNumber | GlobalsNumber[],
  "-moz-box-orient"?: BoxOrientProperty | BoxOrientProperty[],
  "-moz-box-pack"?: BoxPackProperty | BoxPackProperty[],
  "-moz-box-shadow"?: GlobalsString | GlobalsString[],
  "-moz-opacity"?: GlobalsNumber | GlobalsNumber[],
  "-moz-outline"?: OutlineProperty<TLength> | OutlineProperty<TLength>[],
  "-moz-outline-color"?: GlobalsString | GlobalsString[],
  "-moz-outline-radius"?: MozOutlineRadiusProperty<TLength> | MozOutlineRadiusProperty<TLength>[],
  "-moz-outline-style"?: GlobalsString | GlobalsString[],
  "-moz-outline-width"?: OutlineWidthProperty<TLength> | OutlineWidthProperty<TLength>[],
  "-moz-resize"?: ResizeProperty | ResizeProperty[],
  "-moz-text-align-last"?: TextAlignLastProperty | TextAlignLastProperty[],
  "-moz-text-blink"?: MozTextBlinkProperty | MozTextBlinkProperty[],
  "-moz-text-decoration-color"?: GlobalsString | GlobalsString[],
  "-moz-text-decoration-line"?: GlobalsString | GlobalsString[],
  "-moz-text-decoration-style"?: TextDecorationStyleProperty | TextDecorationStyleProperty[],
  "-moz-user-input"?: MozUserInputProperty | MozUserInputProperty[],
  "-ms-ime-mode"?: ImeModeProperty | ImeModeProperty[],
  "-ms-scrollbar-3dlight-color"?: GlobalsString | GlobalsString[],
  "-ms-scrollbar-arrow-color"?: GlobalsString | GlobalsString[],
  "-ms-scrollbar-base-color"?: GlobalsString | GlobalsString[],
  "-ms-scrollbar-darkshadow-color"?: GlobalsString | GlobalsString[],
  "-ms-scrollbar-face-color"?: GlobalsString | GlobalsString[],
  "-ms-scrollbar-highlight-color"?: GlobalsString | GlobalsString[],
  "-ms-scrollbar-shadow-color"?: GlobalsString | GlobalsString[],
  "-ms-scrollbar-track-color"?: GlobalsString | GlobalsString[],
  "-o-animation"?: AnimationProperty | AnimationProperty[],
  "-o-animation-delay"?: GlobalsString | GlobalsString[],
  "-o-animation-direction"?: GlobalsString | GlobalsString[],
  "-o-animation-duration"?: GlobalsString | GlobalsString[],
  "-o-animation-fill-mode"?: GlobalsString | GlobalsString[],
  "-o-animation-iteration-count"?: AnimationIterationCountProperty | AnimationIterationCountProperty[],
  "-o-animation-name"?: GlobalsString | GlobalsString[],
  "-o-animation-play-state"?: GlobalsString | GlobalsString[],
  "-o-animation-timing-function"?: GlobalsString | GlobalsString[],
  "-o-background-size"?: BackgroundSizeProperty<TLength> | BackgroundSizeProperty<TLength>[],
  "-o-transform"?: GlobalsString | GlobalsString[],
  "-o-transition"?: GlobalsString | GlobalsString[],
  "-o-transition-delay"?: GlobalsString | GlobalsString[],
  "-o-transition-duration"?: GlobalsString | GlobalsString[],
  "-o-transition-property"?: GlobalsString | GlobalsString[],
  "-o-transition-timing-function"?: GlobalsString | GlobalsString[],
  "-webkit-box-align"?: BoxAlignProperty | BoxAlignProperty[],
  "-webkit-box-direction"?: BoxDirectionProperty | BoxDirectionProperty[],
  "-webkit-box-flex"?: GlobalsNumber | GlobalsNumber[],
  "-webkit-box-flex-group"?: GlobalsNumber | GlobalsNumber[],
  "-webkit-box-lines"?: BoxLinesProperty | BoxLinesProperty[],
  "-webkit-box-ordinal-group"?: GlobalsNumber | GlobalsNumber[],
  "-webkit-box-orient"?: BoxOrientProperty | BoxOrientProperty[],
  "-webkit-box-pack"?: BoxPackProperty | BoxPackProperty[],
  "-webkit-scroll-snap-points-x"?: GlobalsString | GlobalsString[],
  "-webkit-scroll-snap-points-y"?: GlobalsString | GlobalsString[],
};

export type SvgPropertiesHyphenFallback<TLength = string | 0> = {
  "alignment-baseline"?: AlignmentBaselineProperty | AlignmentBaselineProperty[],
  "baseline-shift"?: BaselineShiftProperty<TLength> | BaselineShiftProperty<TLength>[],
  clip?: GlobalsString | GlobalsString[],
  "clip-path"?: GlobalsString | GlobalsString[],
  "clip-rule"?: ClipRuleProperty | ClipRuleProperty[],
  color?: GlobalsString | GlobalsString[],
  "color-interpolation"?: ColorInterpolationProperty | ColorInterpolationProperty[],
  "color-rendering"?: ColorRenderingProperty | ColorRenderingProperty[],
  cursor?: GlobalsString | GlobalsString[],
  direction?: DirectionProperty | DirectionProperty[],
  display?: GlobalsString | GlobalsString[],
  "dominant-baseline"?: DominantBaselineProperty | DominantBaselineProperty[],
  fill?: GlobalsString | GlobalsString[],
  "fill-opacity"?: GlobalsNumber | GlobalsNumber[],
  "fill-rule"?: FillRuleProperty | FillRuleProperty[],
  filter?: GlobalsString | GlobalsString[],
  "flood-color"?: GlobalsString | GlobalsString[],
  "flood-opacity"?: GlobalsNumber | GlobalsNumber[],
  font?: GlobalsString | GlobalsString[],
  "font-family"?: GlobalsString | GlobalsString[],
  "font-size"?: FontSizeProperty<TLength> | FontSizeProperty<TLength>[],
  "font-size-adjust"?: FontSizeAdjustProperty | FontSizeAdjustProperty[],
  "font-stretch"?: GlobalsString | GlobalsString[],
  "font-style"?: GlobalsString | GlobalsString[],
  "font-variant"?: GlobalsString | GlobalsString[],
  "font-weight"?: FontWeightProperty | FontWeightProperty[],
  "glyph-orientation-vertical"?: GlyphOrientationVerticalProperty | GlyphOrientationVerticalProperty[],
  "image-rendering"?: ImageRenderingProperty | ImageRenderingProperty[],
  "letter-spacing"?: LetterSpacingProperty<TLength> | LetterSpacingProperty<TLength>[],
  "lighting-color"?: GlobalsString | GlobalsString[],
  "line-height"?: LineHeightProperty<TLength> | LineHeightProperty<TLength>[],
  marker?: GlobalsString | GlobalsString[],
  "marker-end"?: GlobalsString | GlobalsString[],
  "marker-mid"?: GlobalsString | GlobalsString[],
  "marker-start"?: GlobalsString | GlobalsString[],
  mask?: MaskProperty<TLength> | MaskProperty<TLength>[],
  opacity?: GlobalsNumber | GlobalsNumber[],
  overflow?: GlobalsString | GlobalsString[],
  "paint-order"?: GlobalsString | GlobalsString[],
  "pointer-events"?: PointerEventsProperty | PointerEventsProperty[],
  "shape-rendering"?: ShapeRenderingProperty | ShapeRenderingProperty[],
  "stop-color"?: GlobalsString | GlobalsString[],
  "stop-opacity"?: GlobalsNumber | GlobalsNumber[],
  stroke?: GlobalsString | GlobalsString[],
  "stroke-dasharray"?: StrokeDasharrayProperty<TLength> | StrokeDasharrayProperty<TLength>[],
  "stroke-dashoffset"?: StrokeDashoffsetProperty<TLength> | StrokeDashoffsetProperty<TLength>[],
  "stroke-linecap"?: StrokeLinecapProperty | StrokeLinecapProperty[],
  "stroke-linejoin"?: StrokeLinejoinProperty | StrokeLinejoinProperty[],
  "stroke-miterlimit"?: GlobalsNumber | GlobalsNumber[],
  "stroke-opacity"?: GlobalsNumber | GlobalsNumber[],
  "stroke-width"?: StrokeWidthProperty<TLength> | StrokeWidthProperty<TLength>[],
  "text-anchor"?: TextAnchorProperty | TextAnchorProperty[],
  "text-decoration"?: GlobalsString | GlobalsString[],
  "text-rendering"?: TextRenderingProperty | TextRenderingProperty[],
  "unicode-bidi"?: UnicodeBidiProperty | UnicodeBidiProperty[],
  "vector-effect"?: VectorEffectProperty | VectorEffectProperty[],
  visibility?: VisibilityProperty | VisibilityProperty[],
  "white-space"?: WhiteSpaceProperty | WhiteSpaceProperty[],
  "word-spacing"?: WordSpacingProperty<TLength> | WordSpacingProperty<TLength>[],
  "writing-mode"?: WritingModeProperty | WritingModeProperty[],
};

export type PropertiesHyphenFallback<TLength = string | 0> = StandardPropertiesHyphenFallback<TLength> &
  VendorPropertiesHyphenFallback<TLength> &
  ObsoletePropertiesHyphenFallback<TLength> &
  SvgPropertiesHyphenFallback<TLength>;

export type CounterStyle = {
  additiveSymbols?: string,
  fallback?: string,
  negative?: string,
  pad?: string,
  prefix?: string,
  range?: CounterStyleRangeProperty,
  speakAs?: string,
  suffix?: string,
  symbols?: string,
  system?: string,
};

export type CounterStyleHyphen = {
  "additive-symbols"?: string,
  fallback?: string,
  negative?: string,
  pad?: string,
  prefix?: string,
  range?: CounterStyleRangeProperty,
  "speak-as"?: string,
  suffix?: string,
  symbols?: string,
  system?: string,
};

export type CounterStyleFallback = {
  additiveSymbols?: string | string[],
  fallback?: string | string[],
  negative?: string | string[],
  pad?: string | string[],
  prefix?: string | string[],
  range?: CounterStyleRangeProperty | CounterStyleRangeProperty[],
  speakAs?: string | string[],
  suffix?: string | string[],
  symbols?: string | string[],
  system?: string | string[],
};

export type CounterStyleHyphenFallback = {
  "additive-symbols"?: string | string[],
  fallback?: string | string[],
  negative?: string | string[],
  pad?: string | string[],
  prefix?: string | string[],
  range?: CounterStyleRangeProperty | CounterStyleRangeProperty[],
  "speak-as"?: string | string[],
  suffix?: string | string[],
  symbols?: string | string[],
  system?: string | string[],
};

export type FontFace = {
  MozFontFeatureSettings?: string,
  fontDisplay?: FontFaceFontDisplayProperty,
  fontFamily?: string,
  fontFeatureSettings?: string,
  fontStretch?: string,
  fontStyle?: string,
  fontVariant?: string,
  fontVariationSettings?: string,
  fontWeight?: FontFaceFontWeightProperty,
  src?: string,
  unicodeRange?: string,
};

export type FontFaceHyphen = {
  "-moz-font-feature-settings"?: string,
  "font-display"?: FontFaceFontDisplayProperty,
  "font-family"?: string,
  "font-feature-settings"?: string,
  "font-stretch"?: string,
  "font-style"?: string,
  "font-variant"?: string,
  "font-variation-settings"?: string,
  "font-weight"?: FontFaceFontWeightProperty,
  src?: string,
  "unicode-range"?: string,
};

export type FontFaceFallback = {
  MozFontFeatureSettings?: string | string[],
  fontDisplay?: FontFaceFontDisplayProperty | FontFaceFontDisplayProperty[],
  fontFamily?: string | string[],
  fontFeatureSettings?: string | string[],
  fontStretch?: string | string[],
  fontStyle?: string | string[],
  fontVariant?: string | string[],
  fontVariationSettings?: string | string[],
  fontWeight?: FontFaceFontWeightProperty | FontFaceFontWeightProperty[],
  src?: string | string[],
  unicodeRange?: string | string[],
};

export type FontFaceHyphenFallback = {
  "-moz-font-feature-settings"?: string | string[],
  "font-display"?: FontFaceFontDisplayProperty | FontFaceFontDisplayProperty[],
  "font-family"?: string | string[],
  "font-feature-settings"?: string | string[],
  "font-stretch"?: string | string[],
  "font-style"?: string | string[],
  "font-variant"?: string | string[],
  "font-variation-settings"?: string | string[],
  "font-weight"?: FontFaceFontWeightProperty | FontFaceFontWeightProperty[],
  src?: string | string[],
  "unicode-range"?: string | string[],
};

export type Page<TLength = string | 0> = {
  bleed?: PageBleedProperty<TLength>,
  marks?: string,
};

export type PageHyphen<TLength = string | 0> = {
  bleed?: PageBleedProperty<TLength>,
  marks?: string,
};

export type PageFallback<TLength = string | 0> = {
  bleed?: PageBleedProperty<TLength> | PageBleedProperty<TLength>[],
  marks?: string | string[],
};

export type PageHyphenFallback<TLength = string | 0> = {
  bleed?: PageBleedProperty<TLength> | PageBleedProperty<TLength>[],
  marks?: string | string[],
};

export type Viewport<TLength = string | 0> = {
  msHeight?: ViewportHeightProperty<TLength>,
  msMaxHeight?: ViewportMaxHeightProperty<TLength>,
  msMaxWidth?: ViewportMaxWidthProperty<TLength>,
  msMaxZoom?: ViewportMaxZoomProperty,
  msMinHeight?: ViewportMinHeightProperty<TLength>,
  msMinWidth?: ViewportMinWidthProperty<TLength>,
  msMinZoom?: ViewportMinZoomProperty,
  msOrientation?: ViewportOrientationProperty,
  msUserZoom?: ViewportUserZoomProperty,
  msWidth?: ViewportWidthProperty<TLength>,
  msZoom?: ViewportZoomProperty,
  OOrientation?: ViewportOrientationProperty,
  height?: ViewportHeightProperty<TLength>,
  maxHeight?: ViewportMaxHeightProperty<TLength>,
  maxWidth?: ViewportMaxWidthProperty<TLength>,
  maxZoom?: ViewportMaxZoomProperty,
  minHeight?: ViewportMinHeightProperty<TLength>,
  minWidth?: ViewportMinWidthProperty<TLength>,
  minZoom?: ViewportMinZoomProperty,
  orientation?: ViewportOrientationProperty,
  userZoom?: ViewportUserZoomProperty,
  width?: ViewportWidthProperty<TLength>,
  zoom?: ViewportZoomProperty,
};

export type ViewportHyphen<TLength = string | 0> = {
  "-ms-height"?: ViewportHeightProperty<TLength>,
  "-ms-max-height"?: ViewportMaxHeightProperty<TLength>,
  "-ms-max-width"?: ViewportMaxWidthProperty<TLength>,
  "-ms-max-zoom"?: ViewportMaxZoomProperty,
  "-ms-min-height"?: ViewportMinHeightProperty<TLength>,
  "-ms-min-width"?: ViewportMinWidthProperty<TLength>,
  "-ms-min-zoom"?: ViewportMinZoomProperty,
  "-ms-orientation"?: ViewportOrientationProperty,
  "-ms-user-zoom"?: ViewportUserZoomProperty,
  "-ms-width"?: ViewportWidthProperty<TLength>,
  "-ms-zoom"?: ViewportZoomProperty,
  "-o-orientation"?: ViewportOrientationProperty,
  height?: ViewportHeightProperty<TLength>,
  "max-height"?: ViewportMaxHeightProperty<TLength>,
  "max-width"?: ViewportMaxWidthProperty<TLength>,
  "max-zoom"?: ViewportMaxZoomProperty,
  "min-height"?: ViewportMinHeightProperty<TLength>,
  "min-width"?: ViewportMinWidthProperty<TLength>,
  "min-zoom"?: ViewportMinZoomProperty,
  orientation?: ViewportOrientationProperty,
  "user-zoom"?: ViewportUserZoomProperty,
  width?: ViewportWidthProperty<TLength>,
  zoom?: ViewportZoomProperty,
};

export type ViewportFallback<TLength = string | 0> = {
  msHeight?: ViewportHeightProperty<TLength> | ViewportHeightProperty<TLength>[],
  msMaxHeight?: ViewportMaxHeightProperty<TLength> | ViewportMaxHeightProperty<TLength>[],
  msMaxWidth?: ViewportMaxWidthProperty<TLength> | ViewportMaxWidthProperty<TLength>[],
  msMaxZoom?: ViewportMaxZoomProperty | ViewportMaxZoomProperty[],
  msMinHeight?: ViewportMinHeightProperty<TLength> | ViewportMinHeightProperty<TLength>[],
  msMinWidth?: ViewportMinWidthProperty<TLength> | ViewportMinWidthProperty<TLength>[],
  msMinZoom?: ViewportMinZoomProperty | ViewportMinZoomProperty[],
  msOrientation?: ViewportOrientationProperty | ViewportOrientationProperty[],
  msUserZoom?: ViewportUserZoomProperty | ViewportUserZoomProperty[],
  msWidth?: ViewportWidthProperty<TLength> | ViewportWidthProperty<TLength>[],
  msZoom?: ViewportZoomProperty | ViewportZoomProperty[],
  OOrientation?: ViewportOrientationProperty | ViewportOrientationProperty[],
  height?: ViewportHeightProperty<TLength> | ViewportHeightProperty<TLength>[],
  maxHeight?: ViewportMaxHeightProperty<TLength> | ViewportMaxHeightProperty<TLength>[],
  maxWidth?: ViewportMaxWidthProperty<TLength> | ViewportMaxWidthProperty<TLength>[],
  maxZoom?: ViewportMaxZoomProperty | ViewportMaxZoomProperty[],
  minHeight?: ViewportMinHeightProperty<TLength> | ViewportMinHeightProperty<TLength>[],
  minWidth?: ViewportMinWidthProperty<TLength> | ViewportMinWidthProperty<TLength>[],
  minZoom?: ViewportMinZoomProperty | ViewportMinZoomProperty[],
  orientation?: ViewportOrientationProperty | ViewportOrientationProperty[],
  userZoom?: ViewportUserZoomProperty | ViewportUserZoomProperty[],
  width?: ViewportWidthProperty<TLength> | ViewportWidthProperty<TLength>[],
  zoom?: ViewportZoomProperty | ViewportZoomProperty[],
};

export type ViewportHyphenFallback<TLength = string | 0> = {
  "-ms-height"?: ViewportHeightProperty<TLength> | ViewportHeightProperty<TLength>[],
  "-ms-max-height"?: ViewportMaxHeightProperty<TLength> | ViewportMaxHeightProperty<TLength>[],
  "-ms-max-width"?: ViewportMaxWidthProperty<TLength> | ViewportMaxWidthProperty<TLength>[],
  "-ms-max-zoom"?: ViewportMaxZoomProperty | ViewportMaxZoomProperty[],
  "-ms-min-height"?: ViewportMinHeightProperty<TLength> | ViewportMinHeightProperty<TLength>[],
  "-ms-min-width"?: ViewportMinWidthProperty<TLength> | ViewportMinWidthProperty<TLength>[],
  "-ms-min-zoom"?: ViewportMinZoomProperty | ViewportMinZoomProperty[],
  "-ms-orientation"?: ViewportOrientationProperty | ViewportOrientationProperty[],
  "-ms-user-zoom"?: ViewportUserZoomProperty | ViewportUserZoomProperty[],
  "-ms-width"?: ViewportWidthProperty<TLength> | ViewportWidthProperty<TLength>[],
  "-ms-zoom"?: ViewportZoomProperty | ViewportZoomProperty[],
  "-o-orientation"?: ViewportOrientationProperty | ViewportOrientationProperty[],
  height?: ViewportHeightProperty<TLength> | ViewportHeightProperty<TLength>[],
  "max-height"?: ViewportMaxHeightProperty<TLength> | ViewportMaxHeightProperty<TLength>[],
  "max-width"?: ViewportMaxWidthProperty<TLength> | ViewportMaxWidthProperty<TLength>[],
  "max-zoom"?: ViewportMaxZoomProperty | ViewportMaxZoomProperty[],
  "min-height"?: ViewportMinHeightProperty<TLength> | ViewportMinHeightProperty<TLength>[],
  "min-width"?: ViewportMinWidthProperty<TLength> | ViewportMinWidthProperty<TLength>[],
  "min-zoom"?: ViewportMinZoomProperty | ViewportMinZoomProperty[],
  orientation?: ViewportOrientationProperty | ViewportOrientationProperty[],
  "user-zoom"?: ViewportUserZoomProperty | ViewportUserZoomProperty[],
  width?: ViewportWidthProperty<TLength> | ViewportWidthProperty<TLength>[],
  zoom?: ViewportZoomProperty | ViewportZoomProperty[],
};

export type AtRules =
  | "@charset"
  | "@counter-style"
  | "@document"
  | "@font-face"
  | "@font-feature-values"
  | "@import"
  | "@keyframes"
  | "@media"
  | "@namespace"
  | "@page"
  | "@supports"
  | "@viewport";

export type AdvancedPseudos =
  | ":-moz-any()"
  | ":-moz-dir"
  | ":-webkit-any()"
  | "::cue"
  | "::slotted"
  | ":dir"
  | ":has"
  | ":host"
  | ":host-context"
  | ":is"
  | ":lang"
  | ":matches()"
  | ":not"
  | ":nth-child"
  | ":nth-last-child"
  | ":nth-last-of-type"
  | ":nth-of-type"
  | ":where";

export type SimplePseudos =
  | ":-moz-any-link"
  | ":-moz-full-screen"
  | ":-moz-placeholder"
  | ":-moz-read-only"
  | ":-moz-read-write"
  | ":-ms-fullscreen"
  | ":-ms-input-placeholder"
  | ":-webkit-any-link"
  | ":-webkit-full-screen"
  | "::-moz-placeholder"
  | "::-moz-progress-bar"
  | "::-moz-range-progress"
  | "::-moz-range-thumb"
  | "::-moz-range-track"
  | "::-moz-selection"
  | "::-ms-backdrop"
  | "::-ms-browse"
  | "::-ms-check"
  | "::-ms-clear"
  | "::-ms-fill"
  | "::-ms-fill-lower"
  | "::-ms-fill-upper"
  | "::-ms-reveal"
  | "::-ms-thumb"
  | "::-ms-ticks-after"
  | "::-ms-ticks-before"
  | "::-ms-tooltip"
  | "::-ms-track"
  | "::-ms-value"
  | "::-webkit-backdrop"
  | "::-webkit-input-placeholder"
  | "::-webkit-progress-bar"
  | "::-webkit-progress-inner-value"
  | "::-webkit-progress-value"
  | "::-webkit-slider-runnable-track"
  | "::-webkit-slider-thumb"
  | "::after"
  | "::backdrop"
  | "::before"
  | "::cue"
  | "::first-letter"
  | "::first-line"
  | "::grammar-error"
  | "::placeholder"
  | "::selection"
  | "::spelling-error"
  | ":active"
  | ":after"
  | ":any-link"
  | ":before"
  | ":blank"
  | ":checked"
  | ":default"
  | ":defined"
  | ":disabled"
  | ":empty"
  | ":enabled"
  | ":first"
  | ":first-child"
  | ":first-letter"
  | ":first-line"
  | ":first-of-type"
  | ":focus"
  | ":focus-visible"
  | ":focus-within"
  | ":fullscreen"
  | ":hover"
  | ":in-range"
  | ":indeterminate"
  | ":invalid"
  | ":last-child"
  | ":last-of-type"
  | ":left"
  | ":link"
  | ":only-child"
  | ":only-of-type"
  | ":optional"
  | ":out-of-range"
  | ":placeholder-shown"
  | ":read-only"
  | ":read-write"
  | ":required"
  | ":right"
  | ":root"
  | ":scope"
  | ":target"
  | ":valid"
  | ":visited";

export type Pseudos = AdvancedPseudos | SimplePseudos;

export type HtmlAttributes =
  | "[-webkit-dropzone]"
  | "[-webkit-slot]"
  | "[abbr]"
  | "[accept-charset]"
  | "[accept]"
  | "[accesskey]"
  | "[action]"
  | "[align]"
  | "[alink]"
  | "[allow]"
  | "[allowfullscreen]"
  | "[allowpaymentrequest]"
  | "[alt]"
  | "[archive]"
  | "[async]"
  | "[autobuffer]"
  | "[autocapitalize]"
  | "[autocomplete]"
  | "[autofocus]"
  | "[autoplay]"
  | "[axis]"
  | "[background]"
  | "[behavior]"
  | "[bgcolor]"
  | "[border]"
  | "[bottommargin]"
  | "[buffered]"
  | "[cellpadding]"
  | "[cellspacing]"
  | "[char]"
  | "[charoff]"
  | "[charset]"
  | "[checked]"
  | "[cite]"
  | "[class]"
  | "[classid]"
  | "[clear]"
  | "[code]"
  | "[codebase]"
  | "[codetype]"
  | "[color]"
  | "[cols]"
  | "[colspan]"
  | "[command]"
  | "[compact]"
  | "[content]"
  | "[contenteditable]"
  | "[contextmenu]"
  | "[controls]"
  | "[coords]"
  | "[crossorigin]"
  | "[data]"
  | "[datafld]"
  | "[datasrc]"
  | "[datetime]"
  | "[declare]"
  | "[decoding]"
  | "[default]"
  | "[defer]"
  | "[dir]"
  | "[direction]"
  | "[disabled]"
  | "[download]"
  | "[draggable]"
  | "[dropzone]"
  | "[enctype]"
  | "[face]"
  | "[for]"
  | "[form]"
  | "[formaction]"
  | "[formenctype]"
  | "[formmethod]"
  | "[formnovalidate]"
  | "[formtarget]"
  | "[frame]"
  | "[frameborder]"
  | "[headers]"
  | "[height]"
  | "[hidden]"
  | "[high]"
  | "[href]"
  | "[hreflang]"
  | "[hspace]"
  | "[http-equiv]"
  | "[icon]"
  | "[id]"
  | "[inputmode]"
  | "[integrity]"
  | "[intrinsicsize]"
  | "[is]"
  | "[ismap]"
  | "[itemid]"
  | "[itemprop]"
  | "[itemref]"
  | "[itemscope]"
  | "[itemtype]"
  | "[kind]"
  | "[label]"
  | "[lang]"
  | "[language]"
  | "[leftmargin]"
  | "[link]"
  | "[longdesc]"
  | "[loop]"
  | "[low]"
  | "[manifest]"
  | "[marginheight]"
  | "[marginwidth]"
  | "[max]"
  | "[maxlength]"
  | "[mayscript]"
  | "[media]"
  | "[method]"
  | "[methods]"
  | "[min]"
  | "[minlength]"
  | "[moz-opaque]"
  | "[mozallowfullscreen]"
  | "[mozbrowser]"
  | "[mozcurrentsampleoffset]"
  | "[msallowfullscreen]"
  | "[multiple]"
  | "[muted]"
  | "[name]"
  | "[nohref]"
  | "[nomodule]"
  | "[noresize]"
  | "[noshade]"
  | "[novalidate]"
  | "[nowrap]"
  | "[object]"
  | "[onafterprint]"
  | "[onbeforeprint]"
  | "[onbeforeunload]"
  | "[onblur]"
  | "[onerror]"
  | "[onfocus]"
  | "[onhashchange]"
  | "[onlanguagechange]"
  | "[onload]"
  | "[onmessage]"
  | "[onoffline]"
  | "[ononline]"
  | "[onpopstate]"
  | "[onredo]"
  | "[onresize]"
  | "[onstorage]"
  | "[onundo]"
  | "[onunload]"
  | "[open]"
  | "[optimum]"
  | "[ping]"
  | "[placeholder]"
  | "[played]"
  | "[poster]"
  | "[prefetch]"
  | "[preload]"
  | "[profile]"
  | "[prompt]"
  | "[radiogroup]"
  | "[readonly]"
  | "[referrerPolicy]"
  | "[referrerpolicy]"
  | "[rel]"
  | "[required]"
  | "[rev]"
  | "[reversed]"
  | "[rightmargin]"
  | "[rows]"
  | "[rowspan]"
  | "[rules]"
  | "[sandbox-allow-modals]"
  | "[sandbox-allow-popups-to-escape-sandbox]"
  | "[sandbox-allow-popups]"
  | "[sandbox-allow-presentation]"
  | "[sandbox-allow-storage-access-by-user-activation]"
  | "[sandbox-allow-top-navigation-by-user-activation]"
  | "[sandbox]"
  | "[scope]"
  | "[scoped]"
  | "[scrollamount]"
  | "[scrolldelay]"
  | "[scrolling]"
  | "[selected]"
  | "[shape]"
  | "[size]"
  | "[sizes]"
  | "[slot]"
  | "[span]"
  | "[spellcheck]"
  | "[src]"
  | "[srcdoc]"
  | "[srclang]"
  | "[srcset]"
  | "[standby]"
  | "[start]"
  | "[style]"
  | "[summary]"
  | "[tabindex]"
  | "[target]"
  | "[text]"
  | "[title]"
  | "[topmargin]"
  | "[translate]"
  | "[truespeed]"
  | "[type]"
  | "[typemustmatch]"
  | "[usemap]"
  | "[valign]"
  | "[value]"
  | "[valuetype]"
  | "[version]"
  | "[vlink]"
  | "[volume]"
  | "[vspace]"
  | "[webkitallowfullscreen]"
  | "[width]"
  | "[wrap]"
  | "[xmlns]";

export type SvgAttributes =
  | "[accent-height]"
  | "[alignment-baseline]"
  | "[allowReorder]"
  | "[alphabetic]"
  | "[animation]"
  | "[arabic-form]"
  | "[ascent]"
  | "[attributeName]"
  | "[attributeType]"
  | "[azimuth]"
  | "[baseFrequency]"
  | "[baseProfile]"
  | "[baseline-shift]"
  | "[bbox]"
  | "[begin]"
  | "[bias]"
  | "[by]"
  | "[calcMode]"
  | "[cap-height]"
  | "[class]"
  | "[clip-path]"
  | "[clip-rule]"
  | "[clipPathUnits]"
  | "[clip]"
  | "[color-interpolation-filters]"
  | "[color-interpolation]"
  | "[color-profile]"
  | "[color-rendering]"
  | "[color]"
  | "[contentScriptType]"
  | "[contentStyleType]"
  | "[cursor]"
  | "[cx]"
  | "[cy]"
  | "[d]"
  | "[descent]"
  | "[diffuseConstant]"
  | "[direction]"
  | "[display]"
  | "[divisor]"
  | "[document]"
  | "[dominant-baseline]"
  | "[download]"
  | "[dur]"
  | "[dx]"
  | "[dy]"
  | "[edgeMode]"
  | "[elevation]"
  | "[enable-background]"
  | "[externalResourcesRequired]"
  | "[fill-opacity]"
  | "[fill-rule]"
  | "[fill]"
  | "[filterRes]"
  | "[filterUnits]"
  | "[filter]"
  | "[flood-color]"
  | "[flood-opacity]"
  | "[font-family]"
  | "[font-size-adjust]"
  | "[font-size]"
  | "[font-stretch]"
  | "[font-style]"
  | "[font-variant]"
  | "[font-weight]"
  | "[format]"
  | "[fr]"
  | "[from]"
  | "[fx]"
  | "[fy]"
  | "[g1]"
  | "[g2]"
  | "[global]"
  | "[glyph-name]"
  | "[glyph-orientation-horizontal]"
  | "[glyph-orientation-vertical]"
  | "[glyphRef]"
  | "[gradientTransform]"
  | "[gradientUnits]"
  | "[graphical]"
  | "[hanging]"
  | "[hatchContentUnits]"
  | "[hatchUnits]"
  | "[height]"
  | "[horiz-adv-x]"
  | "[horiz-origin-x]"
  | "[horiz-origin-y]"
  | "[href]"
  | "[hreflang]"
  | "[id]"
  | "[ideographic]"
  | "[image-rendering]"
  | "[in2]"
  | "[in]"
  | "[k1]"
  | "[k2]"
  | "[k3]"
  | "[k4]"
  | "[k]"
  | "[kernelMatrix]"
  | "[kernelUnitLength]"
  | "[kerning]"
  | "[keyPoints]"
  | "[lang]"
  | "[lengthAdjust]"
  | "[letter-spacing]"
  | "[lighterForError]"
  | "[lighting-color]"
  | "[limitingConeAngle]"
  | "[local]"
  | "[marker-end]"
  | "[marker-mid]"
  | "[marker-start]"
  | "[markerHeight]"
  | "[markerUnits]"
  | "[markerWidth]"
  | "[maskContentUnits]"
  | "[maskUnits]"
  | "[mask]"
  | "[mathematical]"
  | "[media]"
  | "[method]"
  | "[mode]"
  | "[name]"
  | "[numOctaves]"
  | "[offset]"
  | "[opacity]"
  | "[operator]"
  | "[order]"
  | "[orient]"
  | "[orientation]"
  | "[origin]"
  | "[overflow]"
  | "[overline-position]"
  | "[overline-thickness]"
  | "[paint-order]"
  | "[panose-1]"
  | "[path]"
  | "[patternContentUnits]"
  | "[patternTransform]"
  | "[patternUnits]"
  | "[ping]"
  | "[pitch]"
  | "[pointer-events]"
  | "[pointsAtX]"
  | "[pointsAtY]"
  | "[pointsAtZ]"
  | "[points]"
  | "[preserveAlpha]"
  | "[preserveAspectRatio]"
  | "[primitiveUnits]"
  | "[r]"
  | "[radius]"
  | "[refX]"
  | "[refY]"
  | "[referrerPolicy]"
  | "[rel]"
  | "[rendering-intent]"
  | "[repeatCount]"
  | "[requiredExtensions]"
  | "[requiredFeatures]"
  | "[rotate]"
  | "[rx]"
  | "[ry]"
  | "[scale]"
  | "[seed]"
  | "[shape-rendering]"
  | "[side]"
  | "[slope]"
  | "[solid-color]"
  | "[solid-opacity]"
  | "[spacing]"
  | "[specularConstant]"
  | "[specularExponent]"
  | "[spreadMethod]"
  | "[startOffset]"
  | "[stdDeviation]"
  | "[stemh]"
  | "[stemv]"
  | "[stitchTiles]"
  | "[stop-color]"
  | "[stop-opacity]"
  | "[strikethrough-position]"
  | "[strikethrough-thickness]"
  | "[string]"
  | "[stroke-dasharray]"
  | "[stroke-dashoffset]"
  | "[stroke-linecap]"
  | "[stroke-linejoin]"
  | "[stroke-miterlimit]"
  | "[stroke-opacity]"
  | "[stroke-width]"
  | "[stroke]"
  | "[style]"
  | "[surfaceScale]"
  | "[systemLanguage]"
  | "[tabindex]"
  | "[targetX]"
  | "[targetY]"
  | "[target]"
  | "[text-anchor]"
  | "[text-decoration]"
  | "[text-overflow]"
  | "[text-rendering]"
  | "[textLength]"
  | "[title]"
  | "[to]"
  | "[transform]"
  | "[type]"
  | "[u1]"
  | "[u2]"
  | "[underline-position]"
  | "[underline-thickness]"
  | "[unicode-bidi]"
  | "[unicode-range]"
  | "[unicode]"
  | "[units-per-em]"
  | "[v-alphabetic]"
  | "[v-hanging]"
  | "[v-ideographic]"
  | "[v-mathematical]"
  | "[values]"
  | "[vector-effect]"
  | "[version]"
  | "[vert-adv-y]"
  | "[vert-origin-x]"
  | "[vert-origin-y]"
  | "[viewBox]"
  | "[viewTarget]"
  | "[visibility]"
  | "[white-space]"
  | "[width]"
  | "[widths]"
  | "[word-spacing]"
  | "[writing-mode]"
  | "[x-height]"
  | "[x1]"
  | "[x2]"
  | "[xChannelSelector]"
  | "[x]"
  | "[y1]"
  | "[y2]"
  | "[yChannelSelector]"
  | "[y]"
  | "[z]"
  | "[zoomAndPan]";

export type Globals = "-moz-initial" | "inherit" | "initial" | "revert" | "unset";

type GlobalsString = Globals | string;

type GlobalsNumber = Globals | number;

export type AnimationProperty = Globals | string | number;

export type AnimationIterationCountProperty = Globals | string | number;

export type AppearanceProperty = Globals | "none";

export type BackfaceVisibilityProperty = Globals | "hidden" | "visible";

export type BackgroundProperty<TLength> = Globals | TLength | string;

export type BackgroundPositionProperty<TLength> = Globals | TLength | string;

export type BackgroundPositionXProperty<TLength> = Globals | TLength | string;

export type BackgroundPositionYProperty<TLength> = Globals | TLength | string;

export type BackgroundSizeProperty<TLength> = Globals | TLength | string;

export type BlockSizeProperty<TLength> = Globals | TLength | string;

export type BorderProperty<TLength> = Globals | TLength | string;

export type BorderBlockProperty<TLength> = Globals | TLength | string;

export type BorderBlockEndProperty<TLength> = Globals | TLength | string;

export type BorderBlockEndStyleProperty = Globals | "dashed" | "dotted" | "double" | "groove" | "hidden" | "inset" | "none" | "outset" | "ridge" | "solid";

export type BorderBlockEndWidthProperty<TLength> = Globals | TLength | "medium" | "thick" | "thin";

export type BorderBlockStartProperty<TLength> = Globals | TLength | string;

export type BorderBlockStartStyleProperty = Globals | "dashed" | "dotted" | "double" | "groove" | "hidden" | "inset" | "none" | "outset" | "ridge" | "solid";

export type BorderBlockStartWidthProperty<TLength> = Globals | TLength | "medium" | "thick" | "thin";

export type BorderBlockStyleProperty = Globals | "dashed" | "dotted" | "double" | "groove" | "hidden" | "inset" | "none" | "outset" | "ridge" | "solid";

export type BorderBlockWidthProperty<TLength> = Globals | TLength | "medium" | "thick" | "thin";

export type BorderBottomProperty<TLength> = Globals | TLength | string;

export type BorderBottomLeftRadiusProperty<TLength> = Globals | TLength | string;

export type BorderBottomRightRadiusProperty<TLength> = Globals | TLength | string;

export type BorderBottomStyleProperty = Globals | "dashed" | "dotted" | "double" | "groove" | "hidden" | "inset" | "none" | "outset" | "ridge" | "solid";

export type BorderBottomWidthProperty<TLength> = Globals | TLength | "medium" | "thick" | "thin";

export type BorderCollapseProperty = Globals | "collapse" | "separate";

export type BorderEndEndRadiusProperty<TLength> = Globals | TLength | string;

export type BorderEndStartRadiusProperty<TLength> = Globals | TLength | string;

export type BorderImageProperty = Globals | string | number;

export type BorderImageOutsetProperty<TLength> = Globals | TLength | string | number;

export type BorderImageSliceProperty = Globals | string | number;

export type BorderImageWidthProperty<TLength> = Globals | TLength | string | number;

export type BorderInlineProperty<TLength> = Globals | TLength | string;

export type BorderInlineEndProperty<TLength> = Globals | TLength | string;

export type BorderInlineEndStyleProperty = Globals | "dashed" | "dotted" | "double" | "groove" | "hidden" | "inset" | "none" | "outset" | "ridge" | "solid";

export type BorderInlineEndWidthProperty<TLength> = Globals | TLength | "medium" | "thick" | "thin";

export type BorderInlineStartProperty<TLength> = Globals | TLength | string;

export type BorderInlineStartStyleProperty = Globals | "dashed" | "dotted" | "double" | "groove" | "hidden" | "inset" | "none" | "outset" | "ridge" | "solid";

export type BorderInlineStartWidthProperty<TLength> = Globals | TLength | "medium" | "thick" | "thin";

export type BorderInlineStyleProperty = Globals | "dashed" | "dotted" | "double" | "groove" | "hidden" | "inset" | "none" | "outset" | "ridge" | "solid";

export type BorderInlineWidthProperty<TLength> = Globals | TLength | "medium" | "thick" | "thin";

export type BorderLeftProperty<TLength> = Globals | TLength | string;

export type BorderLeftStyleProperty = Globals | "dashed" | "dotted" | "double" | "groove" | "hidden" | "inset" | "none" | "outset" | "ridge" | "solid";

export type BorderLeftWidthProperty<TLength> = Globals | TLength | "medium" | "thick" | "thin";

export type BorderRadiusProperty<TLength> = Globals | TLength | string;

export type BorderRightProperty<TLength> = Globals | TLength | string;

export type BorderRightStyleProperty = Globals | "dashed" | "dotted" | "double" | "groove" | "hidden" | "inset" | "none" | "outset" | "ridge" | "solid";

export type BorderRightWidthProperty<TLength> = Globals | TLength | "medium" | "thick" | "thin";

export type BorderSpacingProperty<TLength> = Globals | TLength | string;

export type BorderStartEndRadiusProperty<TLength> = Globals | TLength | string;

export type BorderStartStartRadiusProperty<TLength> = Globals | TLength | string;

export type BorderTopProperty<TLength> = Globals | TLength | string;

export type BorderTopLeftRadiusProperty<TLength> = Globals | TLength | string;

export type BorderTopRightRadiusProperty<TLength> = Globals | TLength | string;

export type BorderTopStyleProperty = Globals | "dashed" | "dotted" | "double" | "groove" | "hidden" | "inset" | "none" | "outset" | "ridge" | "solid";

export type BorderTopWidthProperty<TLength> = Globals | TLength | "medium" | "thick" | "thin";

export type BorderWidthProperty<TLength> = Globals | TLength | string;

export type BottomProperty<TLength> = Globals | TLength | string;

export type BoxAlignProperty = Globals | "baseline" | "center" | "end" | "start" | "stretch";

export type BoxDecorationBreakProperty = Globals | "clone" | "slice";

export type BoxDirectionProperty = Globals | "inherit" | "normal" | "reverse";

export type BoxLinesProperty = Globals | "multiple" | "single";

export type BoxOrientProperty = Globals | "block-axis" | "horizontal" | "inherit" | "inline-axis" | "vertical";

export type BoxPackProperty = Globals | "center" | "end" | "justify" | "start";

export type BoxSizingProperty = Globals | "border-box" | "content-box";

export type BreakAfterProperty = Globals | "auto" | "avoid" | "avoid-column" | "avoid-page" | "avoid-region" | "column" | "left" | "page" | "recto" | "region" | "right" | "verso";

export type BreakBeforeProperty = Globals | "auto" | "avoid" | "avoid-column" | "avoid-page" | "avoid-region" | "column" | "left" | "page" | "recto" | "region" | "right" | "verso";

export type BreakInsideProperty = Globals | "auto" | "avoid" | "avoid-column" | "avoid-page" | "avoid-region";

export type CaptionSideProperty = Globals | "block-end" | "block-start" | "bottom" | "inline-end" | "inline-start" | "top";

export type ClearProperty = Globals | "both" | "inline-end" | "inline-start" | "left" | "none" | "right";

export type ColorAdjustProperty = Globals | "economy" | "exact";

export type ColumnCountProperty = Globals | "auto" | number;

export type ColumnFillProperty = Globals | "auto" | "balance" | "balance-all";

export type ColumnGapProperty<TLength> = Globals | TLength | string;

export type ColumnRuleProperty<TLength> = Globals | TLength | string;

export type ColumnRuleWidthProperty<TLength> = Globals | TLength | string;

export type ColumnSpanProperty = Globals | "all" | "none";

export type ColumnWidthProperty<TLength> = Globals | TLength | "auto";

export type ColumnsProperty<TLength> = Globals | TLength | string | number;

export type DirectionProperty = Globals | "ltr" | "rtl";

export type EmptyCellsProperty = Globals | "hide" | "show";

export type FlexProperty<TLength> = Globals | TLength | string | number;

export type FlexBasisProperty<TLength> = Globals | TLength | string;

export type FlexDirectionProperty = Globals | "column" | "column-reverse" | "row" | "row-reverse";

export type FlexWrapProperty = Globals | "nowrap" | "wrap" | "wrap-reverse";

export type FloatProperty = Globals | "inline-end" | "inline-start" | "left" | "none" | "right";

export type FontKerningProperty = Globals | "auto" | "none" | "normal";

export type FontOpticalSizingProperty = Globals | "auto" | "none";

export type FontSizeProperty<TLength> = Globals | TLength | string;

export type FontSizeAdjustProperty = Globals | "none" | number;

export type FontVariantCapsProperty = Globals | "all-petite-caps" | "all-small-caps" | "normal" | "petite-caps" | "small-caps" | "titling-caps" | "unicase";

export type FontVariantPositionProperty = Globals | "normal" | "sub" | "super";

export type FontWeightProperty = Globals | "bold" | "bolder" | "lighter" | "normal" | number;

export type GapProperty<TLength> = Globals | TLength | string;

export type GridAreaProperty = Globals | string | number;

export type GridAutoColumnsProperty<TLength> = Globals | TLength | string;

export type GridAutoRowsProperty<TLength> = Globals | TLength | string;

export type GridColumnProperty = Globals | string | number;

export type GridColumnEndProperty = Globals | string | number;

export type GridColumnGapProperty<TLength> = Globals | TLength | string;

export type GridColumnStartProperty = Globals | string | number;

export type GridGapProperty<TLength> = Globals | TLength | string;

export type GridRowProperty = Globals | string | number;

export type GridRowEndProperty = Globals | string | number;

export type GridRowGapProperty<TLength> = Globals | TLength | string;

export type GridRowStartProperty = Globals | string | number;

export type GridTemplateColumnsProperty<TLength> = Globals | TLength | string;

export type GridTemplateRowsProperty<TLength> = Globals | TLength | string;

export type HeightProperty<TLength> = Globals | TLength | string;

export type HyphensProperty = Globals | "auto" | "manual" | "none";

export type ImageRenderingProperty = Globals | "-moz-crisp-edges" | "-o-crisp-edges" | "-webkit-optimize-contrast" | "auto" | "crisp-edges" | "pixelated";

export type ImeModeProperty = Globals | "active" | "auto" | "disabled" | "inactive" | "normal";

export type InitialLetterProperty = Globals | string | number;

export type InlineSizeProperty<TLength> = Globals | TLength | string;

export type InsetBlockEndProperty<TLength> = Globals | TLength | string;

export type InsetBlockStartProperty<TLength> = Globals | TLength | string;

export type InsetInlineEndProperty<TLength> = Globals | TLength | string;

export type InsetInlineStartProperty<TLength> = Globals | TLength | string;

export type IsolationProperty = Globals | "auto" | "isolate";

export type LeftProperty<TLength> = Globals | TLength | string;

export type LetterSpacingProperty<TLength> = Globals | TLength | "normal";

export type LineBreakProperty = Globals | "auto" | "loose" | "normal" | "strict";

export type LineClampProperty = Globals | "none" | number;

export type LineHeightProperty<TLength> = Globals | TLength | string | number;

export type LineHeightStepProperty<TLength> = Globals | TLength;

export type ListStylePositionProperty = Globals | "inside" | "outside";

export type MarginProperty<TLength> = Globals | TLength | string;

export type MarginBlockProperty<TLength> = Globals | TLength | string;

export type MarginBlockEndProperty<TLength> = Globals | TLength | string;

export type MarginBlockStartProperty<TLength> = Globals | TLength | string;

export type MarginBottomProperty<TLength> = Globals | TLength | string;

export type MarginInlineProperty<TLength> = Globals | TLength | string;

export type MarginInlineEndProperty<TLength> = Globals | TLength | string;

export type MarginInlineStartProperty<TLength> = Globals | TLength | string;

export type MarginLeftProperty<TLength> = Globals | TLength | string;

export type MarginRightProperty<TLength> = Globals | TLength | string;

export type MarginTopProperty<TLength> = Globals | TLength | string;

export type MaskProperty<TLength> = Globals | TLength | string;

export type MaskBorderProperty = Globals | string | number;

export type MaskBorderModeProperty = Globals | "alpha" | "luminance";

export type MaskBorderOutsetProperty<TLength> = Globals | TLength | string | number;

export type MaskBorderSliceProperty = Globals | string | number;

export type MaskBorderWidthProperty<TLength> = Globals | TLength | string | number;

export type MaskPositionProperty<TLength> = Globals | TLength | string;

export type MaskSizeProperty<TLength> = Globals | TLength | string;

export type MaskTypeProperty = Globals | "alpha" | "luminance";

export type MaxBlockSizeProperty<TLength> = Globals | TLength | string;

export type MaxHeightProperty<TLength> = Globals | TLength | string;

export type MaxInlineSizeProperty<TLength> = Globals | TLength | string;

export type MaxLinesProperty = Globals | "none" | number;

export type MaxWidthProperty<TLength> = Globals | TLength | string;

export type MinBlockSizeProperty<TLength> = Globals | TLength | string;

export type MinHeightProperty<TLength> = Globals | TLength | string;

export type MinInlineSizeProperty<TLength> = Globals | TLength | string;

export type MinWidthProperty<TLength> = Globals | TLength | string;

export type MixBlendModeProperty =
  | Globals
  | "color"
  | "color-burn"
  | "color-dodge"
  | "darken"
  | "difference"
  | "exclusion"
  | "hard-light"
  | "hue"
  | "lighten"
  | "luminosity"
  | "multiply"
  | "normal"
  | "overlay"
  | "saturation"
  | "screen"
  | "soft-light";

export type OffsetProperty<TLength> = Globals | TLength | string;

export type OffsetDistanceProperty<TLength> = Globals | TLength | string;

export type ObjectFitProperty = Globals | "contain" | "cover" | "fill" | "none" | "scale-down";

export type ObjectPositionProperty<TLength> = Globals | TLength | string;

export type OffsetAnchorProperty<TLength> = Globals | TLength | string;

export type OffsetPositionProperty<TLength> = Globals | TLength | string;

export type OutlineProperty<TLength> = Globals | TLength | string;

export type OutlineOffsetProperty<TLength> = Globals | TLength;

export type OutlineWidthProperty<TLength> = Globals | TLength | "medium" | "thick" | "thin";

export type OverflowAnchorProperty = Globals | "auto" | "none";

export type OverflowClipBoxProperty = Globals | "content-box" | "padding-box";

export type OverflowWrapProperty = Globals | "anywhere" | "break-word" | "normal";

export type OverflowXProperty = Globals | "auto" | "clip" | "hidden" | "scroll" | "visible";

export type OverflowYProperty = Globals | "auto" | "clip" | "hidden" | "scroll" | "visible";

export type OverscrollBehaviorXProperty = Globals | "auto" | "contain" | "none";

export type OverscrollBehaviorYProperty = Globals | "auto" | "contain" | "none";

export type PaddingProperty<TLength> = Globals | TLength | string;

export type PaddingBlockProperty<TLength> = Globals | TLength | string;

export type PaddingBlockEndProperty<TLength> = Globals | TLength | string;

export type PaddingBlockStartProperty<TLength> = Globals | TLength | string;

export type PaddingBottomProperty<TLength> = Globals | TLength | string;

export type PaddingInlineProperty<TLength> = Globals | TLength | string;

export type PaddingInlineEndProperty<TLength> = Globals | TLength | string;

export type PaddingInlineStartProperty<TLength> = Globals | TLength | string;

export type PaddingLeftProperty<TLength> = Globals | TLength | string;

export type PaddingRightProperty<TLength> = Globals | TLength | string;

export type PaddingTopProperty<TLength> = Globals | TLength | string;

export type PageBreakAfterProperty = Globals | "always" | "auto" | "avoid" | "left" | "recto" | "right" | "verso";

export type PageBreakBeforeProperty = Globals | "always" | "auto" | "avoid" | "left" | "recto" | "right" | "verso";

export type PageBreakInsideProperty = Globals | "auto" | "avoid";

export type PerspectiveProperty<TLength> = Globals | TLength | "none";

export type PerspectiveOriginProperty<TLength> = Globals | TLength | string;

export type PointerEventsProperty = Globals | "all" | "auto" | "fill" | "inherit" | "none" | "painted" | "stroke" | "visible" | "visibleFill" | "visiblePainted" | "visibleStroke";

export type PositionProperty = Globals | "-webkit-sticky" | "absolute" | "fixed" | "relative" | "static" | "sticky";

export type ResizeProperty = Globals | "block" | "both" | "horizontal" | "inline" | "none" | "vertical";

export type RightProperty<TLength> = Globals | TLength | string;

export type RowGapProperty<TLength> = Globals | TLength | string;

export type RubyAlignProperty = Globals | "center" | "space-around" | "space-between" | "start";

export type RubyMergeProperty = Globals | "auto" | "collapse" | "separate";

export type RubyPositionProperty = Globals | "inter-character" | "over" | "under";

export type ScaleProperty = Globals | string | number;

export type ScrollBehaviorProperty = Globals | "auto" | "smooth";

export type ScrollMarginProperty<TLength> = Globals | TLength | string;

export type ScrollMarginBlockProperty<TLength> = Globals | TLength | string;

export type ScrollMarginBlockEndProperty<TLength> = Globals | TLength | "auto";

export type ScrollMarginBlockStartProperty<TLength> = Globals | TLength | "auto";

export type ScrollMarginBottomProperty<TLength> = Globals | TLength | "auto";

export type ScrollMarginInlineEndProperty<TLength> = Globals | TLength | "auto";

export type ScrollMarginInlineStartProperty<TLength> = Globals | TLength | "auto";

export type ScrollMarginLeftProperty<TLength> = Globals | TLength | "auto";

export type ScrollMarginRightProperty<TLength> = Globals | TLength | "auto";

export type ScrollMarginTopProperty<TLength> = Globals | TLength | "auto";

export type ScrollPaddingProperty<TLength> = Globals | TLength | string;

export type ScrollPaddingBlockProperty<TLength> = Globals | TLength | string;

export type ScrollPaddingBlockEndProperty<TLength> = Globals | TLength | string;

export type ScrollPaddingBlockStartProperty<TLength> = Globals | TLength | string;

export type ScrollPaddingBottomProperty<TLength> = Globals | TLength | string;

export type ScrollPaddingInlineProperty<TLength> = Globals | TLength | string;

export type ScrollPaddingInlineEndProperty<TLength> = Globals | TLength | string;

export type ScrollPaddingInlineStartProperty<TLength> = Globals | TLength | string;

export type ScrollPaddingLeftProperty<TLength> = Globals | TLength | string;

export type ScrollPaddingRightProperty<TLength> = Globals | TLength | string;

export type ScrollPaddingTopProperty<TLength> = Globals | TLength | string;

export type ScrollSnapCoordinateProperty<TLength> = Globals | TLength | string;

export type ScrollSnapDestinationProperty<TLength> = Globals | TLength | string;

export type ScrollSnapTypeXProperty = Globals | "mandatory" | "none" | "proximity";

export type ScrollSnapTypeYProperty = Globals | "mandatory" | "none" | "proximity";

export type ScrollbarWidthProperty = Globals | "auto" | "none" | "thin";

export type ShapeMarginProperty<TLength> = Globals | TLength | string;

export type TabSizeProperty<TLength> = Globals | TLength | number;

export type TableLayoutProperty = Globals | "auto" | "fixed";

export type TextAlignProperty = Globals | "center" | "end" | "justify" | "left" | "match-parent" | "right" | "start";

export type TextAlignLastProperty = Globals | "auto" | "center" | "end" | "justify" | "left" | "right" | "start";

export type TextDecorationSkipInkProperty = Globals | "auto" | "none";

export type TextDecorationStyleProperty = Globals | "dashed" | "dotted" | "double" | "solid" | "wavy";

export type TextIndentProperty<TLength> = Globals | TLength | string;

export type TextJustifyProperty = Globals | "auto" | "inter-character" | "inter-word" | "none";

export type TextOrientationProperty = Globals | "mixed" | "sideways" | "upright";

export type TextRenderingProperty = Globals | "auto" | "geometricPrecision" | "optimizeLegibility" | "optimizeSpeed";

export type TextTransformProperty = Globals | "capitalize" | "full-width" | "lowercase" | "none" | "uppercase";

export type TopProperty<TLength> = Globals | TLength | string;

export type TransformBoxProperty = Globals | "border-box" | "fill-box" | "view-box";

export type TransformOriginProperty<TLength> = Globals | TLength | string;

export type TransformStyleProperty = Globals | "flat" | "preserve-3d";

export type TranslateProperty<TLength> = Globals | TLength | string;

export type UnicodeBidiProperty =
  | Globals
  | "-moz-isolate"
  | "-moz-isolate-override"
  | "-moz-plaintext"
  | "-webkit-isolate"
  | "bidi-override"
  | "embed"
  | "isolate"
  | "isolate-override"
  | "normal"
  | "plaintext";

export type UserSelectProperty = Globals | "-moz-none" | "all" | "auto" | "contain" | "element" | "none" | "text";

export type VerticalAlignProperty<TLength> = Globals | TLength | string;

export type VisibilityProperty = Globals | "collapse" | "hidden" | "visible";

export type WhiteSpaceProperty = Globals | "-moz-pre-wrap" | "normal" | "nowrap" | "pre" | "pre-line" | "pre-wrap";

export type WidthProperty<TLength> = Globals | TLength | string;

export type WordBreakProperty = Globals | "break-all" | "break-word" | "keep-all" | "normal";

export type WordSpacingProperty<TLength> = Globals | TLength | string;

export type WordWrapProperty = Globals | "break-word" | "normal";

export type WritingModeProperty = Globals | "horizontal-tb" | "sideways-lr" | "sideways-rl" | "vertical-lr" | "vertical-rl";

export type ZIndexProperty = Globals | "auto" | number;

export type ZoomProperty = Globals | string | number;

export type MozAppearanceProperty =
  | Globals
  | "-moz-mac-unified-toolbar"
  | "-moz-win-borderless-glass"
  | "-moz-win-browsertabbar-toolbox"
  | "-moz-win-communications-toolbox"
  | "-moz-win-communicationstext"
  | "-moz-win-exclude-glass"
  | "-moz-win-glass"
  | "-moz-win-media-toolbox"
  | "-moz-win-mediatext"
  | "-moz-window-button-box"
  | "-moz-window-button-box-maximized"
  | "-moz-window-button-close"
  | "-moz-window-button-maximize"
  | "-moz-window-button-minimize"
  | "-moz-window-button-restore"
  | "-moz-window-frame-bottom"
  | "-moz-window-frame-left"
  | "-moz-window-frame-right"
  | "-moz-window-titlebar"
  | "-moz-window-titlebar-maximized"
  | "button"
  | "button-arrow-down"
  | "button-arrow-next"
  | "button-arrow-previous"
  | "button-arrow-up"
  | "button-bevel"
  | "button-focus"
  | "caret"
  | "checkbox"
  | "checkbox-container"
  | "checkbox-label"
  | "checkmenuitem"
  | "dualbutton"
  | "groupbox"
  | "listbox"
  | "listitem"
  | "menuarrow"
  | "menubar"
  | "menucheckbox"
  | "menuimage"
  | "menuitem"
  | "menuitemtext"
  | "menulist"
  | "menulist-button"
  | "menulist-text"
  | "menulist-textfield"
  | "menupopup"
  | "menuradio"
  | "menuseparator"
  | "meterbar"
  | "meterchunk"
  | "none"
  | "progressbar"
  | "progressbar-vertical"
  | "progresschunk"
  | "progresschunk-vertical"
  | "radio"
  | "radio-container"
  | "radio-label"
  | "radiomenuitem"
  | "range"
  | "range-thumb"
  | "resizer"
  | "resizerpanel"
  | "scale-horizontal"
  | "scale-vertical"
  | "scalethumb-horizontal"
  | "scalethumb-vertical"
  | "scalethumbend"
  | "scalethumbstart"
  | "scalethumbtick"
  | "scrollbarbutton-down"
  | "scrollbarbutton-left"
  | "scrollbarbutton-right"
  | "scrollbarbutton-up"
  | "scrollbarthumb-horizontal"
  | "scrollbarthumb-vertical"
  | "scrollbartrack-horizontal"
  | "scrollbartrack-vertical"
  | "searchfield"
  | "separator"
  | "sheet"
  | "spinner"
  | "spinner-downbutton"
  | "spinner-textfield"
  | "spinner-upbutton"
  | "splitter"
  | "statusbar"
  | "statusbarpanel"
  | "tab"
  | "tab-scroll-arrow-back"
  | "tab-scroll-arrow-forward"
  | "tabpanel"
  | "tabpanels"
  | "textfield"
  | "textfield-multiline"
  | "toolbar"
  | "toolbarbutton"
  | "toolbarbutton-dropdown"
  | "toolbargripper"
  | "toolbox"
  | "tooltip"
  | "treeheader"
  | "treeheadercell"
  | "treeheadersortarrow"
  | "treeitem"
  | "treeline"
  | "treetwisty"
  | "treetwistyopen"
  | "treeview";

export type MozFloatEdgeProperty = Globals | "border-box" | "content-box" | "margin-box" | "padding-box";

export type MozOrientProperty = Globals | "block" | "horizontal" | "inline" | "vertical";

export type MozOutlineRadiusProperty<TLength> = Globals | TLength | string;

export type MozOutlineRadiusBottomleftProperty<TLength> = Globals | TLength | string;

export type MozOutlineRadiusBottomrightProperty<TLength> = Globals | TLength | string;

export type MozOutlineRadiusTopleftProperty<TLength> = Globals | TLength | string;

export type MozOutlineRadiusToprightProperty<TLength> = Globals | TLength | string;

export type MozStackSizingProperty = Globals | "ignore" | "stretch-to-fit";

export type MozTextBlinkProperty = Globals | "blink" | "none";

export type MozUserFocusProperty = Globals | "ignore" | "none" | "normal" | "select-after" | "select-all" | "select-before" | "select-menu" | "select-same";

export type MozUserInputProperty = Globals | "auto" | "disabled" | "enabled" | "none";

export type MozUserModifyProperty = Globals | "read-only" | "read-write" | "write-only";

export type MozWindowDraggingProperty = Globals | "drag" | "no-drag";

export type MozWindowShadowProperty = Globals | "default" | "menu" | "none" | "sheet" | "tooltip";

export type MsAcceleratorProperty = Globals | "false" | "true";

export type MsBlockProgressionProperty = Globals | "bt" | "lr" | "rl" | "tb";

export type MsContentZoomChainingProperty = Globals | "chained" | "none";

export type MsContentZoomSnapTypeProperty = Globals | "mandatory" | "none" | "proximity";

export type MsContentZoomingProperty = Globals | "none" | "zoom";

export type MsHighContrastAdjustProperty = Globals | "auto" | "none";

export type MsHyphenateLimitCharsProperty = Globals | string | number;

export type MsHyphenateLimitLinesProperty = Globals | "no-limit" | number;

export type MsHyphenateLimitZoneProperty<TLength> = Globals | TLength | string;

export type MsImeAlignProperty = Globals | "after" | "auto";

export type MsOverflowStyleProperty = Globals | "-ms-autohiding-scrollbar" | "auto" | "none" | "scrollbar";

export type MsScrollChainingProperty = Globals | "chained" | "none";

export type MsScrollLimitXMaxProperty<TLength> = Globals | TLength | "auto";

export type MsScrollLimitXMinProperty<TLength> = Globals | TLength;

export type MsScrollLimitYMaxProperty<TLength> = Globals | TLength | "auto";

export type MsScrollLimitYMinProperty<TLength> = Globals | TLength;

export type MsScrollRailsProperty = Globals | "none" | "railed";

export type MsScrollSnapTypeProperty = Globals | "mandatory" | "none" | "proximity";

export type MsScrollTranslationProperty = Globals | "none" | "vertical-to-horizontal";

export type MsTextAutospaceProperty = Globals | "ideograph-alpha" | "ideograph-numeric" | "ideograph-parenthesis" | "ideograph-space" | "none";

export type MsTouchSelectProperty = Globals | "grippers" | "none";

export type MsUserSelectProperty = Globals | "element" | "none" | "text";

export type MsWrapFlowProperty = Globals | "auto" | "both" | "clear" | "end" | "maximum" | "start";

export type MsWrapMarginProperty<TLength> = Globals | TLength;

export type MsWrapThroughProperty = Globals | "none" | "wrap";

export type WebkitAppearanceProperty =
  | Globals
  | "button"
  | "button-bevel"
  | "caret"
  | "checkbox"
  | "default-button"
  | "inner-spin-button"
  | "listbox"
  | "listitem"
  | "media-controls-background"
  | "media-controls-fullscreen-background"
  | "media-current-time-display"
  | "media-enter-fullscreen-button"
  | "media-exit-fullscreen-button"
  | "media-fullscreen-button"
  | "media-mute-button"
  | "media-overlay-play-button"
  | "media-play-button"
  | "media-seek-back-button"
  | "media-seek-forward-button"
  | "media-slider"
  | "media-sliderthumb"
  | "media-time-remaining-display"
  | "media-toggle-closed-captions-button"
  | "media-volume-slider"
  | "media-volume-slider-container"
  | "media-volume-sliderthumb"
  | "menulist"
  | "menulist-button"
  | "menulist-text"
  | "menulist-textfield"
  | "meter"
  | "none"
  | "progress-bar"
  | "progress-bar-value"
  | "push-button"
  | "radio"
  | "searchfield"
  | "searchfield-cancel-button"
  | "searchfield-decoration"
  | "searchfield-results-button"
  | "searchfield-results-decoration"
  | "slider-horizontal"
  | "slider-vertical"
  | "sliderthumb-horizontal"
  | "sliderthumb-vertical"
  | "square-button"
  | "textarea"
  | "textfield";

export type WebkitBorderBeforeProperty<TLength> = Globals | TLength | string;

export type WebkitBorderBeforeWidthProperty<TLength> = Globals | TLength | string;

export type WebkitBoxReflectProperty<TLength> = Globals | TLength | string;

export type WebkitLineClampProperty = Globals | "none" | number;

export type WebkitMaskProperty<TLength> = Globals | TLength | string;

export type WebkitMaskPositionProperty<TLength> = Globals | TLength | string;

export type WebkitMaskPositionXProperty<TLength> = Globals | TLength | string;

export type WebkitMaskPositionYProperty<TLength> = Globals | TLength | string;

export type WebkitMaskRepeatXProperty = Globals | "no-repeat" | "repeat" | "round" | "space";

export type WebkitMaskRepeatYProperty = Globals | "no-repeat" | "repeat" | "round" | "space";

export type WebkitMaskSizeProperty<TLength> = Globals | TLength | string;

export type WebkitOverflowScrollingProperty = Globals | "auto" | "touch";

export type WebkitTextStrokeProperty<TLength> = Globals | TLength | string;

export type WebkitTextStrokeWidthProperty<TLength> = Globals | TLength;

export type WebkitTouchCalloutProperty = Globals | "default" | "none";

export type WebkitUserModifyProperty = Globals | "read-only" | "read-write" | "read-write-plaintext-only";

export type AlignmentBaselineProperty =
  | Globals
  | "after-edge"
  | "alphabetic"
  | "auto"
  | "baseline"
  | "before-edge"
  | "central"
  | "hanging"
  | "ideographic"
  | "mathematical"
  | "middle"
  | "text-after-edge"
  | "text-before-edge";

export type BaselineShiftProperty<TLength> = Globals | TLength | string;

export type ClipRuleProperty = Globals | "evenodd" | "nonzero";

export type ColorInterpolationProperty = Globals | "auto" | "linearRGB" | "sRGB";

export type ColorRenderingProperty = Globals | "auto" | "optimizeQuality" | "optimizeSpeed";

export type DominantBaselineProperty =
  | Globals
  | "alphabetic"
  | "auto"
  | "central"
  | "hanging"
  | "ideographic"
  | "mathematical"
  | "middle"
  | "no-change"
  | "reset-size"
  | "text-after-edge"
  | "text-before-edge"
  | "use-script";

export type FillRuleProperty = Globals | "evenodd" | "nonzero";

export type GlyphOrientationVerticalProperty = Globals | string | number;

export type ShapeRenderingProperty = Globals | "auto" | "crispEdges" | "geometricPrecision" | "optimizeSpeed";

export type StrokeDasharrayProperty<TLength> = Globals | TLength | string | number;

export type StrokeDashoffsetProperty<TLength> = Globals | TLength | string;

export type StrokeLinecapProperty = Globals | "butt" | "round" | "square";

export type StrokeLinejoinProperty = Globals | "bevel" | "miter" | "round";

export type StrokeWidthProperty<TLength> = Globals | TLength | string;

export type TextAnchorProperty = Globals | "end" | "middle" | "start";

export type VectorEffectProperty = Globals | "non-scaling-stroke" | "none";

type CounterStyleRangeProperty = string | number;

type FontFaceFontDisplayProperty = "auto" | "block" | "fallback" | "optional" | "swap";

type FontFaceFontWeightProperty = string | number;

type PageBleedProperty<TLength> = TLength | "auto";

type ViewportHeightProperty<TLength> = TLength | string;

type ViewportMaxHeightProperty<TLength> = TLength | string;

type ViewportMaxWidthProperty<TLength> = TLength | string;

type ViewportMaxZoomProperty = string | number;

type ViewportMinHeightProperty<TLength> = TLength | string;

type ViewportMinWidthProperty<TLength> = TLength | string;

type ViewportMinZoomProperty = string | number;

type ViewportOrientationProperty = "auto" | "landscape" | "portrait";

type ViewportUserZoomProperty = "-ms-zoom" | "fixed" | "zoom";

type ViewportWidthProperty<TLength> = TLength | string;

type ViewportZoomProperty = string | number;
